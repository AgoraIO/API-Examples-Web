!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SuperClarityExtensionModule=t():e.SuperClarityExtensionModule=t()}(self,(()=>(()=>{var e={939:e=>{"use strict";var t,n="object"==typeof Reflect?Reflect:null,r=n&&"function"==typeof n.apply?n.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};t=n&&"function"==typeof n.ownKeys?n.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var a=Number.isNaN||function(e){return e!=e};function s(){s.init.call(this)}e.exports=s,e.exports.once=function(e,t){return new Promise((function(n,r){function a(n){e.removeListener(t,s),r(n)}function s(){"function"==typeof e.removeListener&&e.removeListener("error",a),n([].slice.call(arguments))}m(e,t,s,{once:!0}),"error"!==t&&function(e,t,n){"function"==typeof e.on&&m(e,"error",t,{once:!0})}(e,a)}))},s.EventEmitter=s,s.prototype._events=void 0,s.prototype._eventsCount=0,s.prototype._maxListeners=void 0;var o=10;function i(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function u(e){return void 0===e._maxListeners?s.defaultMaxListeners:e._maxListeners}function l(e,t,n,r){var a,s,o,l;if(i(n),void 0===(s=e._events)?(s=e._events=Object.create(null),e._eventsCount=0):(void 0!==s.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),s=e._events),o=s[t]),void 0===o)o=s[t]=n,++e._eventsCount;else if("function"==typeof o?o=s[t]=r?[n,o]:[o,n]:r?o.unshift(n):o.push(n),(a=u(e))>0&&o.length>a&&!o.warned){o.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=e,c.type=t,c.count=o.length,l=c,console&&console.warn&&console.warn(l)}return e}function c(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function p(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},a=c.bind(r);return a.listener=n,r.wrapFn=a,a}function d(e,t,n){var r=e._events;if(void 0===r)return[];var a=r[t];return void 0===a?[]:"function"==typeof a?n?[a.listener||a]:[a]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(a):f(a,a.length)}function h(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function f(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}function m(e,t,n,r){if("function"==typeof e.on)r.once?e.once(t,n):e.on(t,n);else{if("function"!=typeof e.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof e);e.addEventListener(t,(function a(s){r.once&&e.removeEventListener(t,a),n(s)}))}}Object.defineProperty(s,"defaultMaxListeners",{enumerable:!0,get:function(){return o},set:function(e){if("number"!=typeof e||e<0||a(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");o=e}}),s.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},s.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||a(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},s.prototype.getMaxListeners=function(){return u(this)},s.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var a="error"===e,s=this._events;if(void 0!==s)a=a&&void 0===s.error;else if(!a)return!1;if(a){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var i=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw i.context=o,i}var u=s[e];if(void 0===u)return!1;if("function"==typeof u)r(u,this,t);else{var l=u.length,c=f(u,l);for(n=0;n<l;++n)r(c[n],this,t)}return!0},s.prototype.addListener=function(e,t){return l(this,e,t,!1)},s.prototype.on=s.prototype.addListener,s.prototype.prependListener=function(e,t){return l(this,e,t,!0)},s.prototype.once=function(e,t){return i(t),this.on(e,p(this,e,t)),this},s.prototype.prependOnceListener=function(e,t){return i(t),this.prependListener(e,p(this,e,t)),this},s.prototype.removeListener=function(e,t){var n,r,a,s,o;if(i(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(a=-1,s=n.length-1;s>=0;s--)if(n[s]===t||n[s].listener===t){o=n[s].listener,a=s;break}if(a<0)return this;0===a?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,a),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",e,o||t)}return this},s.prototype.off=s.prototype.removeListener,s.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var a,s=Object.keys(n);for(r=0;r<s.length;++r)"removeListener"!==(a=s[r])&&this.removeAllListeners(a);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},s.prototype.listeners=function(e){return d(this,e,!0)},s.prototype.rawListeners=function(e){return d(this,e,!1)},s.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):h.call(e,t)},s.prototype.listenerCount=h,s.prototype.eventNames=function(){return this._eventsCount>0?t(this._events):[]}},72:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),o&&(a[e]=n),n)}function i(e,t){if(isNaN(e))return t?A:g;if(t){if(e<0)return A;if(e>=h)return v}else{if(e<=-f)return C;if(e+1>=f)return I}return e<0?i(-e,t).neg():u(e%d|0,e/d|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),p=parseInt(e.substring(o,o+u),n);if(u<8){var d=i(l(n,u));s=s.mul(d).add(i(p))}else s=(s=s.mul(a)).add(i(p))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?i(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=p;var d=4294967296,h=d*d,f=h/2,m=o(1<<24),g=o(0);n.ZERO=g;var A=o(0,!0);n.UZERO=A;var y=o(1);n.ONE=y;var x=o(1,!0);n.UONE=x;var b=o(-1);n.NEG_ONE=b;var I=u(-1,2147483647,!1);n.MAX_VALUE=I;var v=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=v;var C=u(0,-2147483648,!1);n.MIN_VALUE=C;var w=n.prototype;w.toInt=function(){return this.unsigned?this.low>>>0:this.low},w.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},w.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(C)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=i(l(e,6),this.unsigned),s=this,o="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},w.getHighBits=function(){return this.high},w.getHighBitsUnsigned=function(){return this.high>>>0},w.getLowBits=function(){return this.low},w.getLowBitsUnsigned=function(){return this.low>>>0},w.getNumBitsAbs=function(){if(this.isNegative())return this.eq(C)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},w.isZero=function(){return 0===this.high&&0===this.low},w.eqz=w.isZero,w.isNegative=function(){return!this.unsigned&&this.high<0},w.isPositive=function(){return this.unsigned||this.high>=0},w.isOdd=function(){return 1==(1&this.low)},w.isEven=function(){return 0==(1&this.low)},w.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},w.eq=w.equals,w.notEquals=function(e){return!this.eq(e)},w.neq=w.notEquals,w.ne=w.notEquals,w.lessThan=function(e){return this.comp(e)<0},w.lt=w.lessThan,w.lessThanOrEqual=function(e){return this.comp(e)<=0},w.lte=w.lessThanOrEqual,w.le=w.lessThanOrEqual,w.greaterThan=function(e){return this.comp(e)>0},w.gt=w.greaterThan,w.greaterThanOrEqual=function(e){return this.comp(e)>=0},w.gte=w.greaterThanOrEqual,w.ge=w.greaterThanOrEqual,w.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},w.comp=w.compare,w.negate=function(){return!this.unsigned&&this.eq(C)?C:this.not().add(y)},w.neg=w.negate,w.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,c=0,d=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,d+=(h+=a+l)>>>16,c+=(d+=n+i)>>>16,c+=t+o,u((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},w.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},w.sub=w.subtract,w.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=p(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(C))return e.isOdd()?C:g;if(e.eq(C))return this.isOdd()?C:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,A=0,y=0,x=0;return y+=(x+=o*h)>>>16,A+=(y+=s*h)>>>16,y&=65535,A+=(y+=o*d)>>>16,f+=(A+=a*h)>>>16,A&=65535,f+=(A+=s*d)>>>16,A&=65535,f+=(A+=o*c)>>>16,f+=n*h+a*d+s*c+o*l,u((y&=65535)<<16|(x&=65535),(f&=65535)<<16|(A&=65535),this.unsigned)},w.mul=w.multiply,w.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?A:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return A;if(e.gt(this.shru(1)))return x;s=A}else{if(this.eq(C))return e.eq(y)||e.eq(b)?C:e.eq(C)?y:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?y:b:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(C))return this.unsigned?A:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:l(2,o-48),d=i(n),h=d.mul(e);h.isNegative()||h.gt(a);)h=(d=i(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=y),s=s.add(d),a=a.sub(h)}return s},w.div=w.divide,w.modulo=function(e){return r(e)||(e=p(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},w.mod=w.modulo,w.rem=w.modulo,w.not=function(){return u(~this.low,~this.high,this.unsigned)},w.and=function(e){return r(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},w.or=function(e){return r(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},w.xor=function(e){return r(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},w.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},w.shl=w.shiftLeft,w.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},w.shr=w.shiftRight,w.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},w.shru=w.shiftRightUnsigned,w.shr_u=w.shiftRightUnsigned,w.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},w.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},w.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},w.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},w.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},474:(e,t,n)=>{var r=n(898),a=n(776),s=n(920),o=n(707),i=n(655),u=n(668),l=n(64);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},898:function(e,t,n){var r;!function(e,a,s){function o(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},668:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},776:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},655:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},707:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},920:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},64:function(e,t,n){var r;!function(a,s,o){var i,u=256,l=o.pow(u,6),c=o.pow(2,52),p=2*c,d=u-1;function h(e,t,n){var r=[],d=A(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(a.crypto||a.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,y(s)]}}():e,3),r),h=new f(r),x=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,A(y(h.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(o.random=e,t):e})(x,d,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=d&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=d&a+1],n=n*u+o[d&(o[a]=o[s=d&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function A(e,t){for(var n,r=e+"",a=0;a<r.length;)t[d&a]=d&(n^=19*t[d&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(A(o.random(),s),e.exports){e.exports=h;try{i=n(42)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},246:(e,t,n)=>{e.exports=function(){return n(855)('(()=>{var A={156:(A,e,t)=>{const g=t(758);A.exports=class{_initialized=!1;_mode=0;_wasm=void 0;kVerStringLen=256;kWidthMax=3840;kHeightMax=2160;kPlaneMax=0;kRGBAMax=0;buffer_args=0;buffer_in=0;buffer_in_len=0;buffer_out=0;args_array=new Int32Array(6);constructor(A){this._mode=A||0,this.kPlaneMax=this.kWidthMax*this.kHeightMax*1.5,this.kRGBAMax=this.kWidthMax*this.kHeightMax*4,g().then((A=>{this._wasm=A,this.buffer_args=this._wasm._malloc(this.kVerStringLen),this.buffer_in=this._wasm._malloc(this.kRGBAMax),this.buffer_in_len=this.kRGBAMax,this.buffer_out=this._wasm._malloc(this.kRGBAMax)})).catch((A=>{})).finally((()=>{this._initialized=!0}))}get ready(){return this._initialized&&!!this._wasm}version(){if(this._wasm){var A=this._wasm._Version(this.buffer_args,this.kVerStringLen);if(A>0){var e=this._wasm.HEAP8.slice(this.buffer_args,this.buffer_args+A);return(new TextDecoder).decode(e)}}}async process(A,e){if(!this._wasm)throw"no valid wasm module";let t=[],g=0,I=0,i=Math.floor(A.codedWidth>>2)<<2,r=Math.floor(A.displayHeight>>2)<<2;if("NV12"===A.format)g=0,t.push({offset:0,stride:i}),t.push({offset:i*r,stride:i});else if("I420"===A.format)g=1,t.push({offset:0,stride:i}),t.push({offset:i*r,stride:Math.floor((i+1)/2)}),t.push({offset:i*r+Math.floor((i+1)/2)*Math.floor((r+1)/2),stride:Math.floor((i+1)/2)});else{if("RGBA"!==A.format)throw`Not supported frame format ${A.format}`;g=2,t.push({offset:0,stride:4*i}),I=i*r*3/2}const C=A.buffer?A.buffer.length:A.allocationSize({layout:t,rect:{x:0,y:0,width:i,height:r}});if(C>this.kRGBAMax)throw`Not support layout size ${JSON.stringify(t)}`;this.args_array[0]=i,this.args_array[1]=r,this.args_array[2]=i,this.args_array[3]=i,this.args_array[4]=e||this._mode,this.args_array[5]=g,this._wasm.HEAPU8.set(new Uint8Array(this.args_array.buffer),this.buffer_args);const o=A.buffer?A.buffer:new Uint8Array(C);A.buffer||await A.copyTo(o,{layout:t,rect:{x:0,y:0,width:i,height:r}}),this._wasm.HEAPU8.set(o,this.buffer_in);const n=this._wasm._VEProcess(this.buffer_args,this.args_array.byteLength,this.buffer_in,C,this.buffer_out,2===g?I:C);if(0!==n)throw"process failed "+n;return A.buffer?{buffer:this._wasm.HEAPU8.slice(this.buffer_out,this.buffer_out+C).buffer}:new VideoFrame(this._wasm.HEAPU8.slice(this.buffer_out,this.buffer_out+C),{format:[0,1].includes(g)?A.format:"I420",codedWidth:i,codedHeight:r,timestamp:A.timestamp,duration:A.duration,displayWidth:A.displayWidth,displayHeight:A.displayHeight,colorSpace:"{}"!==JSON.stringify(A.colorSpace)&&[0,1].includes(g)?A.colorSpace:{fullRange:null,matrix:"bt709",primaries:"bt709",transfer:"bt709"}})}}},758:(A,e,t)=>{var _scriptDir,g=(_scriptDir=(_scriptDir="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(A){var e,g,I=void 0!==(A=A||{})?A:{};I.ready=new Promise((function(A,t){e=A,g=t})),["_main","_free","_malloc","_VEProcess","_Version","_fflush","onRuntimeInitialized"].forEach((A=>{Object.getOwnPropertyDescriptor(I.ready,A)||Object.defineProperty(I.ready,A,{get:()=>Z("You are getting "+A+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),set:()=>Z("You are setting "+A+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")})}));var i=Object.assign({},I),r=[],C=(A,e)=>{throw e},o="object"==typeof window,n="function"==typeof importScripts,a="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,B=!o&&!a&&!n;if(I.ENVIRONMENT)throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");var E,Q,s,c="";function l(A){if(A instanceof IA)return;let e=A;A&&"object"==typeof A&&A.stack&&(e=[A,A.stack]),w("exiting due to exception: "+e)}if(a){if("undefined"==typeof process||!process.release||"node"!==process.release.name)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");var h,f;c=n?t(12).dirname(c)+"/":"//",h=t(579),f=t(12),E=(A,e)=>{var t=dA(A);return t?e?t:t.toString():(A=f.normalize(A),h.readFileSync(A,e?void 0:"utf8"))},s=A=>{var e=E(A,!0);return e.buffer||(e=new Uint8Array(e)),R(e.buffer),e},Q=(A,e,t)=>{var g=dA(A);g&&e(g),A=f.normalize(A),h.readFile(A,(function(A,g){A?t(A):e(g.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\\\/g,"/"),r=process.argv.slice(2),process.on("uncaughtException",(function(A){if(!(A instanceof IA))throw A})),process.on("unhandledRejection",(function(A){throw A})),C=(A,e)=>{if(K())throw process.exitCode=A,e;l(e),process.exit(A)},I.inspect=function(){return"[Emscripten Module object]"}}else if(B){if("object"==typeof process||"object"==typeof window||"function"==typeof importScripts)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");"undefined"!=typeof read&&(E=function(A){const e=dA(A);return e?rA(e):read(A)}),s=function(A){let e;return e=dA(A),e||("function"==typeof readbuffer?new Uint8Array(readbuffer(A)):(e=read(A,"binary"),R("object"==typeof e),e))},Q=function(A,e,t){setTimeout((()=>e(s(A))),0)},"undefined"!=typeof scriptArgs?r=scriptArgs:void 0!==arguments&&(r=arguments),"function"==typeof quit&&(C=(A,e)=>{l(e),quit(A)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)}else{if(!o&&!n)throw new Error("environment detection error");if(n?c=self.location.href:"undefined"!=typeof document&&document.currentScript&&(c=document.currentScript.src),_scriptDir&&(c=_scriptDir),c=0!==c.indexOf("blob:")?c.substr(0,c.replace(/[?#].*/,"").lastIndexOf("/")+1):"","object"!=typeof window&&"function"!=typeof importScripts)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");E=A=>{try{var e=new XMLHttpRequest;return e.open("GET",A,!1),e.send(null),e.responseText}catch(e){var t=dA(A);if(t)return rA(t);throw e}},n&&(s=A=>{try{var e=new XMLHttpRequest;return e.open("GET",A,!1),e.responseType="arraybuffer",e.send(null),new Uint8Array(e.response)}catch(e){var t=dA(A);if(t)return t;throw e}}),Q=(A,e,t)=>{var g=new XMLHttpRequest;g.open("GET",A,!0),g.responseType="arraybuffer",g.onload=()=>{if(200==g.status||0==g.status&&g.response)e(g.response);else{var I=dA(A);I?e(I.buffer):t()}},g.onerror=t,g.send(null)}}var d,u,D=I.print||console.log.bind(console),w=I.printErr||console.warn.bind(console);function y(A,e){Object.getOwnPropertyDescriptor(I,A)||Object.defineProperty(I,A,{configurable:!0,get:function(){Z("Module."+A+" has been replaced with plain "+e+" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}})}function F(A){return"FS_createPath"===A||"FS_createDataFile"===A||"FS_createPreloadedFile"===A||"FS_unlink"===A||"addRunDependency"===A||"FS_createLazyFile"===A||"FS_createDevice"===A||"removeRunDependency"===A}Object.assign(I,i),i=null,d="fetchSettings",Object.getOwnPropertyDescriptor(I,d)&&Z("`Module."+d+"` was supplied but `"+d+"` not included in INCOMING_MODULE_JS_API"),I.arguments&&(r=I.arguments),y("arguments","arguments_"),I.thisProgram&&I.thisProgram,y("thisProgram","thisProgram"),I.quit&&(C=I.quit),y("quit","quit_"),R(void 0===I.memoryInitializerPrefixURL,"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),R(void 0===I.pthreadMainPrefixURL,"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),R(void 0===I.cdInitializerPrefixURL,"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),R(void 0===I.filePackagePrefixURL,"Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),R(void 0===I.read,"Module.read option was removed (modify read_ in JS)"),R(void 0===I.readAsync,"Module.readAsync option was removed (modify readAsync in JS)"),R(void 0===I.readBinary,"Module.readBinary option was removed (modify readBinary in JS)"),R(void 0===I.setWindowTitle,"Module.setWindowTitle option was removed (modify setWindowTitle in JS)"),R(void 0===I.TOTAL_MEMORY,"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),y("read","read_"),y("readAsync","readAsync"),y("readBinary","readBinary"),y("setWindowTitle","setWindowTitle"),R(!B,"shell environment detected but not enabled at build time.  Add \'shell\' to `-sENVIRONMENT` to enable."),I.wasmBinary&&(u=I.wasmBinary),y("wasmBinary","wasmBinary");var S,p=I.noExitRuntime||!0;y("noExitRuntime","noExitRuntime"),"object"!=typeof WebAssembly&&Z("no native wasm support detected");var m,N=!1;function R(A,e){A||Z("Assertion failed"+(e?": "+e:""))}var U,k,M,L="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function b(A){U=A,I.HEAP8=new Int8Array(A),I.HEAP16=new Int16Array(A),I.HEAP32=new Int32Array(A),I.HEAPU8=k=new Uint8Array(A),I.HEAPU16=new Uint16Array(A),I.HEAPU32=M=new Uint32Array(A),I.HEAPF32=new Float32Array(A),I.HEAPF64=new Float64Array(A)}var G=5242880;I.TOTAL_STACK&&R(G===I.TOTAL_STACK,"the stack size can no longer be determined at runtime");var H,Y=I.INITIAL_MEMORY||16777216;function v(){if(!N){var A=FA(),e=M[A>>2],t=M[A+4>>2];34821223==e&&2310721022==t||Z("Stack overflow! Stack cookie has been overwritten at 0x"+A.toString(16)+", expected hex dwords 0x89BACDFE and 0x2135467, but received 0x"+t.toString(16)+" 0x"+e.toString(16)),1668509029!==M[0]&&Z("Runtime error: The application has corrupted its heap memory area (address zero)!")}}y("INITIAL_MEMORY","INITIAL_MEMORY"),R(Y>=G,"INITIAL_MEMORY should be larger than TOTAL_STACK, was "+Y+"! (TOTAL_STACK="+G+")"),R("undefined"!=typeof Int32Array&&"undefined"!=typeof Float64Array&&null!=Int32Array.prototype.subarray&&null!=Int32Array.prototype.set,"JS engine does not provide full typed array support"),R(!I.wasmMemory,"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally"),R(16777216==Y,"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically"),function(){var A=new Int16Array(1),e=new Int8Array(A.buffer);if(A[0]=25459,115!==e[0]||99!==e[1])throw"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)"}();var T=[],J=[],x=[],_=[],P=!1;function K(){return p}R(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),R(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),R(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),R(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var q=0,j=null,O=null,X={};function Z(A){I.onAbort&&I.onAbort(A),w(A="Aborted("+A+")"),N=!0,m=1;var e=new WebAssembly.RuntimeError(A);throw g(e),e}var W={error:function(){Z("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM")},init:function(){W.error()},createDataFile:function(){W.error()},createPreloadedFile:function(){W.error()},createLazyFile:function(){W.error()},open:function(){W.error()},mkdev:function(){W.error()},registerDevice:function(){W.error()},analyzePath:function(){W.error()},loadFilesFromDB:function(){W.error()},ErrnoError:function(){W.error()}};I.FS_createDataFile=W.createDataFile,I.FS_createPreloadedFile=W.createPreloadedFile;var V,z,$="data:application/octet-stream;base64,";function AA(A){return A.startsWith($)}function eA(A){return A.startsWith("file://")}function tA(A,e){return function(){var t=A,g=e;return e||(g=I.asm),R(P,"native function `"+t+"` called before runtime initialization"),g[A]||R(g[A],"exported native function `"+t+"` not found"),g[A].apply(null,arguments)}}function gA(A){try{if(A==V&&u)return new Uint8Array(u);var e=dA(A);if(e)return e;if(s)return s(A);throw"both async and sync fetching of the wasm failed"}catch(A){Z(A)}}function IA(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function iA(A){for(;A.length>0;)A.shift()(I)}function rA(A){for(var e=[],t=0;t<A.length;t++){var g=A[t];g>255&&(hA&&R(!1,"Character code "+g+" ("+String.fromCharCode(g)+")  at offset "+t+" not in 0x00-0xFF."),g&=255),e.push(String.fromCharCode(g))}return e.join("")}function CA(A){CA.shown||(CA.shown={}),CA.shown[A]||(CA.shown[A]=1,a&&(A="warning: "+A),w(A))}function oA(A){try{return S.grow(A-U.byteLength+65535>>>16),b(S.buffer),1}catch(e){w("emscripten_realloc_buffer: Attempted to grow heap from "+U.byteLength+" bytes to "+A+" bytes, but got error: "+e)}}AA(V="data:application/octet-stream;base64,")||(z=V,V=I.locateFile?I.locateFile(z,c):c+z);var nA=[null,[],[]];function aA(A,e){var t=nA[A];R(t),0===e||10===e?((1===A?D:w)(function(A,e,t){for(var g=e+t,I=e;A[I]&&!(I>=g);)++I;if(I-e>16&&A.buffer&&L)return L.decode(A.subarray(e,I));for(var i="";e<I;){var r=A[e++];if(128&r){var C=63&A[e++];if(192!=(224&r)){var o=63&A[e++];if(224==(240&r)?r=(15&r)<<12|C<<6|o:(240!=(248&r)&&CA("Invalid UTF-8 leading byte 0x"+r.toString(16)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),r=(7&r)<<18|C<<12|o<<6|63&A[e++]),r<65536)i+=String.fromCharCode(r);else{var n=r-65536;i+=String.fromCharCode(55296|n>>10,56320|1023&n)}}else i+=String.fromCharCode((31&r)<<6|C)}else i+=String.fromCharCode(r)}return i}(t,0)),t.length=0):t.push(e)}function BA(A,e){R(A<16384),A<128?e.push(A):e.push(A%128|128,A>>7)}var EA=[];function QA(A){var e=EA[A];return e||(A>=EA.length&&(EA.length=A+1),EA[A]=e=H.get(A)),R(H.get(A)==e,"JavaScript-side Wasm function table mirror is out of date!"),e}var sA=void 0,cA=[];function lA(A,e){H.set(A,e),EA[A]=H.get(A)}var hA=!0,fA="function"==typeof atob?atob:function(A){var e,t,g,I,i,r,C="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",n=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,"");do{e=C.indexOf(A.charAt(n++))<<2|(I=C.indexOf(A.charAt(n++)))>>4,t=(15&I)<<4|(i=C.indexOf(A.charAt(n++)))>>2,g=(3&i)<<6|(r=C.indexOf(A.charAt(n++))),o+=String.fromCharCode(e),64!==i&&(o+=String.fromCharCode(t)),64!==r&&(o+=String.fromCharCode(g))}while(n<A.length);return o};function dA(A){if(AA(A))return function(A){if("boolean"==typeof a&&a){var e=Buffer.from(A,"base64");return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}try{for(var t=fA(A),g=new Uint8Array(t.length),I=0;I<t.length;++I)g[I]=t.charCodeAt(I);return g}catch(A){throw new Error("Converting base64 string to bytes failed.")}}(A.slice($.length))}var uA,DA={abort:function(){Z("native code called abort()")},emscripten_memcpy_big:function(A,e,t){k.copyWithin(A,e,e+t)},emscripten_resize_heap:function(A){var e=k.length;R((A>>>=0)>e);var t,g=2147483648;if(A>g)return w("Cannot enlarge memory, asked to go up to "+A+" bytes, but the limit is "+g+" bytes!"),!1;for(var I=1;I<=4;I*=2){var i=e*(1+.2/I);i=Math.min(i,A+100663296);var r=Math.min(g,(t=Math.max(A,i))+(65536-t%65536)%65536);if(oA(r))return!0}return w("Failed to grow the heap from "+e+" bytes to "+r+" bytes, not enough memory!"),!1},fd_close:function(A){Z("fd_close called without SYSCALLS_REQUIRE_FILESYSTEM")},fd_seek:function(A,e,t,g,I){return 70},fd_write:function(A,e,t,g){for(var I=0,i=0;i<t;i++){var r=M[e>>2],C=M[e+4>>2];e+=8;for(var o=0;o<C;o++)aA(A,k[r+o]);I+=C}return M[g>>2]=I,0}},wA=(function(){var A,e={env:DA,wasi_snapshot_preview1:DA};function t(A,e){var t,g=A.exports;I.asm=g,R(S=I.asm.memory,"memory not found in wasm exports"),b(S.buffer),R(H=I.asm.__indirect_function_table,"table not found in wasm exports"),t=I.asm.__wasm_call_ctors,J.unshift(t),function(A){if(q--,I.monitorRunDependencies&&I.monitorRunDependencies(q),A?(R(X[A]),delete X[A]):w("warning: run dependency removed without ID"),0==q&&(null!==j&&(clearInterval(j),j=null),O)){var e=O;O=null,e()}}("wasm-instantiate")}A="wasm-instantiate",q++,I.monitorRunDependencies&&I.monitorRunDependencies(q),A?(R(!X[A]),X[A]=1,null===j&&"undefined"!=typeof setInterval&&(j=setInterval((function(){if(N)return clearInterval(j),void(j=null);var A=!1;for(var e in X)A||(A=!0,w("still waiting on run dependencies:")),w("dependency: "+e);A&&w("(end of list)")}),1e4))):w("warning: run dependency added without ID");var i=I;function r(A){R(I===i,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),i=null,t(A.instance)}function C(A){return function(){if(!u&&(o||n)){if("function"==typeof fetch&&!eA(V))return fetch(V,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at \'"+V+"\'";return A.arrayBuffer()})).catch((function(){return gA(V)}));if(Q)return new Promise((function(A,e){Q(V,(function(e){A(new Uint8Array(e))}),e)}))}return Promise.resolve().then((function(){return gA(V)}))}().then((function(A){return WebAssembly.instantiate(A,e)})).then((function(A){return A})).then(A,(function(A){w("failed to asynchronously prepare wasm: "+A),eA(V)&&w("warning: Loading from a file URI ("+V+") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing"),Z(A)}))}if(I.instantiateWasm)try{return I.instantiateWasm(e,t)}catch(A){w("Module.instantiateWasm callback failed with error: "+A),g(A)}(u||"function"!=typeof WebAssembly.instantiateStreaming||AA(V)||eA(V)||a||"function"!=typeof fetch?C(r):fetch(V,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,e).then(r,(function(A){return w("wasm streaming compile failed: "+A),w("falling back to ArrayBuffer instantiation"),C(r)}))}))).catch(g)}(),I.___wasm_call_ctors=tA("__wasm_call_ctors"),I._VEProcess=tA("VEProcess"),I._Version=tA("Version"),I._main=tA("main"),I._malloc=tA("malloc"),I._free=tA("free"),I.___errno_location=tA("__errno_location"),I._fflush=tA("fflush")),yA=I._emscripten_stack_init=function(){return(yA=I._emscripten_stack_init=I.asm.emscripten_stack_init).apply(null,arguments)},FA=(I._emscripten_stack_get_free=function(){return(I._emscripten_stack_get_free=I.asm.emscripten_stack_get_free).apply(null,arguments)},I._emscripten_stack_get_base=function(){return(I._emscripten_stack_get_base=I.asm.emscripten_stack_get_base).apply(null,arguments)},I._emscripten_stack_get_end=function(){return(FA=I._emscripten_stack_get_end=I.asm.emscripten_stack_get_end).apply(null,arguments)});function SA(A){R(0==q,\'cannot call main when async dependencies remain! (listen on Module["onRuntimeInitialized"])\'),R(0==T.length,"cannot call main when preRun functions remain to be called");var e=I._main;try{var t=e(0,0);return function(A,e){if(m=A,function(){var A=D,e=w,t=!1;D=w=A=>{t=!0};try{wA(0),nA[1].length&&aA(1,10),nA[2].length&&aA(2,10)}catch(A){}D=A,w=e,t&&(CA("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc."),CA("(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)"))}(),K()&&!e){var t="program exited (with status: "+A+"), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)";g(t),w(t)}var i;m=i=A,K()||(I.onExit&&I.onExit(i),N=!0),C(i,new IA(i))}(t,!0),t}catch(A){return function(A){if(A instanceof IA||"unwind"==A)return m;C(1,A)}(A)}}function pA(A){function t(){uA||(uA=!0,I.calledRun=!0,N||(R(!P),P=!0,v(),iA(J),v(),iA(x),e(I),I.onRuntimeInitialized&&I.onRuntimeInitialized(),mA&&SA(),function(){if(v(),I.postRun)for("function"==typeof I.postRun&&(I.postRun=[I.postRun]);I.postRun.length;)A=I.postRun.shift(),_.unshift(A);var A;iA(_)}()))}var g;A=A||r,q>0||(yA(),R(0==(3&(g=FA()))),M[g>>2]=34821223,M[g+4>>2]=2310721022,M[0]=1668509029,function(){if(I.preRun)for("function"==typeof I.preRun&&(I.preRun=[I.preRun]);I.preRun.length;)A=I.preRun.shift(),T.unshift(A);var A;iA(T)}(),q>0||(I.setStatus?(I.setStatus("Running..."),setTimeout((function(){setTimeout((function(){I.setStatus("")}),1),t()}),1)):t(),v()))}if(I.stackSave=tA("stackSave"),I.stackRestore=tA("stackRestore"),I.stackAlloc=tA("stackAlloc"),I.dynCall_jiji=tA("dynCall_jiji"),I.addFunction=function(A,e){if(R(void 0!==A),sA||(sA=new WeakMap,function(A,e){if(sA)for(var t=0;t<0+e;t++){var g=QA(t);g&&sA.set(g,t)}}(0,H.length)),sA.has(A))return sA.get(A);var t=function(){if(cA.length)return cA.pop();try{H.grow(1)}catch(A){if(!(A instanceof RangeError))throw A;throw"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH."}return H.length-1}();try{lA(t,A)}catch(g){if(!(g instanceof TypeError))throw g;R(void 0!==e,"Missing signature argument to addFunction: "+A),lA(t,function(A,e){if("function"==typeof WebAssembly.Function)return new WebAssembly.Function(function(A){for(var e={i:"i32",j:"i32",f:"f32",d:"f64",p:"i32"},t={parameters:[],results:"v"==A[0]?[]:[e[A[0]]]},g=1;g<A.length;++g)R(A[g]in e,"invalid signature char: "+A[g]),t.parameters.push(e[A[g]]),"j"===A[g]&&t.parameters.push("i32");return t}(e),A);var t=[1];!function(A,e){var t=A.slice(0,1),g=A.slice(1),I={i:127,p:127,j:126,f:125,d:124};e.push(96),BA(g.length,e);for(var i=0;i<g.length;++i)R(g[i]in I,"invalid signature char: "+g[i]),e.push(I[g[i]]);"v"==t?e.push(0):e.push(1,I[t])}(e,t);var g=[0,97,115,109,1,0,0,0,1];BA(t.length,g),g.push.apply(g,t),g.push(2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0);var I=new WebAssembly.Module(new Uint8Array(g));return new WebAssembly.Instance(I,{e:{f:A}}).exports.f}(A,e))}return sA.set(A,t),t},I.removeFunction=function(A){sA.delete(QA(A)),cA.push(A)},["run","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","addOnPreRun","addOnInit","addOnPreMain","addOnExit","addOnPostRun","addRunDependency","removeRunDependency","FS_createFolder","FS_createPath","FS_createDataFile","FS_createPreloadedFile","FS_createLazyFile","FS_createLink","FS_createDevice","FS_unlink","getLEB","getFunctionTables","alignFunctionTables","registerFunctions","prettyPrint","getCompilerSetting","print","printErr","callMain","abort","keepRuntimeAlive","wasmMemory","stackAlloc","stackSave","stackRestore","getTempRet0","setTempRet0","writeStackCookie","checkStackCookie","intArrayFromBase64","tryParseAsDataURI","ptrToString","zeroMemory","stringToNewUTF8","exitJS","getHeapMax","emscripten_realloc_buffer","ENV","ERRNO_CODES","ERRNO_MESSAGES","setErrNo","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","DNS","getHostByName","Protocols","Sockets","getRandomDevice","warnOnce","traverseStack","UNWIND_CACHE","convertPCtoSourceLocation","readAsmConstArgsArray","readAsmConstArgs","mainThreadEM_ASM","jstoi_q","jstoi_s","getExecutableName","listenOnce","autoResumeAudioContext","dynCallLegacy","getDynCaller","dynCall","handleException","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","safeSetTimeout","asmjsMangle","asyncLoad","alignMemory","mmapAlloc","writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertI32PairToI53Checked","convertU32PairToI53","getCFunc","ccall","cwrap","uleb128Encode","sigToWasmTypes","generateFuncType","convertJsFunctionToWasm","freeTableIndexes","functionsInTableMap","getEmptyTableSlot","updateTableMap","reallyNegative","unSign","strLen","reSign","formatString","setValue","getValue","PATH","PATH_FS","intArrayFromString","intArrayToString","AsciiToString","stringToAscii","UTF16Decoder","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","allocateUTF8","allocateUTF8OnStack","writeStringToMemory","writeArrayToMemory","writeAsciiToMemory","SYSCALLS","getSocketFromFD","getSocketAddress","JSEvents","registerKeyEventCallback","specialHTMLTargets","maybeCStringToJsString","findEventTarget","findCanvasEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","currentFullscreenStrategy","restoreOldWindowedStyle","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","demangle","demangleAll","jsStackTrace","stackTrace","ExitStatus","getEnvStrings","checkWasiClock","flush_NO_FILESYSTEM","dlopenMissingError","createDyncallWrapper","setImmediateWrapped","clearImmediateWrapped","polyfillSetImmediate","uncaughtExceptionCount","exceptionLast","exceptionCaught","ExceptionInfo","exception_addRef","exception_decRef","Browser","setMainLoop","wget","FS","MEMFS","TTY","PIPEFS","SOCKFS","_setNetworkCallback","tempFixedLengthArray","miniTempWebGLFloatBuffers","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","GL","emscriptenWebGLGet","computeUnpackAlignedImageSize","emscriptenWebGLGetTexPixelData","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","writeGLArray","AL","SDL_unicode","SDL_ttfContext","SDL_audio","SDL","SDL_gfx","GLUT","EGL","GLFW_Window","GLFW","GLEW","IDBStore","runAndAbortIfError","ALLOC_NORMAL","ALLOC_STACK","allocate"].forEach((function(A){Object.getOwnPropertyDescriptor(I,A)||Object.defineProperty(I,A,{configurable:!0,get:function(){var e="\'"+A+"\' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)";F(A)&&(e+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),Z(e)}})})),["ptrToString","zeroMemory","stringToNewUTF8","setErrNo","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","getHostByName","getRandomDevice","traverseStack","convertPCtoSourceLocation","readAsmConstArgs","mainThreadEM_ASM","jstoi_q","jstoi_s","getExecutableName","listenOnce","autoResumeAudioContext","dynCallLegacy","getDynCaller","dynCall","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","safeSetTimeout","asmjsMangle","asyncLoad","alignMemory","mmapAlloc","writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertU32PairToI53","getCFunc","ccall","cwrap","reallyNegative","unSign","strLen","reSign","formatString","intArrayFromString","AsciiToString","stringToAscii","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","allocateUTF8","allocateUTF8OnStack","writeStringToMemory","writeArrayToMemory","writeAsciiToMemory","getSocketFromFD","getSocketAddress","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","findCanvasEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","demangle","demangleAll","jsStackTrace","stackTrace","getEnvStrings","checkWasiClock","createDyncallWrapper","setImmediateWrapped","clearImmediateWrapped","polyfillSetImmediate","ExceptionInfo","exception_addRef","exception_decRef","setMainLoop","_setNetworkCallback","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","emscriptenWebGLGet","computeUnpackAlignedImageSize","emscriptenWebGLGetTexPixelData","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","writeGLArray","SDL_unicode","SDL_ttfContext","SDL_audio","GLFW_Window","runAndAbortIfError","ALLOC_NORMAL","ALLOC_STACK","allocate"].forEach((function(A){"undefined"==typeof globalThis||Object.getOwnPropertyDescriptor(globalThis,A)||Object.defineProperty(globalThis,A,{configurable:!0,get:function(){var e="`"+A+"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line",t=A;t.startsWith("_")||(t="$"+A),e+=" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE="+t+")",F(A)&&(e+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),CA(e)}})})),O=function A(){uA||pA(),uA||(O=A)},I.preInit)for("function"==typeof I.preInit&&(I.preInit=[I.preInit]);I.preInit.length>0;)I.preInit.pop()();var mA=!0;return I.noInitialRun&&(mA=!1),pA(),A.ready});A.exports=g},579:()=>{},12:()=>{}},e={};function t(g){var I=e[g];if(void 0!==I)return I.exports;var i=e[g]={exports:{}};return A[g](i,i.exports,t),i.exports}(()=>{var A,e,g,I,i,r=new(t(156)),C=!1,o=[],n=!1;const a="start",B="stop",E="enable",Q="disable",s="event",c="start2",l="ready",h="cost";self.onmessage=async t=>{if(t.data.type===a)A=t.data.readableStream,e=t.data.writableStream,I=new AbortController,await async function(){g=new TransformStream({async transform(A,e){if(d!==A.format&&(d=A.format),r.ready&&n)try{const t=performance.now(),g=await r.process(A),I=performance.now(),i=Date.now();(o=o.filter((A=>A.time+1e3>i))).push({time:i,cost:I-t,format:A.format}),C||(C=!0,postMessage({type:s,evt:l,stats:o[o.length-1]})),A.close(),e.enqueue(g)}catch(t){t!==f&&(f=t,postMessage({type:"error",msg:t})),e.enqueue(A)}else e.enqueue(A)}})}(),A.pipeThrough(g,{signal:I.signal}).pipeTo(e).catch((t=>{I.signal.aborted&&(A.cancel(t),e.abort(t),A=void 0,e=void 0,I=void 0)})),postMessage({type:a});else if(t.data.type===B)I&&I.abort("stop"),g=void 0,C=!1,o=[],n=!1,clearInterval(i),postMessage({type:B,idx:t.data.idx});else if(t.data.type===E)i=setInterval((()=>{const A=o.length;let e=0;if(o.forEach((A=>{e+=A.cost})),A>0){const t=o[0].format;postMessage({type:s,evt:h,avg:Math.round(e/A),cnt:A,format:t})}}),1e3),n=!0,postMessage({type:E,idx:t.data.idx});else if(t.data.type===Q)o=[],clearInterval(i),n=!1,postMessage({type:Q,idx:t.data.idx});else if(t.data.type===c){var u=setInterval((()=>{r.ready&&(clearInterval(u),u=void 0,postMessage({type:s,evt:l}))}),5);setTimeout((()=>{u&&(clearInterval(u),postMessage({type:s,evt:"timeout"}))}),5e3),i=setInterval((()=>{const A=o.length;let e=0;if(o.forEach((A=>{e+=A.cost})),A>0){const t=o[0].format;postMessage({type:s,evt:h,avg:Math.round(e/A),cnt:A,format:t})}}),1e3),postMessage({type:c})}else"frame"===t.data.type&&async function(A){try{const t=performance.now(),g=await r.process(A.frame),I=performance.now();var e={type:s,evt:`frame-${A.id}`,frame:g,cost:I-t};postMessage(e,[e.frame.buffer]);const i=Date.now();(o=o.filter((A=>A.time+1e3>i))).push({time:i,cost:I-t})}catch(t){e={type:s,evt:`frame-${A.id}`,err:t},postMessage(e)}}(t.data)};var f="",d=""})()})();',null)}},855:e=>{"use strict";var t=window.URL||window.webkitURL;e.exports=function(e,n){try{try{var r;try{(r=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(e),r=r.getBlob()}catch(t){r=new Blob([e])}return new Worker(t.createObjectURL(r))}catch(t){return new Worker("data:application/javascript,"+encodeURIComponent(e))}}catch(e){if(!n)throw Error("Inline worker is not supported");return new Worker(n)}}},410:()=>{},628:()=>{},42:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var r={};return(()=>{"use strict";n.r(r),n.d(r,{SuperClarityEvents:()=>FE,SuperClarityExtension:()=>LE});var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>Ba,browserFiles:()=>mo,browserHTTPRequest:()=>wo,concatenateArrayBuffers:()=>Qa,copyModel:()=>Ss,decodeWeights:()=>Oa,encodeWeights:()=>Fa,fromMemory:()=>ko,fromMemorySync:()=>No,getLoadHandlers:()=>Ja,getModelArtifactsForJSON:()=>Wa,getModelArtifactsForJSONSync:()=>Va,getModelArtifactsInfoForJSON:()=>za,getSaveHandlers:()=>Xa,getWeightSpecs:()=>Ha,http:()=>Co,isHTTPScheme:()=>Io,listModels:()=>ws,loadWeights:()=>yo,moveModel:()=>Ts,registerLoadRouter:()=>Ya,registerSaveRouter:()=>qa,removeModel:()=>Es,weightsLoaderFactory:()=>xo,withSaveHandler:()=>Ro,withSaveHandlerSync:()=>$o});var t={};n.r(t),n.d(t,{assertParamsValid:()=>Do,computeFlatOffset:()=>jo,computeOutShape:()=>Oo,getNormalizedAxes:()=>Qo,isSliceContinous:()=>Ho,maskToAxes:()=>Fo,parseSliceParams:()=>Ko,sliceInfo:()=>qo,startForAxis:()=>Wo,startIndicesWithElidedDims:()=>Uo,stopForAxis:()=>zo,stopIndicesWithElidedDims:()=>Go,stridesForAxis:()=>Vo,stridesWithElidedDims:()=>Lo});var a={};n.r(a),n.d(a,{conv2d:()=>lp,depthwiseConv2d:()=>dp,matMul:()=>hp});var s={};n.r(s),n.d(s,{collectGatherOpShapeInfo:()=>gh,computeOutShape:()=>mh,segOpComputeOptimalWindowSize:()=>fh});var o={};n.r(o),n.d(o,{ERF_A1:()=>_d,ERF_A2:()=>Bd,ERF_A3:()=>Dd,ERF_A4:()=>Fd,ERF_A5:()=>Od,ERF_P:()=>$d,PARALLELIZE_THRESHOLD:()=>bd,RowPartitionType:()=>md,SELU_SCALE:()=>Rd,SELU_SCALEALPHA:()=>Nd,applyActivation:()=>ip,assertAndGetBroadcastShape:()=>io,assertAxesAreInnerMostDims:()=>vu,assertParamsConsistent:()=>hd,assignToTypedArray:()=>Gd,axesAreInnerMostDims:()=>yu,calculateShapes:()=>Lc,checkEinsumDimSizes:()=>Xd,checkPadOnDimRoundingMode:()=>Ci,combineLocations:()=>xu,combineRaggedTensorToTensorShapes:()=>gd,complexWithEvenIndex:()=>Pd,complexWithOddIndex:()=>Qd,computeConv2DInfo:()=>di,computeConv3DInfo:()=>hi,computeDefaultPad:()=>fi,computeDilation2DInfo:()=>li,computeOptimalWindowSize:()=>Id,computeOutAndReduceShapes:()=>bu,computeOutShape:()=>fd,computePool2DInfo:()=>ci,computePool3DInfo:()=>pi,convertConv2DDataFormat:()=>vi,decodeEinsumEquation:()=>qd,eitherStridesOrDilationsAreOne:()=>bi,expandShapeToKeepDim:()=>Iu,exponent:()=>Wd,exponents:()=>Vd,fromStringArrayToUint8:()=>yh,fromUint8ToStringArray:()=>Ah,getAxesPermutation:()=>Cu,getBroadcastDims:()=>so,getComplexWithIndex:()=>Ud,getEinsumComputePath:()=>Jd,getEinsumPermutation:()=>Yd,getFusedBiasGradient:()=>op,getFusedDyActivation:()=>sp,getImageCenter:()=>vd,getInnerMostAxes:()=>Eu,getPermuted:()=>wd,getRaggedRank:()=>yd,getReductionAxes:()=>oo,getReshaped:()=>Cd,getReshapedPermuted:()=>Ed,getRowPartitionTypesHelper:()=>Ad,getSliceBeginCoords:()=>Sd,getSliceSize:()=>Td,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>nh,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>rh,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ah,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>ih,getSparseReshapeInputOutputMismatchErrorMessage:()=>lh,getSparseReshapeInputOutputMultipleErrorMessage:()=>uh,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>sh,getSparseReshapeNegativeOutputDimErrorMessage:()=>oh,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>hh,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>ch,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>ph,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>dh,getUndoAxesPermutation:()=>wu,isIdentityPermutation:()=>Zd,log:()=>ir,mergeRealAndImagArrays:()=>Ld,prepareAndValidate:()=>kd,prepareSplitSize:()=>th,segment_util:()=>s,shouldFuse:()=>up,slice_util:()=>t,splitRealAndImagArrays:()=>Md,stridesOrDilationsArePositive:()=>Ii,tupleValuesAreOne:()=>xi,upcastType:()=>oa,validateDefaultValueShape:()=>xd,validateInput:()=>Oc,validateUpdateShape:()=>Fc,warn:()=>or});var i={};n.r(i),n.d(i,{addImpl:()=>Hf,bincountImpl:()=>Kf,bincountReduceImpl:()=>qf,bitwiseAndImpl:()=>Yf,castImpl:()=>Gf,ceilImpl:()=>em,concatImpl:()=>tm,equalImpl:()=>nm,expImpl:()=>rm,expm1Impl:()=>am,floorImpl:()=>sm,gatherNdImpl:()=>om,gatherV2Impl:()=>im,greaterEqualImpl:()=>lm,greaterImpl:()=>um,lessEqualImpl:()=>pm,lessImpl:()=>cm,linSpaceImpl:()=>dm,logImpl:()=>hm,maxImpl:()=>fm,maximumImpl:()=>mm,minimumImpl:()=>gm,multiplyImpl:()=>Am,negImpl:()=>xm,notEqualImpl:()=>bm,prodImpl:()=>vm,raggedGatherImpl:()=>wm,raggedRangeImpl:()=>Sm,raggedTensorToTensorImpl:()=>$m,rangeImpl:()=>_m,rsqrtImpl:()=>Bm,scatterImpl:()=>Dm,sigmoidImpl:()=>Fm,simpleAbsImpl:()=>Lf,sliceImpl:()=>Om,sparseFillEmptyRowsImpl:()=>Lm,sparseReshapeImpl:()=>Mm,sparseSegmentReductionImpl:()=>Pm,sqrtImpl:()=>Qm,staticRegexReplaceImpl:()=>Um,stridedSliceImpl:()=>Gm,stringNGramsImpl:()=>Wm,stringSplitImpl:()=>Hm,stringToHashBucketFastImpl:()=>jm,subImpl:()=>Km,tileImpl:()=>Ym,topKImpl:()=>Zm,transposeImpl:()=>Im,uniqueImpl:()=>eg});var u={};n.r(u),n.d(u,{json:()=>bw});var l={};n.r(l),n.d(l,{json:()=>Iw});var c={};n.r(c),n.d(c,{json:()=>vw});var p={};n.r(p),n.d(p,{json:()=>Cw});var d={};n.r(d),n.d(d,{json:()=>ww});var h={};n.r(h),n.d(h,{json:()=>Ew});var f={};n.r(f),n.d(f,{json:()=>Sw});var m={};n.r(m),n.d(m,{json:()=>Tw});var g={};n.r(g),n.d(g,{json:()=>kw});var A={};n.r(A),n.d(A,{json:()=>Nw});var y={};n.r(y),n.d(y,{json:()=>Rw});var x={};n.r(x),n.d(x,{json:()=>$w});var b={};n.r(b),n.d(b,{json:()=>_w});var I={};n.r(I),n.d(I,{json:()=>Bw});var v={};n.r(v),n.d(v,{json:()=>Dw});var C={};n.r(C),n.d(C,{json:()=>Fw});var w={};n.r(w),n.d(w,{json:()=>Ow});var E={};n.r(E),n.d(E,{json:()=>Lw});var S={};n.r(S),n.d(S,{json:()=>Mw});var T={};n.r(T),n.d(T,{OP_SCOPE_SUFFIX:()=>Ta,abs:()=>ao,acos:()=>Xo,acosh:()=>Jo,add:()=>Qs,addN:()=>Zo,all:()=>ei,any:()=>ti,argMax:()=>ni,argMin:()=>ri,asin:()=>ai,asinh:()=>si,atan:()=>oi,atan2:()=>ii,atanh:()=>ui,avgPool:()=>Ei,avgPool3d:()=>Si,basicLSTMCell:()=>_i,batchNorm:()=>Di,batchNorm2d:()=>Fi,batchNorm3d:()=>Oi,batchNorm4d:()=>Li,batchToSpaceND:()=>Bi,bincount:()=>Mi,bitwiseAnd:()=>Pi,booleanMaskAsync:()=>Kc,broadcastArgs:()=>Qi,broadcastTo:()=>Ui,buffer:()=>Rs,cast:()=>$s,ceil:()=>Gi,clipByValue:()=>Vi,clone:()=>_s,complex:()=>Na,concat:()=>Ti,concat1d:()=>Wi,concat2d:()=>zi,concat3d:()=>Hi,concat4d:()=>ji,conv1d:()=>qi,conv2d:()=>Ki,conv2dTranspose:()=>Xi,conv3d:()=>Ji,conv3dTranspose:()=>eu,cos:()=>tu,cosh:()=>nu,cosineWindow:()=>np,cumprod:()=>ru,cumsum:()=>au,denseBincount:()=>su,depthToSpace:()=>ou,depthwiseConv2d:()=>iu,diag:()=>uu,dilation2d:()=>lu,div:()=>Gs,divNoNan:()=>du,dot:()=>hu,dropout:()=>ep,einsum:()=>fu,elu:()=>mu,enclosingPowerOfTwo:()=>tp,ensureShape:()=>gu,equal:()=>cu,erf:()=>Au,euclideanNorm:()=>$u,exp:()=>_u,expandDims:()=>Bu,expm1:()=>Du,eye:()=>Ou,fft:()=>yc,fill:()=>to,floor:()=>Lu,floorDiv:()=>Us,fused:()=>a,gather:()=>Mu,gatherND:()=>Zc,greater:()=>Pu,greaterEqual:()=>Qu,ifft:()=>xc,imag:()=>Uu,image:()=>id,inTopKAsync:()=>rp,irfft:()=>bc,isFinite:()=>Gu,isInf:()=>Vu,isNaN:()=>Wu,leakyRelu:()=>zu,less:()=>Hu,lessEqual:()=>ju,linalg:()=>ud,linspace:()=>Ku,localResponseNormalization:()=>qu,log:()=>Yu,log1p:()=>Xu,logSigmoid:()=>el,logSoftmax:()=>tl,logSumExp:()=>nl,logicalAnd:()=>rl,logicalNot:()=>al,logicalOr:()=>sl,logicalXor:()=>ol,losses:()=>ld,lowerBound:()=>ll,matMul:()=>ki,max:()=>Su,maxPool:()=>cl,maxPool3d:()=>pl,maxPoolWithArgmax:()=>dl,maximum:()=>uo,mean:()=>hl,meshgrid:()=>gl,min:()=>Tu,minimum:()=>Al,mirrorPad:()=>yl,mod:()=>xl,moments:()=>bl,movingAverage:()=>Yc,mul:()=>Vs,multiRNNCell:()=>Il,multinomial:()=>vl,neg:()=>Ju,norm:()=>Ru,notEqual:()=>Cl,oneHot:()=>wl,ones:()=>ml,onesLike:()=>El,op:()=>ka,outerProduct:()=>Sl,pad:()=>Tl,pad1d:()=>kl,pad2d:()=>Nl,pad3d:()=>Rl,pad4d:()=>$l,pool:()=>Bl,pow:()=>no,prelu:()=>Dl,print:()=>Bs,prod:()=>Fl,raggedGather:()=>Ol,raggedRange:()=>Ll,raggedTensorToTensor:()=>Ml,rand:()=>Pl,randomGamma:()=>Wl,randomNormal:()=>zl,randomStandardNormal:()=>Hl,randomUniform:()=>jl,randomUniformInt:()=>Kl,range:()=>ql,real:()=>Yl,reciprocal:()=>Xl,relu:()=>Jl,relu6:()=>Zl,reshape:()=>wi,reverse:()=>ec,reverse1d:()=>tc,reverse2d:()=>nc,reverse3d:()=>rc,reverse4d:()=>ac,rfft:()=>vc,round:()=>sc,rsqrt:()=>oc,scalar:()=>Ks,scatterND:()=>Xc,searchSorted:()=>ul,selu:()=>ic,separableConv2d:()=>uc,setdiff1dAsync:()=>lc,sigmoid:()=>Ni,sign:()=>cc,signal:()=>od,sin:()=>pc,sinh:()=>dc,slice:()=>Ri,slice1d:()=>hc,slice2d:()=>fc,slice3d:()=>mc,slice4d:()=>gc,softmax:()=>Ac,softplus:()=>Zu,spaceToBatchND:()=>_l,sparse:()=>cd,sparseToDense:()=>Jc,spectral:()=>sd,split:()=>Ic,sqrt:()=>Ws,square:()=>zs,squaredDifference:()=>Cc,squeeze:()=>wc,stack:()=>Ec,step:()=>Sc,stridedSlice:()=>Tc,string:()=>pd,sub:()=>ro,sum:()=>ku,tan:()=>kc,tanh:()=>$i,tensor:()=>$a,tensor1d:()=>Nc,tensor2d:()=>Rc,tensor3d:()=>$c,tensor4d:()=>_c,tensor5d:()=>Bc,tensor6d:()=>Dc,tensorScatterUpdate:()=>Mc,tile:()=>Fu,topk:()=>Pc,transpose:()=>qc,truncatedNormal:()=>Qc,unique:()=>Uc,unsortedSegmentSum:()=>Gc,unstack:()=>Vc,upperBound:()=>Wc,variable:()=>zc,where:()=>pu,whereAsync:()=>jc,zeros:()=>fl,zerosLike:()=>Hs});var k={3536:(e,t,n)=>{var r=n(1910);e.exports=r},8171:(e,t,n)=>{n(6450);var r=n(4058).Object,a=e.exports=function(e,t,n){return r.defineProperty(e,t,n)};r.defineProperty.sham&&(a.sham=!0)},2956:(e,t,n)=>{n(7627),n(6274),n(5967),n(8881),n(4560),n(7206),n(4349),n(7971);var r=n(4058);e.exports=r.Promise},3685:(e,t,n)=>{e.exports=n(621)},621:(e,t,n)=>{var r=n(3536);e.exports=r},4883:(e,t,n)=>{var r=n(7475),a=n(9826),s=TypeError;e.exports=function(e){if(r(e))return e;throw s(a(e)+" is not a function")}},174:(e,t,n)=>{var r=n(4284),a=n(9826),s=TypeError;e.exports=function(e){if(r(e))return e;throw s(a(e)+" is not a constructor")}},1851:(e,t,n)=>{var r=n(7475),a=String,s=TypeError;e.exports=function(e){if("object"==typeof e||r(e))return e;throw s("Can't set "+a(e)+" as a prototype")}},8479:e=>{e.exports=function(){}},5743:(e,t,n)=>{var r=n(7046),a=TypeError;e.exports=function(e,t){if(r(t,e))return e;throw a("Incorrect invocation")}},6059:(e,t,n)=>{var r=n(941),a=String,s=TypeError;e.exports=function(e){if(r(e))return e;throw s(a(e)+" is not an object")}},1692:(e,t,n)=>{var r=n(4529),a=n(9413),s=n(623),o=function(e){return function(t,n,o){var i,u=r(t),l=s(u),c=a(o,l);if(e&&n!=n){for(;l>c;)if((i=u[c++])!=i)return!0}else for(;l>c;c++)if((e||c in u)&&u[c]===n)return e||c||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},3765:(e,t,n)=>{var r=n(5329);e.exports=r([].slice)},1385:(e,t,n)=>{var r=n(9813)("iterator"),a=!1;try{var s=0,o={next:function(){return{done:!!s++}},return:function(){a=!0}};o[r]=function(){return this},Array.from(o,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!a)return!1;var n=!1;try{var s={};s[r]=function(){return{next:function(){return{done:n=!0}}}},e(s)}catch(e){}return n}},2532:(e,t,n)=>{var r=n(4163),a=r({}.toString),s=r("".slice);e.exports=function(e){return s(a(e),8,-1)}},9697:(e,t,n)=>{var r=n(2885),a=n(7475),s=n(2532),o=n(9813)("toStringTag"),i=Object,u="Arguments"==s(function(){return arguments}());e.exports=r?s:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=i(e),o))?n:u?s(t):"Object"==(r=s(t))&&a(t.callee)?"Arguments":r}},3489:(e,t,n)=>{var r=n(953),a=n(1136),s=n(9677),o=n(5988);e.exports=function(e,t,n){for(var i=a(t),u=o.f,l=s.f,c=0;c<i.length;c++){var p=i[c];r(e,p)||n&&r(n,p)||u(e,p,l(t,p))}}},4160:(e,t,n)=>{var r=n(5981);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},3538:e=>{e.exports=function(e,t){return{value:e,done:t}}},2029:(e,t,n)=>{var r=n(5746),a=n(5988),s=n(1887);e.exports=r?function(e,t,n){return a.f(e,t,s(1,n))}:function(e,t,n){return e[t]=n,e}},1887:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},5929:(e,t,n)=>{var r=n(2029);e.exports=function(e,t,n,a){return a&&a.enumerable?e[t]=n:r(e,t,n),e}},5609:(e,t,n)=>{var r=n(1899),a=Object.defineProperty;e.exports=function(e,t){try{a(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},5746:(e,t,n)=>{var r=n(5981);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},6616:e=>{var t="object"==typeof document&&document.all,n=void 0===t&&void 0!==t;e.exports={all:t,IS_HTMLDDA:n}},1333:(e,t,n)=>{var r=n(1899),a=n(941),s=r.document,o=a(s)&&a(s.createElement);e.exports=function(e){return o?s.createElement(e):{}}},3281:e=>{e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},3321:(e,t,n)=>{var r=n(8501),a=n(6049);e.exports=!r&&!a&&"object"==typeof window&&"object"==typeof document},8501:e=>{e.exports="object"==typeof Deno&&Deno&&"object"==typeof Deno.version},4470:(e,t,n)=>{var r=n(2861),a=n(1899);e.exports=/ipad|iphone|ipod/i.test(r)&&void 0!==a.Pebble},2749:(e,t,n)=>{var r=n(2861);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},6049:(e,t,n)=>{var r=n(2532),a=n(1899);e.exports="process"==r(a.process)},8045:(e,t,n)=>{var r=n(2861);e.exports=/web0s(?!.*chrome)/i.test(r)},2861:(e,t,n)=>{var r=n(626);e.exports=r("navigator","userAgent")||""},3385:(e,t,n)=>{var r,a,s=n(1899),o=n(2861),i=s.process,u=s.Deno,l=i&&i.versions||u&&u.version,c=l&&l.v8;c&&(a=(r=c.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!a&&o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(a=+r[1]),e.exports=a},6759:e=>{e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},3995:(e,t,n)=>{var r=n(5329),a=Error,s=r("".replace),o=String(a("zxcasd").stack),i=/\n\s*at [^:]*:[^\n]*/,u=i.test(o);e.exports=function(e,t){if(u&&"string"==typeof e&&!a.prepareStackTrace)for(;t--;)e=s(e,i,"");return e}},8780:(e,t,n)=>{var r=n(5981),a=n(1887);e.exports=!r((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",a(1,7)),7!==e.stack)}))},6887:(e,t,n)=>{var r=n(1899),a=n(9730),s=n(5329),o=n(7475),i=n(9677).f,u=n(7252),l=n(4058),c=n(6843),p=n(2029),d=n(953),h=function(e){var t=function(n,r,s){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(n);case 2:return new e(n,r)}return new e(n,r,s)}return a(e,this,arguments)};return t.prototype=e.prototype,t};e.exports=function(e,t){var n,a,f,m,g,A,y,x,b=e.target,I=e.global,v=e.stat,C=e.proto,w=I?r:v?r[b]:(r[b]||{}).prototype,E=I?l:l[b]||p(l,b,{})[b],S=E.prototype;for(f in t)n=!u(I?f:b+(v?".":"#")+f,e.forced)&&w&&d(w,f),g=E[f],n&&(A=e.dontCallGetSet?(x=i(w,f))&&x.value:w[f]),m=n&&A?A:t[f],n&&typeof g==typeof m||(y=e.bind&&n?c(m,r):e.wrap&&n?h(m):C&&o(m)?s(m):m,(e.sham||m&&m.sham||g&&g.sham)&&p(y,"sham",!0),p(E,f,y),C&&(d(l,a=b+"Prototype")||p(l,a,{}),p(l[a],f,m),e.real&&S&&!S[f]&&p(S,f,m)))}},5981:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},9730:(e,t,n)=>{var r=n(8285),a=Function.prototype,s=a.apply,o=a.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(s):function(){return o.apply(s,arguments)})},6843:(e,t,n)=>{var r=n(5329),a=n(4883),s=n(8285),o=r(r.bind);e.exports=function(e,t){return a(e),void 0===t?e:s?o(e,t):function(){return e.apply(t,arguments)}}},8285:(e,t,n)=>{var r=n(5981);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},8834:(e,t,n)=>{var r=n(8285),a=Function.prototype.call;e.exports=r?a.bind(a):function(){return a.apply(a,arguments)}},9417:(e,t,n)=>{var r=n(5746),a=n(953),s=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,i=a(s,"name"),u=i&&"something"===function(){}.name,l=i&&(!r||r&&o(s,"name").configurable);e.exports={EXISTS:i,PROPER:u,CONFIGURABLE:l}},4163:(e,t,n)=>{var r=n(8285),a=Function.prototype,s=a.call,o=r&&a.bind.bind(s,s);e.exports=r?o:function(e){return function(){return s.apply(e,arguments)}}},5329:(e,t,n)=>{var r=n(2532),a=n(4163);e.exports=function(e){if("Function"===r(e))return a(e)}},626:(e,t,n)=>{var r=n(4058),a=n(1899),s=n(7475),o=function(e){return s(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?o(r[e])||o(a[e]):r[e]&&r[e][t]||a[e]&&a[e][t]}},2902:(e,t,n)=>{var r=n(9697),a=n(4229),s=n(2119),o=n(2077),i=n(9813)("iterator");e.exports=function(e){if(!s(e))return a(e,i)||a(e,"@@iterator")||o[r(e)]}},3476:(e,t,n)=>{var r=n(8834),a=n(4883),s=n(6059),o=n(9826),i=n(2902),u=TypeError;e.exports=function(e,t){var n=arguments.length<2?i(e):t;if(a(n))return s(r(n,e));throw u(o(e)+" is not iterable")}},4229:(e,t,n)=>{var r=n(4883),a=n(2119);e.exports=function(e,t){var n=e[t];return a(n)?void 0:r(n)}},1899:(e,t,n)=>{var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||function(){return this}()||Function("return this")()},953:(e,t,n)=>{var r=n(5329),a=n(9678),s=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return s(a(e),t)}},7748:e=>{e.exports={}},4845:(e,t,n)=>{var r=n(1899);e.exports=function(e,t){var n=r.console;n&&n.error&&(1==arguments.length?n.error(e):n.error(e,t))}},5463:(e,t,n)=>{var r=n(626);e.exports=r("document","documentElement")},2840:(e,t,n)=>{var r=n(5746),a=n(5981),s=n(1333);e.exports=!r&&!a((function(){return 7!=Object.defineProperty(s("div"),"a",{get:function(){return 7}}).a}))},7026:(e,t,n)=>{var r=n(5329),a=n(5981),s=n(2532),o=Object,i=r("".split);e.exports=a((function(){return!o("z").propertyIsEnumerable(0)}))?function(e){return"String"==s(e)?i(e,""):o(e)}:o},1302:(e,t,n)=>{var r=n(5329),a=n(7475),s=n(3030),o=r(Function.toString);a(s.inspectSource)||(s.inspectSource=function(e){return o(e)}),e.exports=s.inspectSource},3794:(e,t,n)=>{var r=n(941),a=n(2029);e.exports=function(e,t){r(t)&&"cause"in t&&a(e,"cause",t.cause)}},5402:(e,t,n)=>{var r,a,s,o=n(7093),i=n(1899),u=n(941),l=n(2029),c=n(953),p=n(3030),d=n(4262),h=n(7748),f="Object already initialized",m=i.TypeError,g=i.WeakMap;if(o||p.state){var A=p.state||(p.state=new g);A.get=A.get,A.has=A.has,A.set=A.set,r=function(e,t){if(A.has(e))throw m(f);return t.facade=e,A.set(e,t),t},a=function(e){return A.get(e)||{}},s=function(e){return A.has(e)}}else{var y=d("state");h[y]=!0,r=function(e,t){if(c(e,y))throw m(f);return t.facade=e,l(e,y,t),t},a=function(e){return c(e,y)?e[y]:{}},s=function(e){return c(e,y)}}e.exports={set:r,get:a,has:s,enforce:function(e){return s(e)?a(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!u(t)||(n=a(t)).type!==e)throw m("Incompatible receiver, "+e+" required");return n}}}},6782:(e,t,n)=>{var r=n(9813),a=n(2077),s=r("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||o[s]===e)}},7475:(e,t,n)=>{var r=n(6616),a=r.all;e.exports=r.IS_HTMLDDA?function(e){return"function"==typeof e||e===a}:function(e){return"function"==typeof e}},4284:(e,t,n)=>{var r=n(5329),a=n(5981),s=n(7475),o=n(9697),i=n(626),u=n(1302),l=function(){},c=[],p=i("Reflect","construct"),d=/^\s*(?:class|function)\b/,h=r(d.exec),f=!d.exec(l),m=function(e){if(!s(e))return!1;try{return p(l,c,e),!0}catch(e){return!1}},g=function(e){if(!s(e))return!1;switch(o(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return f||!!h(d,u(e))}catch(e){return!0}};g.sham=!0,e.exports=!p||a((function(){var e;return m(m.call)||!m(Object)||!m((function(){e=!0}))||e}))?g:m},7252:(e,t,n)=>{var r=n(5981),a=n(7475),s=/#|\.prototype\./,o=function(e,t){var n=u[i(e)];return n==c||n!=l&&(a(t)?r(t):!!t)},i=o.normalize=function(e){return String(e).replace(s,".").toLowerCase()},u=o.data={},l=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},2119:e=>{e.exports=function(e){return null==e}},941:(e,t,n)=>{var r=n(7475),a=n(6616),s=a.all;e.exports=a.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:r(e)||e===s}:function(e){return"object"==typeof e?null!==e:r(e)}},2529:e=>{e.exports=!0},6664:(e,t,n)=>{var r=n(626),a=n(7475),s=n(7046),o=n(2302),i=Object;e.exports=o?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return a(t)&&s(t.prototype,i(e))}},3091:(e,t,n)=>{var r=n(6843),a=n(8834),s=n(6059),o=n(9826),i=n(6782),u=n(623),l=n(7046),c=n(3476),p=n(2902),d=n(7609),h=TypeError,f=function(e,t){this.stopped=e,this.result=t},m=f.prototype;e.exports=function(e,t,n){var g,A,y,x,b,I,v,C=n&&n.that,w=!(!n||!n.AS_ENTRIES),E=!(!n||!n.IS_RECORD),S=!(!n||!n.IS_ITERATOR),T=!(!n||!n.INTERRUPTED),k=r(t,C),N=function(e){return g&&d(g,"normal",e),new f(!0,e)},R=function(e){return w?(s(e),T?k(e[0],e[1],N):k(e[0],e[1])):T?k(e,N):k(e)};if(E)g=e.iterator;else if(S)g=e;else{if(!(A=p(e)))throw h(o(e)+" is not iterable");if(i(A)){for(y=0,x=u(e);x>y;y++)if((b=R(e[y]))&&l(m,b))return b;return new f(!1)}g=c(e,A)}for(I=E?e.next:g.next;!(v=a(I,g)).done;){try{b=R(v.value)}catch(e){d(g,"throw",e)}if("object"==typeof b&&b&&l(m,b))return b}return new f(!1)}},7609:(e,t,n)=>{var r=n(8834),a=n(6059),s=n(4229);e.exports=function(e,t,n){var o,i;a(e);try{if(!(o=s(e,"return"))){if("throw"===t)throw n;return n}o=r(o,e)}catch(e){i=!0,o=e}if("throw"===t)throw n;if(i)throw o;return a(o),n}},3847:(e,t,n)=>{var r=n(5143).IteratorPrototype,a=n(9290),s=n(1887),o=n(904),i=n(2077),u=function(){return this};e.exports=function(e,t,n,l){var c=t+" Iterator";return e.prototype=a(r,{next:s(+!l,n)}),o(e,c,!1,!0),i[c]=u,e}},5105:(e,t,n)=>{var r=n(6887),a=n(8834),s=n(2529),o=n(9417),i=n(7475),u=n(3847),l=n(249),c=n(8929),p=n(904),d=n(2029),h=n(5929),f=n(9813),m=n(2077),g=n(5143),A=o.PROPER,y=o.CONFIGURABLE,x=g.IteratorPrototype,b=g.BUGGY_SAFARI_ITERATORS,I=f("iterator"),v="keys",C="values",w="entries",E=function(){return this};e.exports=function(e,t,n,o,f,g,S){u(n,t,o);var T,k,N,R=function(e){if(e===f&&F)return F;if(!b&&e in B)return B[e];switch(e){case v:case C:case w:return function(){return new n(this,e)}}return function(){return new n(this)}},$=t+" Iterator",_=!1,B=e.prototype,D=B[I]||B["@@iterator"]||f&&B[f],F=!b&&D||R(f),O="Array"==t&&B.entries||D;if(O&&(T=l(O.call(new e)))!==Object.prototype&&T.next&&(s||l(T)===x||(c?c(T,x):i(T[I])||h(T,I,E)),p(T,$,!0,!0),s&&(m[$]=E)),A&&f==C&&D&&D.name!==C&&(!s&&y?d(B,"name",C):(_=!0,F=function(){return a(D,this)})),f)if(k={values:R(C),keys:g?F:R(v),entries:R(w)},S)for(N in k)(b||_||!(N in B))&&h(B,N,k[N]);else r({target:t,proto:!0,forced:b||_},k);return s&&!S||B[I]===F||h(B,I,F,{name:f}),m[t]=F,k}},5143:(e,t,n)=>{var r,a,s,o=n(5981),i=n(7475),u=n(941),l=n(9290),c=n(249),p=n(5929),d=n(9813),h=n(2529),f=d("iterator"),m=!1;[].keys&&("next"in(s=[].keys())?(a=c(c(s)))!==Object.prototype&&(r=a):m=!0),!u(r)||o((function(){var e={};return r[f].call(e)!==e}))?r={}:h&&(r=l(r)),i(r[f])||p(r,f,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:m}},2077:e=>{e.exports={}},623:(e,t,n)=>{var r=n(3057);e.exports=function(e){return r(e.length)}},5331:e=>{var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},6132:(e,t,n)=>{var r,a,s,o,i,u,l,c,p=n(1899),d=n(6843),h=n(9677).f,f=n(2941).set,m=n(2749),g=n(4470),A=n(8045),y=n(6049),x=p.MutationObserver||p.WebKitMutationObserver,b=p.document,I=p.process,v=p.Promise,C=h(p,"queueMicrotask"),w=C&&C.value;w||(r=function(){var e,t;for(y&&(e=I.domain)&&e.exit();a;){t=a.fn,a=a.next;try{t()}catch(e){throw a?o():s=void 0,e}}s=void 0,e&&e.enter()},m||y||A||!x||!b?!g&&v&&v.resolve?((l=v.resolve(void 0)).constructor=v,c=d(l.then,l),o=function(){c(r)}):y?o=function(){I.nextTick(r)}:(f=d(f,p),o=function(){f(r)}):(i=!0,u=b.createTextNode(""),new x(r).observe(u,{characterData:!0}),o=function(){u.data=i=!i})),e.exports=w||function(e){var t={fn:e,next:void 0};s&&(s.next=t),a||(a=t,o()),s=t}},9520:(e,t,n)=>{var r=n(4883),a=TypeError,s=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw a("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)};e.exports.f=function(e){return new s(e)}},4649:(e,t,n)=>{var r=n(5803);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:r(e)}},9290:(e,t,n)=>{var r,a=n(6059),s=n(9938),o=n(6759),i=n(7748),u=n(5463),l=n(1333),c=n(4262)("IE_PROTO"),p=function(){},d=function(e){return"<script>"+e+"<\/script>"},h=function(e){e.write(d("")),e.close();var t=e.parentWindow.Object;return e=null,t},f=function(){try{r=new ActiveXObject("htmlfile")}catch(e){}var e,t;f="undefined"!=typeof document?document.domain&&r?h(r):((t=l("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(d("document.F=Object")),e.close(),e.F):h(r);for(var n=o.length;n--;)delete f.prototype[o[n]];return f()};i[c]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(p.prototype=a(e),n=new p,p.prototype=null,n[c]=e):n=f(),void 0===t?n:s.f(n,t)}},9938:(e,t,n)=>{var r=n(5746),a=n(3937),s=n(5988),o=n(6059),i=n(4529),u=n(4771);t.f=r&&!a?Object.defineProperties:function(e,t){o(e);for(var n,r=i(t),a=u(t),l=a.length,c=0;l>c;)s.f(e,n=a[c++],r[n]);return e}},5988:(e,t,n)=>{var r=n(5746),a=n(2840),s=n(3937),o=n(6059),i=n(3894),u=TypeError,l=Object.defineProperty,c=Object.getOwnPropertyDescriptor;t.f=r?s?function(e,t,n){if(o(e),t=i(t),o(n),"function"==typeof e&&"prototype"===t&&"value"in n&&"writable"in n&&!n.writable){var r=c(e,t);r&&r.writable&&(e[t]=n.value,n={configurable:"configurable"in n?n.configurable:r.configurable,enumerable:"enumerable"in n?n.enumerable:r.enumerable,writable:!1})}return l(e,t,n)}:l:function(e,t,n){if(o(e),t=i(t),o(n),a)try{return l(e,t,n)}catch(e){}if("get"in n||"set"in n)throw u("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},9677:(e,t,n)=>{var r=n(5746),a=n(8834),s=n(6760),o=n(1887),i=n(4529),u=n(3894),l=n(953),c=n(2840),p=Object.getOwnPropertyDescriptor;t.f=r?p:function(e,t){if(e=i(e),t=u(t),c)try{return p(e,t)}catch(e){}if(l(e,t))return o(!a(s.f,e,t),e[t])}},946:(e,t,n)=>{var r=n(5629),a=n(6759).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},7857:(e,t)=>{t.f=Object.getOwnPropertySymbols},249:(e,t,n)=>{var r=n(953),a=n(7475),s=n(9678),o=n(4262),i=n(4160),u=o("IE_PROTO"),l=Object,c=l.prototype;e.exports=i?l.getPrototypeOf:function(e){var t=s(e);if(r(t,u))return t[u];var n=t.constructor;return a(n)&&t instanceof n?n.prototype:t instanceof l?c:null}},7046:(e,t,n)=>{var r=n(5329);e.exports=r({}.isPrototypeOf)},5629:(e,t,n)=>{var r=n(5329),a=n(953),s=n(4529),o=n(1692).indexOf,i=n(7748),u=r([].push);e.exports=function(e,t){var n,r=s(e),l=0,c=[];for(n in r)!a(i,n)&&a(r,n)&&u(c,n);for(;t.length>l;)a(r,n=t[l++])&&(~o(c,n)||u(c,n));return c}},4771:(e,t,n)=>{var r=n(5629),a=n(6759);e.exports=Object.keys||function(e){return r(e,a)}},6760:(e,t)=>{var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,a=r&&!n.call({1:2},1);t.f=a?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},8929:(e,t,n)=>{var r=n(5329),a=n(6059),s=n(1851);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return a(n),s(r),t?e(n,r):n.__proto__=r,n}}():void 0)},5623:(e,t,n)=>{var r=n(2885),a=n(9697);e.exports=r?{}.toString:function(){return"[object "+a(this)+"]"}},9811:(e,t,n)=>{var r=n(8834),a=n(7475),s=n(941),o=TypeError;e.exports=function(e,t){var n,i;if("string"===t&&a(n=e.toString)&&!s(i=r(n,e)))return i;if(a(n=e.valueOf)&&!s(i=r(n,e)))return i;if("string"!==t&&a(n=e.toString)&&!s(i=r(n,e)))return i;throw o("Can't convert object to primitive value")}},1136:(e,t,n)=>{var r=n(626),a=n(5329),s=n(946),o=n(7857),i=n(6059),u=a([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=s.f(i(e)),n=o.f;return n?u(t,n(e)):t}},4058:e=>{e.exports={}},2:e=>{e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},7742:(e,t,n)=>{var r=n(1899),a=n(6991),s=n(7475),o=n(7252),i=n(1302),u=n(9813),l=n(3321),c=n(8501),p=n(2529),d=n(3385),h=a&&a.prototype,f=u("species"),m=!1,g=s(r.PromiseRejectionEvent),A=o("Promise",(function(){var e=i(a),t=e!==String(a);if(!t&&66===d)return!0;if(p&&(!h.catch||!h.finally))return!0;if(!d||d<51||!/native code/.test(e)){var n=new a((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};if((n.constructor={})[f]=r,!(m=n.then((function(){}))instanceof r))return!0}return!t&&(l||c)&&!g}));e.exports={CONSTRUCTOR:A,REJECTION_EVENT:g,SUBCLASSING:m}},6991:(e,t,n)=>{var r=n(1899);e.exports=r.Promise},6584:(e,t,n)=>{var r=n(6059),a=n(941),s=n(9520);e.exports=function(e,t){if(r(e),a(t)&&t.constructor===e)return t;var n=s.f(e);return(0,n.resolve)(t),n.promise}},1542:(e,t,n)=>{var r=n(6991),a=n(1385),s=n(7742).CONSTRUCTOR;e.exports=s||!a((function(e){r.all(e).then(void 0,(function(){}))}))},8397:e=>{var t=function(){this.head=null,this.tail=null};t.prototype={add:function(e){var t={item:e,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}},e.exports=t},8219:(e,t,n)=>{var r=n(2119),a=TypeError;e.exports=function(e){if(r(e))throw a("Can't call method on "+e);return e}},4431:(e,t,n)=>{var r=n(626),a=n(5988),s=n(9813),o=n(5746),i=s("species");e.exports=function(e){var t=r(e),n=a.f;o&&t&&!t[i]&&n(t,i,{configurable:!0,get:function(){return this}})}},904:(e,t,n)=>{var r=n(2885),a=n(5988).f,s=n(2029),o=n(953),i=n(5623),u=n(9813)("toStringTag");e.exports=function(e,t,n,l){if(e){var c=n?e:e.prototype;o(c,u)||a(c,u,{configurable:!0,value:t}),l&&!r&&s(c,"toString",i)}}},4262:(e,t,n)=>{var r=n(8726),a=n(9418),s=r("keys");e.exports=function(e){return s[e]||(s[e]=a(e))}},3030:(e,t,n)=>{var r=n(1899),a=n(5609),s="__core-js_shared__",o=r[s]||a(s,{});e.exports=o},8726:(e,t,n)=>{var r=n(2529),a=n(3030);(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.26.0",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.26.0/LICENSE",source:"https://github.com/zloirock/core-js"})},487:(e,t,n)=>{var r=n(6059),a=n(174),s=n(2119),o=n(9813)("species");e.exports=function(e,t){var n,i=r(e).constructor;return void 0===i||s(n=r(i)[o])?t:a(n)}},4620:(e,t,n)=>{var r=n(5329),a=n(2435),s=n(5803),o=n(8219),i=r("".charAt),u=r("".charCodeAt),l=r("".slice),c=function(e){return function(t,n){var r,c,p=s(o(t)),d=a(n),h=p.length;return d<0||d>=h?e?"":void 0:(r=u(p,d))<55296||r>56319||d+1===h||(c=u(p,d+1))<56320||c>57343?e?i(p,d):r:e?l(p,d,d+2):c-56320+(r-55296<<10)+65536}};e.exports={codeAt:c(!1),charAt:c(!0)}},3405:(e,t,n)=>{var r=n(3385),a=n(5981);e.exports=!!Object.getOwnPropertySymbols&&!a((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},2941:(e,t,n)=>{var r,a,s,o,i=n(1899),u=n(9730),l=n(6843),c=n(7475),p=n(953),d=n(5981),h=n(5463),f=n(3765),m=n(1333),g=n(8348),A=n(2749),y=n(6049),x=i.setImmediate,b=i.clearImmediate,I=i.process,v=i.Dispatch,C=i.Function,w=i.MessageChannel,E=i.String,S=0,T={};try{r=i.location}catch(e){}var k=function(e){if(p(T,e)){var t=T[e];delete T[e],t()}},N=function(e){return function(){k(e)}},R=function(e){k(e.data)},$=function(e){i.postMessage(E(e),r.protocol+"//"+r.host)};x&&b||(x=function(e){g(arguments.length,1);var t=c(e)?e:C(e),n=f(arguments,1);return T[++S]=function(){u(t,void 0,n)},a(S),S},b=function(e){delete T[e]},y?a=function(e){I.nextTick(N(e))}:v&&v.now?a=function(e){v.now(N(e))}:w&&!A?(o=(s=new w).port2,s.port1.onmessage=R,a=l(o.postMessage,o)):i.addEventListener&&c(i.postMessage)&&!i.importScripts&&r&&"file:"!==r.protocol&&!d($)?(a=$,i.addEventListener("message",R,!1)):a="onreadystatechange"in m("script")?function(e){h.appendChild(m("script")).onreadystatechange=function(){h.removeChild(this),k(e)}}:function(e){setTimeout(N(e),0)}),e.exports={set:x,clear:b}},9413:(e,t,n)=>{var r=n(2435),a=Math.max,s=Math.min;e.exports=function(e,t){var n=r(e);return n<0?a(n+t,0):s(n,t)}},4529:(e,t,n)=>{var r=n(7026),a=n(8219);e.exports=function(e){return r(a(e))}},2435:(e,t,n)=>{var r=n(5331);e.exports=function(e){var t=+e;return t!=t||0===t?0:r(t)}},3057:(e,t,n)=>{var r=n(2435),a=Math.min;e.exports=function(e){return e>0?a(r(e),9007199254740991):0}},9678:(e,t,n)=>{var r=n(8219),a=Object;e.exports=function(e){return a(r(e))}},6935:(e,t,n)=>{var r=n(8834),a=n(941),s=n(6664),o=n(4229),i=n(9811),u=n(9813),l=TypeError,c=u("toPrimitive");e.exports=function(e,t){if(!a(e)||s(e))return e;var n,u=o(e,c);if(u){if(void 0===t&&(t="default"),n=r(u,e,t),!a(n)||s(n))return n;throw l("Can't convert object to primitive value")}return void 0===t&&(t="number"),i(e,t)}},3894:(e,t,n)=>{var r=n(6935),a=n(6664);e.exports=function(e){var t=r(e,"string");return a(t)?t:t+""}},2885:(e,t,n)=>{var r={};r[n(9813)("toStringTag")]="z",e.exports="[object z]"===String(r)},5803:(e,t,n)=>{var r=n(9697),a=String;e.exports=function(e){if("Symbol"===r(e))throw TypeError("Cannot convert a Symbol value to a string");return a(e)}},9826:e=>{var t=String;e.exports=function(e){try{return t(e)}catch(e){return"Object"}}},9418:(e,t,n)=>{var r=n(5329),a=0,s=Math.random(),o=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+o(++a+s,36)}},2302:(e,t,n)=>{var r=n(3405);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3937:(e,t,n)=>{var r=n(5746),a=n(5981);e.exports=r&&a((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},8348:e=>{var t=TypeError;e.exports=function(e,n){if(e<n)throw t("Not enough arguments");return e}},7093:(e,t,n)=>{var r=n(1899),a=n(7475),s=r.WeakMap;e.exports=a(s)&&/native code/.test(String(s))},9813:(e,t,n)=>{var r=n(1899),a=n(8726),s=n(953),o=n(9418),i=n(3405),u=n(2302),l=a("wks"),c=r.Symbol,p=c&&c.for,d=u?c:c&&c.withoutSetter||o;e.exports=function(e){if(!s(l,e)||!i&&"string"!=typeof l[e]){var t="Symbol."+e;i&&s(c,e)?l[e]=c[e]:l[e]=u&&p?p(t):d(t)}return l[e]}},9812:(e,t,n)=>{var r=n(6887),a=n(7046),s=n(249),o=n(8929),i=n(3489),u=n(9290),l=n(2029),c=n(1887),p=n(3995),d=n(3794),h=n(3091),f=n(4649),m=n(9813),g=n(8780),A=m("toStringTag"),y=Error,x=[].push,b=function(e,t){var n,r=arguments.length>2?arguments[2]:void 0,i=a(I,this);o?n=o(y(),i?s(this):I):(n=i?this:u(I),l(n,A,"Error")),void 0!==t&&l(n,"message",f(t)),g&&l(n,"stack",p(n.stack,1)),d(n,r);var c=[];return h(e,x,{that:c}),l(n,"errors",c),n};o?o(b,y):i(b,y,{name:!0});var I=b.prototype=u(y.prototype,{constructor:c(1,b),message:c(1,""),name:c(1,"AggregateError")});r({global:!0,constructor:!0,arity:2},{AggregateError:b})},7627:(e,t,n)=>{n(9812)},6274:(e,t,n)=>{var r=n(4529),a=n(8479),s=n(2077),o=n(5402),i=n(5988).f,u=n(5105),l=n(3538),c=n(2529),p=n(5746),d="Array Iterator",h=o.set,f=o.getterFor(d);e.exports=u(Array,"Array",(function(e,t){h(this,{type:d,target:r(e),index:0,kind:t})}),(function(){var e=f(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,l(void 0,!0)):l("keys"==n?r:"values"==n?t[r]:[r,t[r]],!1)}),"values");var m=s.Arguments=s.Array;if(a("keys"),a("values"),a("entries"),!c&&p&&"values"!==m.name)try{i(m,"name",{value:"values"})}catch(e){}},6450:(e,t,n)=>{var r=n(6887),a=n(5746),s=n(5988).f;r({target:"Object",stat:!0,forced:Object.defineProperty!==s,sham:!a},{defineProperty:s})},5967:()=>{},4560:(e,t,n)=>{var r=n(6887),a=n(8834),s=n(4883),o=n(9520),i=n(2),u=n(3091);r({target:"Promise",stat:!0},{allSettled:function(e){var t=this,n=o.f(t),r=n.resolve,l=n.reject,c=i((function(){var n=s(t.resolve),o=[],i=0,l=1;u(e,(function(e){var s=i++,u=!1;l++,a(n,t,e).then((function(e){u||(u=!0,o[s]={status:"fulfilled",value:e},--l||r(o))}),(function(e){u||(u=!0,o[s]={status:"rejected",reason:e},--l||r(o))}))})),--l||r(o)}));return c.error&&l(c.value),n.promise}})},6890:(e,t,n)=>{var r=n(6887),a=n(8834),s=n(4883),o=n(9520),i=n(2),u=n(3091);r({target:"Promise",stat:!0,forced:n(1542)},{all:function(e){var t=this,n=o.f(t),r=n.resolve,l=n.reject,c=i((function(){var n=s(t.resolve),o=[],i=0,c=1;u(e,(function(e){var s=i++,u=!1;c++,a(n,t,e).then((function(e){u||(u=!0,o[s]=e,--c||r(o))}),l)})),--c||r(o)}));return c.error&&l(c.value),n.promise}})},7206:(e,t,n)=>{var r=n(6887),a=n(8834),s=n(4883),o=n(626),i=n(9520),u=n(2),l=n(3091),c="No one promise resolved";r({target:"Promise",stat:!0},{any:function(e){var t=this,n=o("AggregateError"),r=i.f(t),p=r.resolve,d=r.reject,h=u((function(){var r=s(t.resolve),o=[],i=0,u=1,h=!1;l(e,(function(e){var s=i++,l=!1;u++,a(r,t,e).then((function(e){l||h||(h=!0,p(e))}),(function(e){l||h||(l=!0,o[s]=e,--u||d(new n(o,c)))}))})),--u||d(new n(o,c))}));return h.error&&d(h.value),r.promise}})},3376:(e,t,n)=>{var r=n(6887),a=n(2529),s=n(7742).CONSTRUCTOR,o=n(6991),i=n(626),u=n(7475),l=n(5929),c=o&&o.prototype;if(r({target:"Promise",proto:!0,forced:s,real:!0},{catch:function(e){return this.then(void 0,e)}}),!a&&u(o)){var p=i("Promise").prototype.catch;c.catch!==p&&l(c,"catch",p,{unsafe:!0})}},6934:(e,t,n)=>{var r,a,s,o=n(6887),i=n(2529),u=n(6049),l=n(1899),c=n(8834),p=n(5929),d=n(8929),h=n(904),f=n(4431),m=n(4883),g=n(7475),A=n(941),y=n(5743),x=n(487),b=n(2941).set,I=n(6132),v=n(4845),C=n(2),w=n(8397),E=n(5402),S=n(6991),T=n(7742),k=n(9520),N="Promise",R=T.CONSTRUCTOR,$=T.REJECTION_EVENT,_=T.SUBCLASSING,B=E.getterFor(N),D=E.set,F=S&&S.prototype,O=S,L=F,M=l.TypeError,P=l.document,Q=l.process,U=k.f,G=U,V=!!(P&&P.createEvent&&l.dispatchEvent),W="unhandledrejection",z=function(e){var t;return!(!A(e)||!g(t=e.then))&&t},H=function(e,t){var n,r,a,s=t.value,o=1==t.state,i=o?e.ok:e.fail,u=e.resolve,l=e.reject,p=e.domain;try{i?(o||(2===t.rejection&&X(t),t.rejection=1),!0===i?n=s:(p&&p.enter(),n=i(s),p&&(p.exit(),a=!0)),n===e.promise?l(M("Promise-chain cycle")):(r=z(n))?c(r,n,u,l):u(n)):l(s)}catch(e){p&&!a&&p.exit(),l(e)}},j=function(e,t){e.notified||(e.notified=!0,I((function(){for(var n,r=e.reactions;n=r.get();)H(n,e);e.notified=!1,t&&!e.rejection&&q(e)})))},K=function(e,t,n){var r,a;V?((r=P.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),l.dispatchEvent(r)):r={promise:t,reason:n},!$&&(a=l["on"+e])?a(r):e===W&&v("Unhandled promise rejection",n)},q=function(e){c(b,l,(function(){var t,n=e.facade,r=e.value;if(Y(e)&&(t=C((function(){u?Q.emit("unhandledRejection",r,n):K(W,n,r)})),e.rejection=u||Y(e)?2:1,t.error))throw t.value}))},Y=function(e){return 1!==e.rejection&&!e.parent},X=function(e){c(b,l,(function(){var t=e.facade;u?Q.emit("rejectionHandled",t):K("rejectionhandled",t,e.value)}))},J=function(e,t,n){return function(r){e(t,r,n)}},Z=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,j(e,!0))},ee=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw M("Promise can't be resolved itself");var r=z(t);r?I((function(){var n={done:!1};try{c(r,t,J(ee,n,e),J(Z,n,e))}catch(t){Z(n,t,e)}})):(e.value=t,e.state=1,j(e,!1))}catch(t){Z({done:!1},t,e)}}};if(R&&(L=(O=function(e){y(this,L),m(e),c(r,this);var t=B(this);try{e(J(ee,t),J(Z,t))}catch(e){Z(t,e)}}).prototype,(r=function(e){D(this,{type:N,done:!1,notified:!1,parent:!1,reactions:new w,rejection:!1,state:0,value:void 0})}).prototype=p(L,"then",(function(e,t){var n=B(this),r=U(x(this,O));return n.parent=!0,r.ok=!g(e)||e,r.fail=g(t)&&t,r.domain=u?Q.domain:void 0,0==n.state?n.reactions.add(r):I((function(){H(r,n)})),r.promise})),a=function(){var e=new r,t=B(e);this.promise=e,this.resolve=J(ee,t),this.reject=J(Z,t)},k.f=U=function(e){return e===O||void 0===e?new a(e):G(e)},!i&&g(S)&&F!==Object.prototype)){s=F.then,_||p(F,"then",(function(e,t){var n=this;return new O((function(e,t){c(s,n,e,t)})).then(e,t)}),{unsafe:!0});try{delete F.constructor}catch(e){}d&&d(F,L)}o({global:!0,constructor:!0,wrap:!0,forced:R},{Promise:O}),h(O,N,!1,!0),f(N)},4349:(e,t,n)=>{var r=n(6887),a=n(2529),s=n(6991),o=n(5981),i=n(626),u=n(7475),l=n(487),c=n(6584),p=n(5929),d=s&&s.prototype;if(r({target:"Promise",proto:!0,real:!0,forced:!!s&&o((function(){d.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=l(this,i("Promise")),n=u(e);return this.then(n?function(n){return c(t,e()).then((function(){return n}))}:e,n?function(n){return c(t,e()).then((function(){throw n}))}:e)}}),!a&&u(s)){var h=i("Promise").prototype.finally;d.finally!==h&&p(d,"finally",h,{unsafe:!0})}},8881:(e,t,n)=>{n(6934),n(6890),n(3376),n(5921),n(4069),n(4482)},5921:(e,t,n)=>{var r=n(6887),a=n(8834),s=n(4883),o=n(9520),i=n(2),u=n(3091);r({target:"Promise",stat:!0,forced:n(1542)},{race:function(e){var t=this,n=o.f(t),r=n.reject,l=i((function(){var o=s(t.resolve);u(e,(function(e){a(o,t,e).then(n.resolve,r)}))}));return l.error&&r(l.value),n.promise}})},4069:(e,t,n)=>{var r=n(6887),a=n(8834),s=n(9520);r({target:"Promise",stat:!0,forced:n(7742).CONSTRUCTOR},{reject:function(e){var t=s.f(this);return a(t.reject,void 0,e),t.promise}})},4482:(e,t,n)=>{var r=n(6887),a=n(626),s=n(2529),o=n(6991),i=n(7742).CONSTRUCTOR,u=n(6584),l=a("Promise"),c=s&&!i;r({target:"Promise",stat:!0,forced:s||i},{resolve:function(e){return u(c&&this===l?o:this,e)}})},7971:(e,t,n)=>{var r=n(4620).charAt,a=n(5803),s=n(5402),o=n(5105),i=n(3538),u="String Iterator",l=s.set,c=s.getterFor(u);o(String,"String",(function(e){l(this,{type:u,string:a(e),index:0})}),(function(){var e,t=c(this),n=t.string,a=t.index;return a>=n.length?i(void 0,!0):(e=r(n,a),t.index+=e.length,i(e,!1))}))},7634:(e,t,n)=>{n(6274);var r=n(3281),a=n(1899),s=n(9697),o=n(2029),i=n(2077),u=n(9813)("toStringTag");for(var l in r){var c=a[l],p=c&&c.prototype;p&&s(p)!==u&&o(p,u,l),i[l]=i.Array}},1910:(e,t,n)=>{var r=n(8171);e.exports=r},7460:(e,t,n)=>{var r=n(2956);n(7634),e.exports=r},9662:(e,t,n)=>{var r=n(614),a=n(6330),s=TypeError;e.exports=function(e){if(r(e))return e;throw s(a(e)+" is not a function")}},6077:(e,t,n)=>{var r=n(614),a=String,s=TypeError;e.exports=function(e){if("object"==typeof e||r(e))return e;throw s("Can't set "+a(e)+" as a prototype")}},1223:(e,t,n)=>{var r=n(5112),a=n(30),s=n(3070).f,o=r("unscopables"),i=Array.prototype;null==i[o]&&s(i,o,{configurable:!0,value:a(null)}),e.exports=function(e){i[o][e]=!0}},9670:(e,t,n)=>{var r=n(111),a=String,s=TypeError;e.exports=function(e){if(r(e))return e;throw s(a(e)+" is not an object")}},1318:(e,t,n)=>{var r=n(5656),a=n(1400),s=n(6244),o=function(e){return function(t,n,o){var i,u=r(t),l=s(u),c=a(o,l);if(e&&n!=n){for(;l>c;)if((i=u[c++])!=i)return!0}else for(;l>c;c++)if((e||c in u)&&u[c]===n)return e||c||0;return!e&&-1}};e.exports={includes:o(!0),indexOf:o(!1)}},4326:(e,t,n)=>{var r=n(84),a=r({}.toString),s=r("".slice);e.exports=function(e){return s(a(e),8,-1)}},648:(e,t,n)=>{var r=n(1694),a=n(614),s=n(4326),o=n(5112)("toStringTag"),i=Object,u="Arguments"==s(function(){return arguments}());e.exports=r?s:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=i(e),o))?n:u?s(t):"Object"==(r=s(t))&&a(t.callee)?"Arguments":r}},9920:(e,t,n)=>{var r=n(2597),a=n(3887),s=n(1236),o=n(3070);e.exports=function(e,t,n){for(var i=a(t),u=o.f,l=s.f,c=0;c<i.length;c++){var p=i[c];r(e,p)||n&&r(n,p)||u(e,p,l(t,p))}}},8544:(e,t,n)=>{var r=n(7293);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},6178:e=>{e.exports=function(e,t){return{value:e,done:t}}},8880:(e,t,n)=>{var r=n(9781),a=n(3070),s=n(9114);e.exports=r?function(e,t,n){return a.f(e,t,s(1,n))}:function(e,t,n){return e[t]=n,e}},9114:e=>{e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},8052:(e,t,n)=>{var r=n(614),a=n(3070),s=n(6339),o=n(3072);e.exports=function(e,t,n,i){i||(i={});var u=i.enumerable,l=void 0!==i.name?i.name:t;if(r(n)&&s(n,l,i),i.global)u?e[t]=n:o(t,n);else{try{i.unsafe?e[t]&&(u=!0):delete e[t]}catch(e){}u?e[t]=n:a.f(e,t,{value:n,enumerable:!1,configurable:!i.nonConfigurable,writable:!i.nonWritable})}return e}},3072:(e,t,n)=>{var r=n(7854),a=Object.defineProperty;e.exports=function(e,t){try{a(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},9781:(e,t,n)=>{var r=n(7293);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:e=>{var t="object"==typeof document&&document.all,n=void 0===t&&void 0!==t;e.exports={all:t,IS_HTMLDDA:n}},317:(e,t,n)=>{var r=n(7854),a=n(111),s=r.document,o=a(s)&&a(s.createElement);e.exports=function(e){return o?s.createElement(e):{}}},8324:e=>{e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},8509:(e,t,n)=>{var r=n(317)("span").classList,a=r&&r.constructor&&r.constructor.prototype;e.exports=a===Object.prototype?void 0:a},8113:(e,t,n)=>{var r=n(5005);e.exports=r("navigator","userAgent")||""},7392:(e,t,n)=>{var r,a,s=n(7854),o=n(8113),i=s.process,u=s.Deno,l=i&&i.versions||u&&u.version,c=l&&l.v8;c&&(a=(r=c.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!a&&o&&(!(r=o.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=o.match(/Chrome\/(\d+)/))&&(a=+r[1]),e.exports=a},748:e=>{e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},1060:(e,t,n)=>{var r=n(1702),a=Error,s=r("".replace),o=String(a("zxcasd").stack),i=/\n\s*at [^:]*:[^\n]*/,u=i.test(o);e.exports=function(e,t){if(u&&"string"==typeof e&&!a.prepareStackTrace)for(;t--;)e=s(e,i,"");return e}},2914:(e,t,n)=>{var r=n(7293),a=n(9114);e.exports=!r((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",a(1,7)),7!==e.stack)}))},2109:(e,t,n)=>{var r=n(7854),a=n(1236).f,s=n(8880),o=n(8052),i=n(3072),u=n(9920),l=n(4705);e.exports=function(e,t){var n,c,p,d,h,f=e.target,m=e.global,g=e.stat;if(n=m?r:g?r[f]||i(f,{}):(r[f]||{}).prototype)for(c in t){if(d=t[c],p=e.dontCallGetSet?(h=a(n,c))&&h.value:n[c],!l(m?c:f+(g?".":"#")+c,e.forced)&&void 0!==p){if(typeof d==typeof p)continue;u(d,p)}(e.sham||p&&p.sham)&&s(d,"sham",!0),o(n,c,d,e)}}},7293:e=>{e.exports=function(e){try{return!!e()}catch(e){return!0}}},2104:(e,t,n)=>{var r=n(4374),a=Function.prototype,s=a.apply,o=a.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?o.bind(s):function(){return o.apply(s,arguments)})},4374:(e,t,n)=>{var r=n(7293);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},6916:(e,t,n)=>{var r=n(4374),a=Function.prototype.call;e.exports=r?a.bind(a):function(){return a.apply(a,arguments)}},6530:(e,t,n)=>{var r=n(9781),a=n(2597),s=Function.prototype,o=r&&Object.getOwnPropertyDescriptor,i=a(s,"name"),u=i&&"something"===function(){}.name,l=i&&(!r||r&&o(s,"name").configurable);e.exports={EXISTS:i,PROPER:u,CONFIGURABLE:l}},84:(e,t,n)=>{var r=n(4374),a=Function.prototype,s=a.call,o=r&&a.bind.bind(s,s);e.exports=r?o:function(e){return function(){return s.apply(e,arguments)}}},1702:(e,t,n)=>{var r=n(4326),a=n(84);e.exports=function(e){if("Function"===r(e))return a(e)}},5005:(e,t,n)=>{var r=n(7854),a=n(614);e.exports=function(e,t){return arguments.length<2?function(e){return a(e)?e:void 0}(r[e]):r[e]&&r[e][t]}},8173:(e,t,n)=>{var r=n(9662),a=n(8554);e.exports=function(e,t){var n=e[t];return a(n)?void 0:r(n)}},7854:(e,t,n)=>{var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||function(){return this}()||Function("return this")()},2597:(e,t,n)=>{var r=n(1702),a=n(7908),s=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return s(a(e),t)}},3501:e=>{e.exports={}},490:(e,t,n)=>{var r=n(5005);e.exports=r("document","documentElement")},4664:(e,t,n)=>{var r=n(9781),a=n(7293),s=n(317);e.exports=!r&&!a((function(){return 7!=Object.defineProperty(s("div"),"a",{get:function(){return 7}}).a}))},8361:(e,t,n)=>{var r=n(1702),a=n(7293),s=n(4326),o=Object,i=r("".split);e.exports=a((function(){return!o("z").propertyIsEnumerable(0)}))?function(e){return"String"==s(e)?i(e,""):o(e)}:o},9587:(e,t,n)=>{var r=n(614),a=n(111),s=n(7674);e.exports=function(e,t,n){var o,i;return s&&r(o=t.constructor)&&o!==n&&a(i=o.prototype)&&i!==n.prototype&&s(e,i),e}},2788:(e,t,n)=>{var r=n(1702),a=n(614),s=n(5465),o=r(Function.toString);a(s.inspectSource)||(s.inspectSource=function(e){return o(e)}),e.exports=s.inspectSource},8340:(e,t,n)=>{var r=n(111),a=n(8880);e.exports=function(e,t){r(t)&&"cause"in t&&a(e,"cause",t.cause)}},9909:(e,t,n)=>{var r,a,s,o=n(4811),i=n(7854),u=n(111),l=n(8880),c=n(2597),p=n(5465),d=n(6200),h=n(3501),f="Object already initialized",m=i.TypeError,g=i.WeakMap;if(o||p.state){var A=p.state||(p.state=new g);A.get=A.get,A.has=A.has,A.set=A.set,r=function(e,t){if(A.has(e))throw m(f);return t.facade=e,A.set(e,t),t},a=function(e){return A.get(e)||{}},s=function(e){return A.has(e)}}else{var y=d("state");h[y]=!0,r=function(e,t){if(c(e,y))throw m(f);return t.facade=e,l(e,y,t),t},a=function(e){return c(e,y)?e[y]:{}},s=function(e){return c(e,y)}}e.exports={set:r,get:a,has:s,enforce:function(e){return s(e)?a(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!u(t)||(n=a(t)).type!==e)throw m("Incompatible receiver, "+e+" required");return n}}}},614:(e,t,n)=>{var r=n(4154),a=r.all;e.exports=r.IS_HTMLDDA?function(e){return"function"==typeof e||e===a}:function(e){return"function"==typeof e}},4705:(e,t,n)=>{var r=n(7293),a=n(614),s=/#|\.prototype\./,o=function(e,t){var n=u[i(e)];return n==c||n!=l&&(a(t)?r(t):!!t)},i=o.normalize=function(e){return String(e).replace(s,".").toLowerCase()},u=o.data={},l=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},8554:e=>{e.exports=function(e){return null==e}},111:(e,t,n)=>{var r=n(614),a=n(4154),s=a.all;e.exports=a.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:r(e)||e===s}:function(e){return"object"==typeof e?null!==e:r(e)}},1913:e=>{e.exports=!1},2190:(e,t,n)=>{var r=n(5005),a=n(614),s=n(7976),o=n(3307),i=Object;e.exports=o?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return a(t)&&s(t.prototype,i(e))}},3061:(e,t,n)=>{var r=n(3383).IteratorPrototype,a=n(30),s=n(9114),o=n(8003),i=n(7497),u=function(){return this};e.exports=function(e,t,n,l){var c=t+" Iterator";return e.prototype=a(r,{next:s(+!l,n)}),o(e,c,!1,!0),i[c]=u,e}},1656:(e,t,n)=>{var r=n(2109),a=n(6916),s=n(1913),o=n(6530),i=n(614),u=n(3061),l=n(9518),c=n(7674),p=n(8003),d=n(8880),h=n(8052),f=n(5112),m=n(7497),g=n(3383),A=o.PROPER,y=o.CONFIGURABLE,x=g.IteratorPrototype,b=g.BUGGY_SAFARI_ITERATORS,I=f("iterator"),v="keys",C="values",w="entries",E=function(){return this};e.exports=function(e,t,n,o,f,g,S){u(n,t,o);var T,k,N,R=function(e){if(e===f&&F)return F;if(!b&&e in B)return B[e];switch(e){case v:case C:case w:return function(){return new n(this,e)}}return function(){return new n(this)}},$=t+" Iterator",_=!1,B=e.prototype,D=B[I]||B["@@iterator"]||f&&B[f],F=!b&&D||R(f),O="Array"==t&&B.entries||D;if(O&&(T=l(O.call(new e)))!==Object.prototype&&T.next&&(s||l(T)===x||(c?c(T,x):i(T[I])||h(T,I,E)),p(T,$,!0,!0),s&&(m[$]=E)),A&&f==C&&D&&D.name!==C&&(!s&&y?d(B,"name",C):(_=!0,F=function(){return a(D,this)})),f)if(k={values:R(C),keys:g?F:R(v),entries:R(w)},S)for(N in k)(b||_||!(N in B))&&h(B,N,k[N]);else r({target:t,proto:!0,forced:b||_},k);return s&&!S||B[I]===F||h(B,I,F,{name:f}),m[t]=F,k}},3383:(e,t,n)=>{var r,a,s,o=n(7293),i=n(614),u=n(111),l=n(30),c=n(9518),p=n(8052),d=n(5112),h=n(1913),f=d("iterator"),m=!1;[].keys&&("next"in(s=[].keys())?(a=c(c(s)))!==Object.prototype&&(r=a):m=!0),!u(r)||o((function(){var e={};return r[f].call(e)!==e}))?r={}:h&&(r=l(r)),i(r[f])||p(r,f,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:m}},7497:e=>{e.exports={}},6244:(e,t,n)=>{var r=n(7466);e.exports=function(e){return r(e.length)}},6339:(e,t,n)=>{var r=n(7293),a=n(614),s=n(2597),o=n(9781),i=n(6530).CONFIGURABLE,u=n(2788),l=n(9909),c=l.enforce,p=l.get,d=Object.defineProperty,h=o&&!r((function(){return 8!==d((function(){}),"length",{value:8}).length})),f=String(String).split("String"),m=e.exports=function(e,t,n){"Symbol("===String(t).slice(0,7)&&(t="["+String(t).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!s(e,"name")||i&&e.name!==t)&&(o?d(e,"name",{value:t,configurable:!0}):e.name=t),h&&n&&s(n,"arity")&&e.length!==n.arity&&d(e,"length",{value:n.arity});try{n&&s(n,"constructor")&&n.constructor?o&&d(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var r=c(e);return s(r,"source")||(r.source=f.join("string"==typeof t?t:"")),e};Function.prototype.toString=m((function(){return a(this)&&p(this).source||u(this)}),"toString")},4758:e=>{var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},6277:(e,t,n)=>{var r=n(1340);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:r(e)}},30:(e,t,n)=>{var r,a=n(9670),s=n(6048),o=n(748),i=n(3501),u=n(490),l=n(317),c=n(6200)("IE_PROTO"),p=function(){},d=function(e){return"<script>"+e+"<\/script>"},h=function(e){e.write(d("")),e.close();var t=e.parentWindow.Object;return e=null,t},f=function(){try{r=new ActiveXObject("htmlfile")}catch(e){}var e,t;f="undefined"!=typeof document?document.domain&&r?h(r):((t=l("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(d("document.F=Object")),e.close(),e.F):h(r);for(var n=o.length;n--;)delete f.prototype[o[n]];return f()};i[c]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(p.prototype=a(e),n=new p,p.prototype=null,n[c]=e):n=f(),void 0===t?n:s.f(n,t)}},6048:(e,t,n)=>{var r=n(9781),a=n(3353),s=n(3070),o=n(9670),i=n(5656),u=n(1956);t.f=r&&!a?Object.defineProperties:function(e,t){o(e);for(var n,r=i(t),a=u(t),l=a.length,c=0;l>c;)s.f(e,n=a[c++],r[n]);return e}},3070:(e,t,n)=>{var r=n(9781),a=n(4664),s=n(3353),o=n(9670),i=n(4948),u=TypeError,l=Object.defineProperty,c=Object.getOwnPropertyDescriptor;t.f=r?s?function(e,t,n){if(o(e),t=i(t),o(n),"function"==typeof e&&"prototype"===t&&"value"in n&&"writable"in n&&!n.writable){var r=c(e,t);r&&r.writable&&(e[t]=n.value,n={configurable:"configurable"in n?n.configurable:r.configurable,enumerable:"enumerable"in n?n.enumerable:r.enumerable,writable:!1})}return l(e,t,n)}:l:function(e,t,n){if(o(e),t=i(t),o(n),a)try{return l(e,t,n)}catch(e){}if("get"in n||"set"in n)throw u("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},1236:(e,t,n)=>{var r=n(9781),a=n(6916),s=n(5296),o=n(9114),i=n(5656),u=n(4948),l=n(2597),c=n(4664),p=Object.getOwnPropertyDescriptor;t.f=r?p:function(e,t){if(e=i(e),t=u(t),c)try{return p(e,t)}catch(e){}if(l(e,t))return o(!a(s.f,e,t),e[t])}},8006:(e,t,n)=>{var r=n(6324),a=n(748).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},5181:(e,t)=>{t.f=Object.getOwnPropertySymbols},9518:(e,t,n)=>{var r=n(2597),a=n(614),s=n(7908),o=n(6200),i=n(8544),u=o("IE_PROTO"),l=Object,c=l.prototype;e.exports=i?l.getPrototypeOf:function(e){var t=s(e);if(r(t,u))return t[u];var n=t.constructor;return a(n)&&t instanceof n?n.prototype:t instanceof l?c:null}},7976:(e,t,n)=>{var r=n(1702);e.exports=r({}.isPrototypeOf)},6324:(e,t,n)=>{var r=n(1702),a=n(2597),s=n(5656),o=n(1318).indexOf,i=n(3501),u=r([].push);e.exports=function(e,t){var n,r=s(e),l=0,c=[];for(n in r)!a(i,n)&&a(r,n)&&u(c,n);for(;t.length>l;)a(r,n=t[l++])&&(~o(c,n)||u(c,n));return c}},1956:(e,t,n)=>{var r=n(6324),a=n(748);e.exports=Object.keys||function(e){return r(e,a)}},5296:(e,t)=>{var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,a=r&&!n.call({1:2},1);t.f=a?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},7674:(e,t,n)=>{var r=n(1702),a=n(9670),s=n(6077);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return a(n),s(r),t?e(n,r):n.__proto__=r,n}}():void 0)},2140:(e,t,n)=>{var r=n(6916),a=n(614),s=n(111),o=TypeError;e.exports=function(e,t){var n,i;if("string"===t&&a(n=e.toString)&&!s(i=r(n,e)))return i;if(a(n=e.valueOf)&&!s(i=r(n,e)))return i;if("string"!==t&&a(n=e.toString)&&!s(i=r(n,e)))return i;throw o("Can't convert object to primitive value")}},3887:(e,t,n)=>{var r=n(5005),a=n(1702),s=n(8006),o=n(5181),i=n(9670),u=a([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=s.f(i(e)),n=o.f;return n?u(t,n(e)):t}},2626:(e,t,n)=>{var r=n(3070).f;e.exports=function(e,t,n){n in e||r(e,n,{configurable:!0,get:function(){return t[n]},set:function(e){t[n]=e}})}},4488:(e,t,n)=>{var r=n(8554),a=TypeError;e.exports=function(e){if(r(e))throw a("Can't call method on "+e);return e}},8003:(e,t,n)=>{var r=n(3070).f,a=n(2597),s=n(5112)("toStringTag");e.exports=function(e,t,n){e&&!n&&(e=e.prototype),e&&!a(e,s)&&r(e,s,{configurable:!0,value:t})}},6200:(e,t,n)=>{var r=n(2309),a=n(9711),s=r("keys");e.exports=function(e){return s[e]||(s[e]=a(e))}},5465:(e,t,n)=>{var r=n(7854),a=n(3072),s="__core-js_shared__",o=r[s]||a(s,{});e.exports=o},2309:(e,t,n)=>{var r=n(1913),a=n(5465);(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.26.0",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.26.0/LICENSE",source:"https://github.com/zloirock/core-js"})},6293:(e,t,n)=>{var r=n(7392),a=n(7293);e.exports=!!Object.getOwnPropertySymbols&&!a((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},1400:(e,t,n)=>{var r=n(9303),a=Math.max,s=Math.min;e.exports=function(e,t){var n=r(e);return n<0?a(n+t,0):s(n,t)}},5656:(e,t,n)=>{var r=n(8361),a=n(4488);e.exports=function(e){return r(a(e))}},9303:(e,t,n)=>{var r=n(4758);e.exports=function(e){var t=+e;return t!=t||0===t?0:r(t)}},7466:(e,t,n)=>{var r=n(9303),a=Math.min;e.exports=function(e){return e>0?a(r(e),9007199254740991):0}},7908:(e,t,n)=>{var r=n(4488),a=Object;e.exports=function(e){return a(r(e))}},7593:(e,t,n)=>{var r=n(6916),a=n(111),s=n(2190),o=n(8173),i=n(2140),u=n(5112),l=TypeError,c=u("toPrimitive");e.exports=function(e,t){if(!a(e)||s(e))return e;var n,u=o(e,c);if(u){if(void 0===t&&(t="default"),n=r(u,e,t),!a(n)||s(n))return n;throw l("Can't convert object to primitive value")}return void 0===t&&(t="number"),i(e,t)}},4948:(e,t,n)=>{var r=n(7593),a=n(2190);e.exports=function(e){var t=r(e,"string");return a(t)?t:t+""}},1694:(e,t,n)=>{var r={};r[n(5112)("toStringTag")]="z",e.exports="[object z]"===String(r)},1340:(e,t,n)=>{var r=n(648),a=String;e.exports=function(e){if("Symbol"===r(e))throw TypeError("Cannot convert a Symbol value to a string");return a(e)}},6330:e=>{var t=String;e.exports=function(e){try{return t(e)}catch(e){return"Object"}}},9711:(e,t,n)=>{var r=n(1702),a=0,s=Math.random(),o=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+o(++a+s,36)}},3307:(e,t,n)=>{var r=n(6293);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3353:(e,t,n)=>{var r=n(9781),a=n(7293);e.exports=r&&a((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},4811:(e,t,n)=>{var r=n(7854),a=n(614),s=r.WeakMap;e.exports=a(s)&&/native code/.test(String(s))},5112:(e,t,n)=>{var r=n(7854),a=n(2309),s=n(2597),o=n(9711),i=n(6293),u=n(3307),l=a("wks"),c=r.Symbol,p=c&&c.for,d=u?c:c&&c.withoutSetter||o;e.exports=function(e){if(!s(l,e)||!i&&"string"!=typeof l[e]){var t="Symbol."+e;i&&s(c,e)?l[e]=c[e]:l[e]=u&&p?p(t):d(t)}return l[e]}},9191:(e,t,n)=>{var r=n(5005),a=n(2597),s=n(8880),o=n(7976),i=n(7674),u=n(9920),l=n(2626),c=n(9587),p=n(6277),d=n(8340),h=n(1060),f=n(2914),m=n(9781),g=n(1913);e.exports=function(e,t,n,A){var y="stackTraceLimit",x=A?2:1,b=e.split("."),I=b[b.length-1],v=r.apply(null,b);if(v){var C=v.prototype;if(!g&&a(C,"cause")&&delete C.cause,!n)return v;var w=r("Error"),E=t((function(e,t){var n=p(A?t:e,void 0),r=A?new v(e):new v;return void 0!==n&&s(r,"message",n),f&&s(r,"stack",h(r.stack,2)),this&&o(C,this)&&c(r,this,E),arguments.length>x&&d(r,arguments[x]),r}));if(E.prototype=C,"Error"!==I?i?i(E,w):u(E,w,{name:!0}):m&&y in v&&(l(E,v,y),l(E,v,"prepareStackTrace")),u(E,v),!g)try{C.name!==I&&s(C,"name",I),C.constructor=E}catch(e){}return E}}},6992:(e,t,n)=>{var r=n(5656),a=n(1223),s=n(7497),o=n(9909),i=n(3070).f,u=n(1656),l=n(6178),c=n(1913),p=n(9781),d="Array Iterator",h=o.set,f=o.getterFor(d);e.exports=u(Array,"Array",(function(e,t){h(this,{type:d,target:r(e),index:0,kind:t})}),(function(){var e=f(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,l(void 0,!0)):l("keys"==n?r:"values"==n?t[r]:[r,t[r]],!1)}),"values");var m=s.Arguments=s.Array;if(a("keys"),a("values"),a("entries"),!c&&p&&"values"!==m.name)try{i(m,"name",{value:"values"})}catch(e){}},1703:(e,t,n)=>{var r=n(2109),a=n(7854),s=n(2104),o=n(9191),i=a.WebAssembly,u=7!==Error("e",{cause:7}).cause,l=function(e,t){var n={};n[e]=o(e,t,u),r({global:!0,constructor:!0,arity:1,forced:u},n)},c=function(e,t){if(i&&i[e]){var n={};n[e]=o("WebAssembly."+e,t,u),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:u},n)}};l("Error",(function(e){return function(t){return s(e,this,arguments)}})),l("EvalError",(function(e){return function(t){return s(e,this,arguments)}})),l("RangeError",(function(e){return function(t){return s(e,this,arguments)}})),l("ReferenceError",(function(e){return function(t){return s(e,this,arguments)}})),l("SyntaxError",(function(e){return function(t){return s(e,this,arguments)}})),l("TypeError",(function(e){return function(t){return s(e,this,arguments)}})),l("URIError",(function(e){return function(t){return s(e,this,arguments)}})),c("CompileError",(function(e){return function(t){return s(e,this,arguments)}})),c("LinkError",(function(e){return function(t){return s(e,this,arguments)}})),c("RuntimeError",(function(e){return function(t){return s(e,this,arguments)}}))},3948:(e,t,n)=>{var r=n(7854),a=n(8324),s=n(8509),o=n(6992),i=n(8880),u=n(5112),l=u("iterator"),c=u("toStringTag"),p=o.values,d=function(e,t){if(e){if(e[l]!==p)try{i(e,l,p)}catch(t){e[l]=p}if(e[c]||i(e,c,t),a[t])for(var n in o)if(e[n]!==o[n])try{i(e,n,o[n])}catch(t){e[n]=o[n]}}};for(var h in a)d(r[h]&&r[h].prototype,h);d(s,"DOMTokenList")},6226:(e,t,n)=>{e.exports=n(7460)},7445:(e,t,n)=>{e.exports=n(3685)}},N={};function R(e){var t=N[e];if(void 0!==t)return t.exports;var n=N[e]={exports:{}};return k[e](n,n.exports,R),n.exports}R.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return R.d(t,{a:t}),t},R.d=(e,t)=>{for(var n in t)R.o(t,n)&&!R.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},R.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),R.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var $={};(()=>{R.d($,{c_:()=>b,lc:()=>y,hj:()=>x,vm:()=>w,vB:()=>v,E:()=>A,kg:()=>c,E7:()=>h});var e=R(7445);function t(t,n,r){return n in t?e(t,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[n]=r,t}R(1703),R(6992),R(3948);var n=R(6226),r=R.n(n);class a{constructor(){t(this,"_events",{}),t(this,"addListener",this.on)}getListeners(e){return this._events[e]?this._events[e].map((e=>e.listener)):[]}on(e,t){this._events[e]||(this._events[e]=[]);const n=this._events[e];-1===this._indexOfListener(n,t)&&n.push({listener:t,once:!1})}once(e,t){this._events[e]||(this._events[e]=[]);const n=this._events[e];-1===this._indexOfListener(n,t)&&n.push({listener:t,once:!0})}off(e,t){if(!this._events[e])return;const n=this._events[e],r=this._indexOfListener(n,t);-1!==r&&n.splice(r,1),0===this._events[e].length&&delete this._events[e]}removeAllListeners(e){e?delete this._events[e]:this._events={}}emit(e){this._events[e]||(this._events[e]=[]);const t=this._events[e].map((e=>e));for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];for(let n=0;n<t.length;n+=1){const a=t[n];a.once&&this.off(e,a.listener),a.listener.apply(this,r||[])}}_indexOfListener(e,t){let n=e.length;for(;n--;)if(e[n].listener===t)return n;return-1}emitAsPromise(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];return 0===this.getListeners(e).length?r().reject(new Error("No promise event handler.")):new(r())(((t,r)=>{this.emit(e,...n,t,r)}))}emitAsPromiseNoResponse(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];return 0===this.getListeners(e).length?r().resolve():new(r())(((t,r)=>{this.emit(e,...n,t,r)}))}}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:7,t=arguments.length>1?arguments[1]:void 0;const n=Math.random().toString(16).substr(2,e).toLowerCase();return n.length===e?"".concat(t).concat(n):"".concat(t).concat(n)+s(e-n.length,"")}const o=Date.now(),i={DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4};function u(){const e=new Date;return e.toTimeString().split(" ")[0]+":"+e.getMilliseconds()}const l=e=>{for(const t in i)if(Object.prototype.hasOwnProperty.call(i,t)&&i[t]===e)return t;return"DEFAULT"},c=new class{constructor(){t(this,"logLevel",i.DEBUG),t(this,"hookLog",void 0)}debug(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=[i.DEBUG].concat(t);this.log.apply(this,r)}info(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=[i.INFO].concat(t);this.log.apply(this,r)}warning(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=[i.WARNING].concat(t);this.log.apply(this,r)}error(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=[i.ERROR].concat(t);this.log.apply(this,r)}log(){for(var e,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];if(Date.now()-o<100)return void setTimeout((()=>{this.log(...n)}),Date.now()-o);const a=Math.max(0,Math.min(4,n[0]));if(n[0]=u()+" Agora-Extension [".concat(l(a),"]:"),a<this.logLevel)return;const s=u()+" %cAgora-Extension [".concat(l(a),"]:");let c=[];switch(a){case i.DEBUG:c=[s,"color: #64B5F6;"].concat(n.slice(1)),console.log.apply(console,c);break;case i.INFO:c=[s,"color: #1E88E5; font-weight: bold;"].concat(n.slice(1)),console.log.apply(console,c);break;case i.WARNING:c=[s,"color: #FB8C00; font-weight: bold;"].concat(n.slice(1)),console.warn.apply(console,c);break;case i.ERROR:c=[s,"color: #B00020; font-weight: bold;"].concat(n.slice(1)),console.error.apply(console,c)}null===(e=this.hookLog)||void 0===e||e.call(this,a,c)}};function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function d(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?p(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const h=new class{constructor(){t(this,"apiInvokeMsgQueue",[]),t(this,"hookApiInvoke",void 0)}reportApiInvoke(e){e.timeout=e.timeout||6e4,e.reportResult=void 0===e.reportResult||e.reportResult;const t=Date.now(),n=()=>({name:e.name,apiInvokeTime:t,options:e.options});let a=!1;var s;(s=e.timeout,new(r())((e=>{window.setTimeout(e,s)}))).then((()=>{a||(this.sendApiInvoke(d(d({},n()),{},{error:"API_INVOKE_TIMEOUT",success:!1})),c.debug("".concat(e.name," timeout")))}));const o=new Error("".concat(e.name,": this api invoke is end"));return{onSuccess:t=>{if(a)throw o;a=!0,this.sendApiInvoke(d(d({},n()),{},{success:!0},e.reportResult&&{result:t}))},onError:e=>{if(a)throw e;a=!0,this.sendApiInvoke(d(d({},n()),{},{success:!1,error:e.toString()}))}}}sendApiInvoke(e){this.hookApiInvoke?(this.hookApiInvoke([...this.apiInvokeMsgQueue,e]),this.apiInvokeMsgQueue=[]):this.apiInvokeMsgQueue.push(e)}};function f(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function m(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?f(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):f(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}class g extends a{get enabled(){return this._enabled}output(e,t){if(this.outputTrack===e)return;const n=h.reportApiInvoke({name:"".concat(this.name,".output"),options:{track:null==e?void 0:e.toString()}});this.outputTrack=e,this.destination&&this.destination.updateInput({track:e,context:t}),n.onSuccess()}constructor(){super(),t(this,"inputTrack",void 0),t(this,"outputTrack",void 0),t(this,"_enabled",!0),t(this,"_source",void 0),t(this,"ID",s(6,"")),t(this,"destination",void 0),t(this,"context",void 0),t(this,"name",void 0)}enable(){if(this._enabled)return;const e=h.reportApiInvoke({name:"".concat(this.name,".enable"),options:!0});c.info("".concat(this.name,"-").concat(this.ID," enabled")),this._enabled=!0;try{var t;const n=null===(t=this.onEnableChange)||void 0===t?void 0:t.call(this,this._enabled);if(n instanceof r())return n.then((()=>{e.onSuccess()})).catch((t=>{throw e.onError(t),t}));e.onSuccess()}catch(t){throw e.onError(t),t}}disable(){if(!this._enabled)return;const e=h.reportApiInvoke({name:"".concat(this.name,".enable"),options:!1});c.info("".concat(this.name,"-").concat(this.ID," disabled")),this._enabled=!1;try{var t;const n=null===(t=this.onEnableChange)||void 0===t?void 0:t.call(this,this._enabled);if(n instanceof r())return n.then((()=>{e.onSuccess()})).catch((t=>{throw e.onError(t),t}));e.onSuccess()}catch(t){throw e.onError(t),t}}}class A extends g{get kind(){return"video"}pipe(e){const t=h.reportApiInvoke({name:"".concat(this.name,".pipe"),options:{processor:e.name}});if(this.destination===e)return t.onSuccess(),e;if(e._source){const n=new Error("Processor ".concat(e.name," already being piped, please call ").concat(e._source.name,".unpipe() beforehand."));throw t.onError(n),n}return this.destination&&this.unpipe(),this.destination=e,e._source=this,this.context&&this.destination.updateInput({track:this.outputTrack,context:this.context}),t.onSuccess(),e}unpipe(){if(!this.destination)return;const e=h.reportApiInvoke({name:"".concat(this.name,".unpipe"),options:{processor:this.destination.name}});c.info("unpiping processor ".concat(this.destination.name,"-").concat(this.destination.ID));try{const e=this.destination;this.destination._source=void 0,this.destination=void 0,e.reset()}finally{e.onSuccess()}}updateInput(e){var t,n;e.context!==this.context&&(this.context=e.context,null===(t=this.onPiped)||void 0===t||t.call(this,this.context),this.destination&&this.destination.updateInput({track:this.outputTrack,context:e.context})),e.track&&this.inputTrack!==e.track&&(this.inputTrack=e.track,null===(n=this.onTrack)||void 0===n||n.call(this,e.track,this.context))}reset(){var e;this.context&&this.context.requestRevertConstraints(this),this.inputTrack=void 0,this.context=void 0,null===(e=this.onUnpiped)||void 0===e||e.call(this),this.destination&&this.destination.reset()}}class y extends g{constructor(){super(...arguments),t(this,"inputNode",void 0),t(this,"outputNode",void 0),t(this,"destination",void 0),t(this,"context",void 0)}get kind(){return"audio"}pipe(e){const t=h.reportApiInvoke({name:"".concat(this.name,".pipe"),options:{processor:e.name}});if(this.destination===e)return t.onSuccess(),e;if(e._source){const n=new Error("Processor ".concat(e.name," already being piped, please call ").concat(e._source.name,".unpipe() beforehand."));throw t.onError(n),n}return this.destination&&this.unpipe(),this.destination=e,e._source=this,this.context&&this.destination.updateInput({track:this.outputTrack,node:this.outputNode,context:this.context}),t.onSuccess(),e}unpipe(){if(!this.destination)return;c.info("unpiping processor ".concat(this.destination.name,"-").concat(this.destination.ID));const e=h.reportApiInvoke({name:"".concat(this.name,".unpipe"),options:{processor:this.destination.name}});try{var t;let e=this.destination;null===(t=this.outputNode)||void 0===t||t.disconnect(),this.destination._source=void 0,this.destination=void 0,e.reset()}finally{e.onSuccess()}}output(e,t){if(e instanceof MediaStreamTrack)super.output(e,t);else if(e instanceof AudioNode){if(this.outputNode===e)return;const n=h.reportApiInvoke({name:"".concat(this.name,".output"),options:m(m({},e instanceof MediaStreamTrack&&{track:e.toString()}),e instanceof AudioNode&&{audioNode:e.toString()})});this.outputNode=e,this.destination&&this.destination.updateInput({node:e,context:t}),n.onSuccess()}}updateInput(e){var t,n,r;e.context!==this.context&&(this.context=e.context,null===(t=this.onPiped)||void 0===t||t.call(this,this.context),this.destination&&this.destination.updateInput({track:this.outputTrack,node:this.outputNode,context:e.context})),e.track&&this.inputTrack!==e.track&&(this.inputTrack=e.track,null===(n=this.onTrack)||void 0===n||n.call(this,e.track,this.context)),e.node&&this.inputNode!==e.node&&(this.inputNode=e.node,null===(r=this.onNode)||void 0===r||r.call(this,e.node,this.context))}reset(){var e;this.context&&this.context.requestRevertConstraints(this),this.inputTrack=void 0,this.inputNode=void 0,null===(e=this.onUnpiped)||void 0===e||e.call(this,this.context),this.context=void 0,this.destination&&this.destination.reset()}}class x{constructor(){t(this,"__registered__",!1),t(this,"logger",c),t(this,"reporter",h),t(this,"parameters",{})}createProcessor(){if(!this.__registered__)throw new Error("Extension not registered yet!");return this._createProcessor()}}class b extends x{}let I;class v{get running(){return this._running}constructor(e,n){if(t(this,"type",void 0),t(this,"interval",void 0),t(this,"fn",void 0),t(this,"_running",!1),t(this,"_osc",void 0),!e)throw new Error;if(n<=0)throw new Error;this.type=e,this.interval=n}add(e){this.fn=e}remove(){this.fn=void 0}start(){if(!this._running)switch(this._running=!0,this.type){case"Timer":{const e=()=>{setTimeout((()=>{this.fn&&this.fn(),this._running&&e()}),this.interval)};e();break}case"RAF":{const e=t=>{requestAnimationFrame((n=>{n-t<this.interval?this._running&&e(t):(this.fn&&this.fn(),this._running&&e(n))}))};e(performance.now());break}case"Oscillator":{I||(I=new AudioContext);const e=I.createGain();let t;e.gain.value=0,e.connect(I.destination);const n=()=>{this.fn&&this.fn(),t&&t.disconnect(),t=I.createOscillator(),this._osc=t,t.connect(e),this._running&&(t.onended=n,t.start(0),t.stop(I.currentTime+this.interval/1e3))};n();break}}}stop(){this._running=!1,this._osc&&(this._osc.onended=null,this._osc=void 0)}}let C=1;class w{constructor(e){t(this,"lockingPromise",r().resolve()),t(this,"locks",0),t(this,"name",""),t(this,"lockId",void 0),this.lockId=C++,e&&(this.name=e)}get isLocked(){return this.locks>0}lock(e){let t;this.locks+=1;const n=new(r())((e=>{t=()=>{this.locks-=1,e()}})),a=this.lockingPromise.then((()=>t));return this.lockingPromise=this.lockingPromise.then((()=>n)),a}}})();var _=$.hj,B=$.E,D=$.kg,F=$.E7;class O{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class L{refCount(e){return M("refCount")}incRef(e){return M("incRef")}timerAvailable(){return!0}time(e){return M("time")}read(e){return M("read")}readSync(e){return M("readSync")}readToGPU(e,t){return M("readToGPU")}getTexture(e){return M("getTexture")}numDataIds(){return M("numDataIds")}disposeData(e,t){return M("disposeData")}write(e,t,n){return M("write")}move(e,t,n,r,a){return M("move")}createTensorFromGPUData(e,t,n){return M("createTensorFromGPUData")}memory(){return M("memory")}floatPrecision(){return M("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return M("dispose")}}function M(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function P(e,t,n){return Math.max(e,Math.min(t,n))}function Q(e){return e%2==0?e:e+1}function U(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function G(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function V(e,t,n=""){G(H(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function W(e){G(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function z(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function H(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function j(e){return e%1==0}function K(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function q(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function Y(e,t=(e=>0),n,r){return new Promise(((a,s)=>{let o=0;const i=()=>{if(e())return void a();o++;const u=t(o);null!=n&&o>=n?s():null!=r?r(i,u):setTimeout(i,u)};i()}))}function X(e,t){const n=t.length;return G((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),G(e.every((e=>j(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function J(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:X(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function Z(e,t){return ee(e,t)}function ee(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function te(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function ne(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function re(e){return"string"==typeof e||e instanceof String}function ae(e){return Array.isArray(e)?ae(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":"number"==typeof e?"float32":re(e)?"string":"boolean"==typeof e?"bool":"float32"}function se(e){return!!(e&&e.constructor&&e.call&&e.apply)}function oe(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ie(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function ue(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=ue(e+t*i,o,n,r)}return a}function le(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return ue(0,e,t,n)}function ce(e,t){const n=pe(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function pe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function de(e){e.forEach((t=>{G(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function he(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function fe(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function me(e){return e&&e.then&&"function"==typeof e.then}const ge="tfjsflags";class Ae{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ye,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(xe().getBool("IS_TEST")||xe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];xe().getBool("IS_TEST")||xe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(me(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);ge in e&&e[ge].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function ye(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function xe(){return Ie}let be,Ie=null;function ve(){if(null==be){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}be=e}return be}function Ce(e,t){const n=function(){const e=ve();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const we="Acos",Ee="Acosh",Se="Add",Te="AddN",ke="ArgMax",Ne="ArgMin",Re="Asin",$e="Asinh",_e="Atan",Be="Atanh",De="Atan2",Fe="AvgPool",Oe="AvgPool3D",Le="BatchMatMul",Me="BatchToSpaceND",Pe="Bincount",Qe="BitwiseAnd",Ue="BroadcastArgs",Ge="Cast",Ve="Ceil",We="ClipByValue",ze="Complex",He="ComplexAbs",je="Concat",Ke="Conv2D",qe="Conv2DBackpropFilter",Ye="Conv2DBackpropInput",Xe="Conv3D",Je="Conv3DBackpropInputV2",Ze="Cosh",et="Cumprod",tt="Cumsum",nt="CropAndResize",rt="DenseBincount",at="DepthToSpace",st="DepthwiseConv2dNative",ot="DepthwiseConv2dNativeBackpropFilter",it="DepthwiseConv2dNativeBackpropInput",ut="Diag",lt="Dilation2D",ct="RealDiv",pt="Einsum",dt="Equal",ht="Exp",ft="ExpandDims",mt="Expm1",gt="Fill",At="FlipLeftRight",yt="Floor",xt="FloorDiv",bt="FusedBatchNorm",It="GatherV2",vt="GatherNd",Ct="Greater",wt="GreaterEqual",Et="Identity",St="IFFT",Tt="Imag",kt="IsFinite",Nt="IsInf",Rt="IsNan",$t="LeakyRelu",_t="Less",Bt="LessEqual",Dt="LinSpace",Ft="Log",Ot="Log1p",Lt="LogicalAnd",Mt="LogicalNot",Pt="LogicalOr",Qt="Maximum",Ut="MaxPool",Gt="MaxPool3D",Vt="MaxPoolWithArgmax",Wt="Mean",zt="Minimum",Ht="MirrorPad",jt="Multinomial",Kt="Multiply",qt="NotEqual",Yt="NonMaxSuppressionV3",Xt="NonMaxSuppressionV4",Jt="NonMaxSuppressionV5",Zt="OnesLike",en="OneHot",tn="Pack",nn="PadV2",rn="Prelu",an="Prod",sn="RaggedGather",on="RaggedRange",un="RaggedTensorToTensor",ln="Range",cn="Real",pn="Reciprocal",dn="Relu",hn="Reshape",fn="ResizeNearestNeighbor",mn="ResizeBilinear",gn="Relu6",An="Reverse",yn="Round",xn="Rsqrt",bn="ScatterNd",In="TensorScatterUpdate",vn="SearchSorted",Cn="Select",wn="Selu",En="Slice",Sn="Sinh",Tn="Sign",kn="Sigmoid",Nn="Softplus",Rn="Sqrt",$n="SpaceToBatchND",_n="SplitV",Bn="Softmax",Dn="SparseFillEmptyRows",Fn="SparseReshape",On="SparseSegmentMean",Ln="SparseSegmentSum",Mn="SparseToDense",Pn="SquaredDifference",Qn="StaticRegexReplace",Un="StridedSlice",Gn="StringNGrams",Vn="StringSplit",Wn="StringToHashBucketFast",zn="Sub",Hn="Tanh",jn="Tile",Kn="TopK",qn="Transform",Yn="Transpose",Xn="Unique",Jn="Unpack",Zn="UnsortedSegmentSum",er="ZerosLike",tr="Step",nr="RotateWithOffset",rr="_FusedMatMul",ar="FusedConv2D",sr="FusedDepthwiseConv2D";function or(...e){xe().getBool("IS_TEST")||xe().getBool("PROD")||console.warn(...e)}function ir(...e){xe().getBool("IS_TEST")||xe().getBool("PROD")||console.log(...e)}const ur=Ce("kernelRegistry",(()=>new Map)),lr=Ce("gradRegistry",(()=>new Map));function cr(e,t){const n=fr(e,t);return ur.get(n)}function pr(e){return lr.get(e)}function dr(e){const t=ur.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function hr(e){const{kernelName:t,backendName:n}=e,r=fr(t,n);ur.has(r)&&or(`The kernel '${t}' for backend '${n}' is already registered`),ur.set(r,e)}function fr(e,t){return`${t}_${e}`}function mr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var gr=n(72);const Ar=n.n(gr)()||gr;function yr(e){return Ar.fromString(e,!0,16)}const xr=yr("c3a5c85c97cb3127"),br=yr("b492b66fbe98f273"),Ir=yr("9ae16a3b2f90404f");function vr(e){return e.xor(e.shru(47))}function Cr(e,t,n){const r=e.slice(t,t+n);return Ar.fromBytes(Array.from(r),!0,!0)}function wr(e,t){return Cr(e,t,8)}function Er(e,t){return Cr(e,t,4)}function Sr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Tr(e,t,n=yr("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function kr(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Sr(s.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),s=s.add(Sr(a,44)),[a.add(r),s.add(o)]}(wr(e,t),wr(e,t+8),wr(e,t+16),wr(e,t+24),n,r)}function Nr(e,t=e.length){const n=Ar.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Ir.add(2*t),r=wr(e,0).add(Ir),a=wr(e,t-8);return Tr(Sr(a,37).mul(n).add(r),Sr(r,25).add(a).mul(n),n)}if(t>=4){const n=Ir.add(2*t);return Tr(Er(e,0).shl(3).add(t),Er(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return vr(Ir.mul(n).xor(xr.mul(r))).mul(Ir)}return Ir}(e,t):function(e,t=e.length){const n=Ir.add(2*t),r=wr(e,0).mul(br),a=wr(e,8),s=wr(e,t-8).mul(n),o=wr(e,t-16).mul(Ir);return Tr(Sr(r.add(a),43).add(Sr(s,30)).add(o),r.add(Sr(a.add(Ir),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Ir.add(2*t),r=wr(e,0).mul(Ir),a=wr(e,8),s=wr(e,t-8).mul(n),o=wr(e,t-16).mul(Ir),i=Sr(r.add(a),43).add(Sr(s,30)).add(o),u=Tr(i,r.add(Sr(a.add(Ir),18)).add(s),n),l=wr(e,16).mul(n),c=wr(e,24),p=i.add(wr(e,t-32)).mul(n),d=u.add(wr(e,t-24)).mul(n);return Tr(Sr(l.add(c),43).add(Sr(p,30)).add(d),l.add(Sr(c.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(br).add(113),s=vr(a.mul(Ir).add(113)).mul(Ir),o=[Ar.UZERO,Ar.UZERO],i=[Ar.UZERO,Ar.UZERO];r=r.mul(Ir).add(wr(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Sr(r.add(a).add(o[0]).add(wr(e,u+8)),37).mul(br),a=Sr(a.add(o[1]).add(wr(e,u+48)),42).mul(br),r=r.xor(i[1]),a=a.add(o[0]).add(wr(e,u+40)),s=Sr(s.add(i[0]),33).mul(br),o=kr(e,u,o[1].mul(br),r.add(i[0])),i=kr(e,u+32,s.add(i[1]),a.add(wr(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const p=br.add(s.and(255).shl(1));return u=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),r=Sr(r.add(a).add(o[0]).add(wr(e,u+8)),37).mul(p),a=Sr(a.add(o[1]).add(wr(e,u+48)),42).mul(p),r=r.xor(i[1].mul(9)),a=a.add(o[0].mul(9).add(wr(e,u+40))),s=Sr(s.add(i[0]),33).mul(p),o=kr(e,u,o[1].mul(p),r.add(i[0])),i=kr(e,u+32,s.add(i[1]),a.add(wr(e,u+16))),[s,r]=[r,s],Tr(Tr(o[0],i[0],p).add(vr(a).mul(xr)).add(s),Tr(o[1],i[1],p).add(r),p)}function Rr(e,t){return"string"===t?Br(e):$r([e],t)}function $r(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Or(e)),xe().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function _r(){return xe().platform.now()}function Br(e,t="utf-8"){return t=t||"utf-8",xe().platform.encode(e,t)}function Dr(e,t="utf-8"){return t=t||"utf-8",xe().platform.decode(e,t)}function Fr(e){return null!=xe().platform.isTypedArray?xe().platform.isTypedArray(e):mr(e)}function Or(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||me(e)||null==e||Fr(e)&&n)t.push(e);else if(Array.isArray(e)||Fr(e))for(let r=0;r<e.length;++r)Or(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)Or(e[a],t,n)}return t}class Lr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Pr)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const o=_r();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:_r()-o})}if(xe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Mr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Mr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Pr{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?q(`${r}ms`,9):r.error,i=q(e,25),u=t.rank,l=t.size,c=q(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${c}\t%c${l}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Qr=20,Ur=3,Gr=7;function Vr(e,t,n,r){const a=ie(t),s=function(e,t,n,r){const a=z(t),s=r[r.length-1],o=new Array(s).fill(0),i=t.length,u="complex64"===n?jr(e):e;if(i>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],Wr(u[t+e],0,n).length)}return o}(e,t,n,a),o=t.length,i=Hr(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${o}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map((e=>"    "+e)).join("\n")),u.join("\n")}function Wr(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(Gr))} + ${parseFloat(e[1].toFixed(Gr))}j`:re(e)?`'${e}'`:"bool"===n?zr(e):parseFloat(e.toFixed(Gr)).toString(),q(r,t)}function zr(e){return 0===e?"false":"true"}function Hr(e,t,n,r,a,s=!0){const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u)return"complex64"===n?[Wr(jr(e)[0],0,n)]:"bool"===n?[zr(e[0])]:[e[0].toString()];if(1===u){if(i>Qr){const t=Ur*o;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-Ur)*o,i*o));return"complex64"===n&&(r=jr(r),s=jr(s)),["["+r.map(((e,t)=>Wr(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Wr(e,a[i-Ur+t],n))).join(", ")+"]"]}return["["+("complex64"===n?jr(e):Array.from(e)).map(((e,t)=>Wr(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),p=r[0]*o,d=[];if(i>Qr){for(let t=0;t<Ur;t++){const r=t*p,s=r+p;d.push(...Hr(e.slice(r,s),l,n,c,a,!1))}d.push("...");for(let t=i-Ur;t<i;t++){const r=t*p,s=r+p;d.push(...Hr(e.slice(r,s),l,n,c,a,t===i-1))}}else for(let t=0;t<i;t++){const r=t*p,s=r+p;d.push(...Hr(e.slice(r,s),l,n,c,a,t===i-1))}const h=2===u?",":"";d[0]="["+(i>0?d[0]+h:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+h;let f=",\n";for(let e=2;e<u;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function jr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Kr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=z(e),null!=n){const e=n.length;G(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ee(t,this.size),this.strides=ie(e)}set(e,...t){0===t.length&&(t=[0]),G(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return qr().makeTensor(this.values,this.shape,this.dtype)}}let qr=null,Yr=null,Xr=null;class Jr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=z(e),this.strides=ie(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Yr.buffer(this.shape,this.dtype,e)}bufferSync(){return Yr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return le(this.shape,e,"complex64"===this.dtype)}arraySync(){return le(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=qr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Dr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),qr().readToGPU(this.dataId,e)}getTexture(){return this.throwIfDisposed(),qr().getTexture(this.dataId)}dataSync(){this.throwIfDisposed();const e=qr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Dr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await qr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(qr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Yr.print(this,e)}clone(){return this.throwIfDisposed(),Yr.clone(this)}toString(e=!1){return Vr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Yr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),qr().makeVariable(this,e,t,n)}}Object.defineProperty(Jr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ce("Tensor",(()=>Jr));class Zr extends Jr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!H(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);qr().disposeTensor(this),this.dataId=e.dataId,qr().incRef(this,null)}dispose(){qr().disposeVariable(this),this.isDisposedInternal=!0}}var ea,ta,na,ra,aa;Object.defineProperty(Zr,Symbol.hasInstance,{value:e=>e instanceof Jr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ea||(ea={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ta||(ta={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(na||(na={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ra||(ra={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(aa||(aa={}));const sa={float32:ra,int32:ta,bool:na,complex64:aa};function oa(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return sa[e][t]}function ia(e){return oa(e,"int32")}function ua(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function la(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function ca(e,t){if(e.dtype===t.dtype)return[e,t];const n=oa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function pa(e){const t=[];return da(e,t,new Set),t}function da(e,t,n){if(null==e)return;if(e instanceof Jr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),da(r,t,n))}}function ha(e){return null!=e.kernelName}class fa{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ma{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new fa}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(or(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Lr(this.backendInstance),!0}setupRegisteredKernels(){dr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){dr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof L||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,or(`Initialization of backend ${e} failed`),or(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return or(`Initialization of backend ${e} failed`),or(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ma.nextTensorId++}nextVariableId(){return ma.nextVariableId++}clone(e){const t=Aa.runKernel(Et,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Aa.runKernel(Ge,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==cr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=ha(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ha(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=cr(t,this.backendName);G(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,p=ha(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(u,l,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=o()})),r&&this.addTapeNode(u,l,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=pr(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(G(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&re(e[0])&&(a=e.map((e=>Br(e))));const s=r.write(a,t,n),o=new Jr(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new Jr(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Zr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ne(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Zr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ne(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},i=pr(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=pe(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=pa(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(G(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));G(a instanceof Jr,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=ce(z(e),"float32");return Aa.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!H(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),ya);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return G(se(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;G(t.every((e=>e instanceof Jr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),G(n.value instanceof Jr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),G(se(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];G(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),G(s.every((e=>e instanceof Jr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}getTexture(e){return this.state.tensorInfo.get(e).backend.getTexture(e)}async time(e){const t=_r(),n=await this.backend.time(e);return n.wallMs=_r()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new fa;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ga(){const e=ve();if(null==e._tfengine){const t=new Ae(e);e._tfengine=new ma(t)}var t;return t=e._tfengine.ENV,Ie=t,qr=()=>e._tfengine,e._tfengine}ma.nextTensorId=0,ma.nextVariableId=0;const Aa=ga();function ya(e,t){const n={a:e,b:t};return Aa.runKernel(Se,n)}function xa(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ba(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ia=xe();function va(e,t){let n=e;if(Fr(e))return"string"===t?[]:[e.length];if(ua(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(la(e))return[e.buffer.size/(null==t?4:ne(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Fr(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&xe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ca(e,r,[]),r}function Ca(e,t,n){if(n=n||[],!Array.isArray(e)&&!Fr(e))return void G(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));G(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),G(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Ca(e[t],r,n.concat(t))}function wa(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ea(e,t,n,r="numeric"){if(e instanceof Jr)return wa(r,e.dtype,t,n),e;let a=ae(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),wa(r,a,t,n),null==e||!Fr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=va(e,a);Fr(e)||Array.isArray(e)||(e=[e]);const o="string"!==a?$r(e,a):Or(e,[],!0);return Aa.makeTensor(o,s,a)}function Sa(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>Ea(e,`${t}[${a}]`,n,r)))}Ia.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ia.registerFlag("IS_BROWSER",(()=>ba())),Ia.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Ia.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ia.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Ia.registerFlag("PROD",(()=>!1)),Ia.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ia.getBool("DEBUG"))),Ia.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ia.registerFlag("IS_TEST",(()=>!1)),Ia.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Ia.getBool("DEBUG"))),Ia.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ia.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Ia.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const Ta="__op";function ka(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ta;const a=(...e)=>{Aa.startScope(n);try{const t=r(...e);return me(t)&&console.error("Cannot return a Promise inside of tidy."),Aa.endScope(t),t}catch(e){throw Aa.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const Na=ka({complex_:function(e,t){const n=Ea(e,"real","complex"),r=Ea(t,"imag","complex");V(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Aa.runKernel(ze,a)}});function Ra(e,t,n,r){if(null==r)r=ae(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(la(e)||ua(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return Aa.backend.createTensorFromGPUData(e,t||n,r)}if(!Fr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){de(t);const e=z(t),r=z(n);G(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==z(t.slice(e));G(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Fr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?$r(e,r):Or(e,[],!0),Aa.makeTensor(e,t,r)}function $a(e,t,n){return Ra(e,t,va(e,n),n)}const _a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ba{static join(e){return new Ba(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Fr(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let s=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],o=e+s-n.start,i=s,u=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,o,u-o);if(a.set(l,i),s+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}const Da=4;async function Fa(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Da*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=Da,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:La(await Promise.all(r)),specs:n}}function Oa(e,t){const n=new Ba(e),r={};let a,s=0;for(const e of t){const t=e.name,o=e.dtype,i=e.shape,u=z(i);let l;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${o}.`)}const i=_a[r.dtype],c=n.slice(s,s+u*i),p="uint8"===r.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===r.dtype||"uint16"===r.dtype){l=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===a&&(a=ja()),l=a(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);l=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=Math.round(t*r.scale+r.min)}}s+=u*i}else if("string"===o){const t=z(e.shape);l=[];for(let e=0;e<t;e++){const e=new Uint32Array(n.slice(s,s+Da))[0];s+=Da;const t=new Uint8Array(n.slice(s,s+e));l.push(t),s+=e}}else{const e=_a[o],a=n.slice(s,s+u*e);if("float32"===o)l=new Float32Array(a);else if("int32"===o)l=new Int32Array(a);else if("bool"===o)l=new Uint8Array(a);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),n=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],n[t]=l[2*t+1];const s=$a(e,i,"float32"),o=$a(n,i,"float32");r[t]=Na(s,o),s.dispose(),o.dispose()}}s+=u*e}"complex64"!==o&&(r[t]=$a(l,i,o))}return r}function La(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const Ma="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Pa(e){return Ma?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Qa(e){return Ba.join(e)}function Ua(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ga(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Va(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function Wa(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Va(e,n,r)}function za(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Pa(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Pa(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ba(e.weightData).byteLength}}function Ha(e){const t=[];for(const n of e)t.push(...n.weights);return t}function ja(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class Ka{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ka.instance&&(Ka.instance=new Ka),Ka.instance}static registerSaveRouter(e){Ka.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ka.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ka.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ka.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ka.getInstance().loadRouters:Ka.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const qa=e=>Ka.registerSaveRouter(e),Ya=e=>Ka.registerLoadRouter(e),Xa=e=>Ka.getSaveHandlers(e),Ja=(e,t)=>Ka.getLoadHandlers(e,t),Za="tensorflowjs",es="models_store",ts="model_info_store";function ns(){if(!xe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function rs(e){const t=e.result;t.createObjectStore(es,{keyPath:"modelPath"}),t.createObjectStore(ts,{keyPath:"modelPath"})}class as{constructor(e){if(this.indexedDB=ns(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Za,1);r.onupgradeneeded=()=>rs(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(es,"readonly"),r=t.objectStore(es).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=Ba.join(t.weightData);const r=za(t),s=a.transaction(ts,"readwrite");let o,i,u=s.objectStore(ts);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}o.onsuccess=()=>{i=a.transaction(es,"readwrite");const o=i.objectStore(es);let l;try{l=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}l.onsuccess=()=>e({modelArtifactsInfo:r}),l.onerror=e=>{u=s.objectStore(ts);const t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(l.error)),t.onerror=e=>(a.close(),n(l.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==i?a.close():i.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}as.URL_SCHEME="indexeddb://";const ss=e=>{return xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(as.URL_SCHEME)?(t=e.slice(as.URL_SCHEME.length),new as(t)):null;var t};Ka.registerSaveRouter(ss),Ka.registerLoadRouter(ss);class os{constructor(){this.indexedDB=ns()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Za,1);n.onupgradeneeded=()=>rs(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(ts,"readonly"),s=a.objectStore(ts).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(as.URL_SCHEME)?t.slice(as.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Za,1);r.onupgradeneeded=()=>rs(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(ts,"readwrite"),o=s.objectStore(ts),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(es,"readwrite");const r=u.objectStore(es).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const is="/",us="tensorflowjs_models",ls="info",cs="model_topology",ps="weight_specs",ds="weight_data",hs="model_metadata";function fs(e){return{info:[us,e,ls].join(is),topology:[us,e,cs].join(is),weightSpecs:[us,e,ps].join(is),weightData:[us,e,ds].join(is),modelMetadata:[us,e,hs].join(is)}}function ms(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function gs(e){const t=e.split(is);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(is)}class As{constructor(e){if(!xe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=fs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=za(e),a=Ba.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ma)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(a));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw ms(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ma){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}As.URL_SCHEME="localstorage://";const ys=e=>{return xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(As.URL_SCHEME)?(t=e.slice(As.URL_SCHEME.length),new As(t)):null;var t};Ka.registerSaveRouter(ys),Ka.registerLoadRouter(ys);class xs{constructor(){G(xe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),G("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=us+is,n=is+ls;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[gs(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=fs(e=(t=e).startsWith(As.URL_SCHEME)?t.slice(As.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ms(n),r}}const bs="://";class Is{constructor(){this.managers={}}static getInstance(){return null==Is.instance&&(Is.instance=new Is),Is.instance}static registerManager(e,t){G(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(bs)&&(e=e.slice(0,e.indexOf(bs))),G(e.length>0,(()=>"scheme must not be an empty string."));const n=Is.getInstance();G(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=Is.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Is.getInstance().managers)}}function vs(e){if(-1===e.indexOf(bs))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Is.getSchemes().join(",")}`);return{scheme:e.split(bs)[0],path:e.split(bs)[1]}}async function Cs(e,t,n=!1){G(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Ka.getLoadHandlers(e);G(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),G(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=Ka.getSaveHandlers(t);G(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),G(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=vs(e).scheme,u=vs(e).path,l=i===vs(e).scheme,c=await a.load();n&&l&&await Is.getManager(i).removeModel(u);const p=await o.save(c);return n&&!l&&await Is.getManager(i).removeModel(u),p.modelArtifactsInfo}async function ws(){const e=Is.getSchemes(),t={};for(const n of e){const e=await Is.getManager(n).listModels();for(const r in e)t[n+bs+r]=e[r]}return t}async function Es(e){const t=vs(e);return Is.getManager(t.scheme).removeModel(t.path)}async function Ss(e,t){return Cs(e,t,!1)}async function Ts(e,t){return Cs(e,t,!0)}class ks{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&xe().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return mr(e)}}if(xe().get("IS_BROWSER")){xe().setPlatform("browser",new ks);try{Is.registerManager(As.URL_SCHEME,new xs)}catch(e){}try{Is.registerManager(as.URL_SCHEME,new os)}catch(e){}}let Ns;function Rs(e,t="float32",n){return t=t||"float32",de(e),new Kr(e,t,n)}xe().get("IS_NODE")&&!xe().get("IS_BROWSER")&&xe().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=xe().global.fetch?xe().global.fetch(e,t):(null==Ns&&(Ns=n(410)),Ns(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const $s=ka({cast_:function(e,t){const n=Ea(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Aa.runKernel(Ge,r,a)}}),_s=ka({clone_:function(e){const t={x:Ea(e,"x","clone","string_or_numeric")};return Aa.runKernel(Et,t)}});function Bs(e,t=!1){console.log(e.toString(t))}function Ds(){return Aa}function Fs(e,t){return Aa.tidy(e,t)}function Os(e){pa(e).forEach((e=>e.dispose()))}function Ls(e){return Aa.keep(e)}function Ms(e){return Aa.setBackend(e)}function Ps(e,t,n=1){return Aa.registerBackend(e,t,n)}ga(),Yr={buffer:Rs,cast:$s,clone:_s,print:Bs},Xr=function(e){xe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Qs=ka({add_:function(e,t){let n=Ea(e,"a","add"),r=Ea(t,"b","add");[n,r]=ca(n,r);const a={a:n,b:r};return Aa.runKernel(Se,a)}}),Us=ka({floorDiv_:function(e,t){let n=Ea(e,"a","floorDiv"),r=Ea(t,"b","floorDiv");[n,r]=ca(n,r);const a={a:n,b:r};return Aa.runKernel(xt,a)}}),Gs=ka({div_:function(e,t){let n=Ea(e,"a","div"),r=Ea(t,"b","div");if([n,r]=ca(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Us(n,r);const a={a:n,b:r};return Aa.runKernel(ct,a,{})}}),Vs=ka({mul_:function(e,t){let n=Ea(e,"a","mul"),r=Ea(t,"b","mul");[n,r]=ca(n,r);const a={a:n,b:r};return Aa.runKernel(Kt,a)}}),Ws=ka({sqrt_:function(e){const t={x:Ea(e,"x","sqrt","float32")};return Aa.runKernel(Rn,t)}}),zs=ka({square_:function(e){const t=Ea(e,"x","square");return Aa.runKernel("Square",{x:t},{})}}),Hs=ka({zerosLike_:function(e){const t={x:Ea(e,"x","zerosLike")};return Aa.runKernel(er,t)}});function js(e){return Aa.customGrad(e)}function Ks(e,t){if((Fr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Fr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ra(e,[],[],t)}const qs=new Map,Ys=new Map;class Xs{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Js{constructor(){this.classNameMap={}}static getMap(){return null==Js.instance&&(Js.instance=new Js),Js.instance}static register(e){Js.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Zs(e,t,n){G(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),G("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),G(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Js.register(e),qs.set(r,e),Ys.set(e,r),e}class eo extends Xs{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Os(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){G(se(e),(()=>"The f passed in variableGrads(f) must be a function")),G(null==t||Array.isArray(t)&&t.every((e=>e instanceof Zr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Aa.registeredVariables)t.push(Aa.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;t=t.filter((e=>e.trainable)),G(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:o}=Aa.gradients(e,t,null,!0);G(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),G(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const i={};return t.forEach(((e,t)=>{null!=o[t]&&(i[e.name]=o[t])})),null!=r&&r.forEach((e=>i[e.name]=null)),{value:s,grads:i}}(e,t)}dispose(){null!=this.iterations_&&Os(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ks(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}function to(e,t,n){de(e);const r={shape:e,value:t,dtype:n=n||ae(t)};return Aa.runKernel(gt,{},r)}Object.defineProperty(eo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const no=ka({pow_:function(e,t){let n=Ea(e,"base","pow"),r=Ea(t,"exp","pow");[n,r]=ca(n,r);const a={a:n,b:r};return Aa.runKernel("Pow",a)}}),ro=ka({sub_:function(e,t){let n=Ea(e,"a","sub"),r=Ea(t,"b","sub");[n,r]=ca(n,r);const a={a:n,b:r};return Aa.runKernel(zn,a)}}),ao=ka({abs_:function(e){const t=Ea(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Aa.runKernel(He,e)}{const e={x:t};return Aa.runKernel("Abs",e)}}});function so(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function oo(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function io(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let o=t[t.length-a-1];if(null==o&&(o=1),1===s)r[n-a-1]=o;else if(1===o)r[n-a-1]=s;else{if(s!==o)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-a-1]=s}}return r}const uo=ka({maximum_:function(e,t){let n=Ea(e,"a","maximum"),r=Ea(t,"b","maximum");[n,r]=ca(n,r),"bool"===n.dtype&&(n=$s(n,"int32"),r=$s(r,"int32")),io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(Qt,a)}});class lo extends eo{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=Aa.registeredVariables[t];Fs((()=>{const e=Qs(Vs(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ls(Ks(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}const co=[class extends eo{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Aa.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Aa.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Fs((()=>Hs(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Fs((()=>Hs(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Fs((()=>{const e=Qs(Vs(s,this.rho),Vs(zs(a),1-this.rho)),t=Vs(Gs(Ws(Qs(o,this.epsilon)),Ws(Qs(s,this.epsilon))),a),n=Qs(Vs(o,this.rho),Vs(zs(t),1-this.rho));s.assign(e),o.assign(n);const i=Qs(Vs(t,-this.learningRate),r);r.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Os(this.accumulatedGrads.map((e=>e.variable))),Os(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},class extends eo{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Aa.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Fs((()=>to(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Fs((()=>{const e=Qs(s,zs(a));s.assign(e);const t=Qs(Vs(Gs(a,Ws(Qs(e,Aa.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Os(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},class extends eo{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Fs((()=>{this.accBeta1=Ks(t).variable(),this.accBeta2=Ks(n).variable()})),null==r&&(this.epsilon=Aa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Fs((()=>{const n=ro(1,this.accBeta1),r=ro(1,this.accBeta2);t.forEach(((t,a)=>{const s=Aa.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Fs((()=>Hs(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Fs((()=>Hs(s).variable(!1)))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=Qs(Vs(i,this.beta1),Vs(o,1-this.beta1)),c=Qs(Vs(u,this.beta2),Vs(zs(o),1-this.beta2)),p=Gs(l,n),d=Gs(c,r);i.assign(l),u.assign(c);const h=Qs(Vs(Gs(p,Qs(Ws(d),this.epsilon)),-this.learningRate),s);s.assign(h)})),this.accBeta1.assign(Vs(this.accBeta1,this.beta1)),this.accBeta2.assign(Vs(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Os(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Os(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Fs((()=>{this.accBeta1.assign(no(this.beta1,this.iterations_+1)),this.accBeta2.assign(no(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},class extends eo{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Fs((()=>{this.iteration=Ks(0).variable(),this.accBeta1=Ks(t).variable()})),null==r&&(this.epsilon=Aa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Fs((()=>{const n=ro(1,this.accBeta1),r=Gs(-this.learningRate,Qs(Vs(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=Aa.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Hs(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Hs(s).variable(!1)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=Qs(Vs(i,this.beta1),Vs(o,1-this.beta1)),c=Vs(u,this.beta2),p=ao(o),d=uo(c,p);i.assign(l),u.assign(d);const h=Qs(Vs(Gs(r,n),Gs(l,Qs(d,this.epsilon))),s);s.assign(h)})),this.iteration.assign(Qs(this.iteration,1)),this.accBeta1.assign(Vs(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Os(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Os(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},class extends lo{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ks(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Aa.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Fs((()=>Hs(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Fs((()=>{let e;const t=Qs(Vs(this.m,a),s);e=this.useNesterov?Qs(Vs(this.c,Qs(s,Vs(t,this.m))),r):Qs(Vs(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Os(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},class extends eo{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Aa.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Aa.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Fs((()=>Hs(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Fs((()=>Hs(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Fs((()=>Hs(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;Fs((()=>{const e=Qs(Vs(o,this.decay),Vs(zs(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Qs(Vs(t,this.decay),Vs(s,1-this.decay)),u=Gs(Vs(s,this.learningRate),Ws(ro(e,Qs(zs(a),this.epsilon)))),l=Qs(Vs(i,this.momentum),u);o.assign(e),t.assign(a),i.assign(l);const c=ro(r,l);r.assign(c)}else{const e=Qs(Vs(o,this.decay),Vs(zs(s),1-this.decay)),t=Qs(Vs(i,this.momentum),Gs(Vs(s,this.learningRate),Ws(Qs(e,this.epsilon))));o.assign(e),i.assign(t);const n=ro(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Os(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Os(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Os(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},lo];function po(e){return new Promise((e=>setTimeout(e))).then(e)}class ho{constructor(e){if(!xe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ho.URL_SCHEME)&&(e=e.slice(ho.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ba.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Ga(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await po((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await po((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:za(e)}}}}ho.URL_SCHEME="downloads://";class fo{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Wa(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Ua(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=Ua(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function mo(e){return new fo(e)}function go(e,t,n,r){!function(e){G(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){G(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),G(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),G(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}async function Ao(e,t){null==t&&(t={});const n=null==t.fetchFunc?xe().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await go(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await go(a,t.onProgress,.5,1)}async function yo(e,t="",n,r){return xo((e=>Ao(e,{requestInit:r})))(e,t,n)}function xo(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=_a[u]*z(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),p={};let d=0;return u.forEach((e=>{const n=t[e].paths.length,r=new Ba(c.slice(d,d+n));s[e].forEach((e=>{const t=Oa(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)p[e]=t[e]})),d+=n})),p}}Ka.registerSaveRouter((e=>xe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ho.URL_SCHEME)?function(e="model"){return new ho(e)}(e.slice(ho.URL_SCHEME.length)):null));class bo{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(G("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=xe().platform.fetch,G(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&G(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Ga(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ba.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:za(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Wa(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=Ha(e),o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[s,await Ao(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}}function Io(e){return null!=e.match(bo.URL_SCHEME_REGEX)}bo.URL_SCHEME_REGEX=/^https?:\/\//;const vo=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Io(e))):Io(e),n)return Co(e,t)}return null};function Co(e,t){return new bo(e,t)}function wo(e,t){return Co(e,t)}Ka.registerSaveRouter(vo),Ka.registerLoadRouter(vo);class Eo{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class So{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class To{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ko(e,t,n,r){return new To(No(...arguments))}function No(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Eo(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Eo({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Eo({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Ro(e){return new So(e)}function $o(e){return new So(e)}const _o=-2,Bo=-1;function Do(e,t,n){const r=e.shape.length;G(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),G(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)G(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Fo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Oo(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Lo(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Mo(e,t,n){return n<=e?n:n-(t-1)}function Po(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Qo(e,t,n,r,a,s,o,i,u){const l=e.length;let c=new Array(l),p=new Array(l),d=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=Uo(o,u,l,r,e),p=Go(i,u,l,a,e),d=Lo(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=Wo(o,r,s,e,t,u),p[t]=zo(i,a,s,e,t,u),d[t]=Vo(s,t,u);return{begin:c,end:p,strides:d}}function Uo(e,t,n,r,a){const s=[...a],o=Po(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=Mo(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}function Go(e,t,n,r,a){const s=[...a],o=Po(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=Mo(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=P(0,s[e],a[e])}return s}function Vo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Wo(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=P(0,o,u-1),o}function zo(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?P(0,o,u):P(-1,o,u-1),o}function Ho(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function jo(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ko(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{G(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(G(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function qo(e,t,n,r,a,s,o,i,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const p={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let e=0;e<p.dims;e++)c&&0!=(1<<e&i)&&p.numAddAxisAfterEllipsis++,1<<e&o&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(_o),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Bo),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,d);let h=!0,f=!0,m=!0;const g=[],A=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];const o=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=Yo(d.begin[t],0,d.strides[t],r,a,s),d.end[t]=Yo(d.end[t],1,d.strides[t],r,a,s);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;h=h&&e,f=f&&(0===t&&1===d.strides[t]||e)}else h=h&&1===d.strides[t]&&o,f=f&&(0===t&&1===d.strides[t]||o);let i,u=!1;if(d.beginValid&&d.endValid?(i=d.end[t]-d.begin[t],u=!0):n?(i=1,u=!0):o&&r>=0&&(i=d.strides[t]<0?-r:r,u=!0),u){let e;e=0===i||i<0!=d.strides[t]<0?0:Math.trunc(i/d.strides[t])+(i%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?A.push(g[t]):t===_o&&A.push(1)}return{finalShapeSparse:A.filter(((e,t)=>d.finalShapeGatherIndices[t]!==_o)),finalShape:A,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Yo(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}const Xo=ka({acos_:function(e){const t={x:Ea(e,"x","acos")};return Aa.runKernel(we,t)}}),Jo=ka({acosh_:function(e){const t={x:Ea(e,"x","acosh")};return Aa.runKernel(Ee,t)}}),Zo=ka({addN_:function(e){G(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),G(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Ea(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!H(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Aa.runKernel(Te,r)}}),ei=ka({all_:function(e,t=null,n=!1){const r={x:Ea(e,"x","all","bool")},a={axis:t,keepDims:n};return Aa.runKernel("All",r,a)}}),ti=ka({any_:function(e,t=null,n=!1){const r={x:Ea(e,"x","any","bool")},a={axis:t,keepDims:n};return Aa.runKernel("Any",r,a)}}),ni=ka({argMax_:function(e,t=0){const n={x:Ea(e,"x","argMax")},r={axis:t};return Aa.runKernel(ke,n,r)}}),ri=ka({argMin_:function(e,t=0){const n={x:Ea(e,"x","argMin")},r={axis:t};return Aa.runKernel(Ne,n,r)}}),ai=ka({asin_:function(e){const t={x:Ea(e,"x","asin")};return Aa.runKernel(Re,t)}}),si=ka({asinh_:function(e){const t={x:Ea(e,"x","asinh")};return Aa.runKernel($e,t)}}),oi=ka({atan_:function(e){const t={x:Ea(e,"x","atan")};return Aa.runKernel(_e,t)}}),ii=ka({atan2_:function(e,t){let n=Ea(e,"a","atan2"),r=Ea(t,"b","atan2");[n,r]=ca(n,r);const a={a:n,b:r};return Aa.runKernel(De,a)}}),ui=ka({atanh_:function(e){const t={x:Ea(e,"x","atanh")};return Aa.runKernel(Be,t)}});function li(e,t,n,r,a="NHWC",s){return di(e,[...t,e[3]],n,s,r,null,null,vi(a))}function ci(e,t,n,r,a,s,o="channelsLast"){const[i,u]=mi(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);l=[i,u,e[1],e[1]]}return di(e,l,n,r,a,s,!1,o)}function pi(e,t,n,r,a,s,o="NDHWC"){const[i,u,l]=gi(t);let c,p;if("NDHWC"===o)p="channelsLast",c=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);p="channelsFirst",c=[i,u,l,e[1],e[1]]}return hi(e,c,n,r,a,!1,p,s)}function di(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,l,c,p]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,l,c]=e}const[d,h,,f]=t,[m,g]=mi(n),[A,y]=mi(r),x=Ai(d,A),b=Ai(h,y),{padInfo:I,outHeight:v,outWidth:C}=function(e,t,n,r,a,s,o,i,u){let l,c,p;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=fi(e,t,n));const s=e[1];return[yi((e[0]-t+2*r)/n+1,a),yi((s-t+2*r)/n+1,a)]}([t,n],s,r,e,i);c=a[0],p=a[1]}else if("same"===e){c=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),i=Math.max(0,(p-1)*a+o-n),u=Math.floor(e/2),d=e-u,h=Math.floor(i/2);l={top:u,bottom:d,left:h,right:i-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),p=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:d,bottom:h,left:f,right:m,type:0===d&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},c=yi((t-s+d+h)/r+1,i),p=yi((n-o+f+m)/a+1,i)}}return{padInfo:l,outHeight:c,outWidth:p}}(a,l,c,m,g,x,b,s,i),w=o?f*p:f;let E;return"channelsFirst"===i?E=[u,w,v,C]:"channelsLast"===i&&(E=[u,v,C,w]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:p,outHeight:v,outWidth:C,outChannels:w,padInfo:I,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:b,dilationHeight:A,dilationWidth:y,inShape:e,outShape:E,filterShape:t}}function hi(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,l,c,p,d]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,p,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,l,c,p]=e}const[h,f,m,,g]=t,[A,y,x]=gi(n),[b,I,v]=gi(r),C=Ai(h,b),w=Ai(f,I),E=Ai(m,v),{padInfo:S,outDepth:T,outHeight:k,outWidth:N}=function(e,t,n,r,a,s,o,i,u,l,c){let p,d,h,f;if("valid"===e&&(e=0),"number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,a,s){null==a&&(a=fi(e,t[0],r[0]));const o=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*a>=t[n]&&(o[n]=yi((e[n]-t[n]+2*a)/r[n]+1,s));return o}([t,n,r,1],[i,u,l],0,[a,s,o],e,c);d=m[0],h=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/a),h=Math.ceil(n/s),f=Math.ceil(r/o);const e=(d-1)*a+i-t,c=(h-1)*s+u-n,m=(f-1)*o+l-r,g=Math.floor(e/2),A=e-g,y=Math.floor(c/2),x=c-y,b=Math.floor(m/2);p={top:y,bottom:x,left:b,right:m-b,front:g,back:A,type:"SAME"}}}return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}(a,l,c,p,A,y,x,C,w,E,i),R=s?g*d:g;let $;return"channelsFirst"===o?$=[u,R,T,k,N]:"channelsLast"===o&&($=[u,T,k,N,R]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:p,inChannels:d,outDepth:T,outHeight:k,outWidth:N,outChannels:R,padInfo:S,strideDepth:A,strideHeight:y,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:w,effectiveFilterWidth:E,dilationDepth:b,dilationHeight:I,dilationWidth:v,inShape:e,outShape:$,filterShape:t}}function fi(e,t,n,r=1){const a=Ai(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function mi(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function gi(e){return"number"==typeof e?[e,e,e]:e}function Ai(e,t){return t<=1?e:e+(e-1)*(t-1)}function yi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function xi(e){const[t,n,r]=mi(e);return 1===t&&1===n&&1===r}function bi(e,t){return xi(e)||xi(t)}function Ii(e){return mi(e).every((e=>e>0))}function vi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ci(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)G(j(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{G(j(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const wi=ka({reshape_:function(e,t){const n={x:Ea(e,"x","reshape","string_or_numeric")},r={shape:t};return Aa.runKernel(hn,n,r)}}),Ei=ka({avgPool_:function(e,t,n,r,a){const s=Ea(e,"x","avgPool","float32");G(bi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=s,i=!1;3===s.rank&&(i=!0,o=wi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),G(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),Ci("avgPool",r,a);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=Aa.runKernel(Fe,u,l);return c=$s(c,s.dtype),i?wi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Si=ka({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const o=Ea(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=wi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),G(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),G("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),G("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Ci("avgPool3d",r,a);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let p=Aa.runKernel(Oe,l,c);return p=$s(p,i.dtype),u?wi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Ti=ka({concat_:function(e,t=0){G(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Sa(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return _s(n[0]);const r=n,a={axis:t};return Aa.runKernel(je,r,a)}}),ki=ka({matMul_:function(e,t,n=!1,r=!1){let a=Ea(e,"a","matMul"),s=Ea(t,"b","matMul");[a,s]=ca(a,s);const o={a,b:s},i={transposeA:n,transposeB:r};return Aa.runKernel(Le,o,i)}}),Ni=ka({sigmoid_:function(e){const t={x:Ea(e,"x","sigmoid","float32")};return Aa.runKernel(kn,t)}}),Ri=ka({slice_:function(e,t,n){const r=Ea(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Aa.runKernel(En,a,s)}}),$i=ka({tanh_:function(e){const t={x:Ea(e,"x","tanh","float32")};return Aa.runKernel(Hn,t)}}),_i=ka({basicLSTMCell_:function(e,t,n,r,a,s){const o=Ea(e,"forgetBias","basicLSTMCell"),i=Ea(t,"lstmKernel","basicLSTMCell"),u=Ea(n,"lstmBias","basicLSTMCell"),l=Ea(r,"data","basicLSTMCell"),c=Ea(a,"c","basicLSTMCell"),p=Ea(s,"h","basicLSTMCell"),d=Ti([l,p],1),h=ki(d,i),f=Qs(h,u),m=f.shape[0],g=f.shape[1]/4,A=[m,g],y=Ri(f,[0,0],A),x=Ri(f,[0,g],A),b=Ri(f,[0,2*g],A),I=Ri(f,[0,3*g],A),v=Qs(Vs(Ni(y),$i(x)),Vs(c,Ni(Qs(o,b))));return[v,Vs($i(v),Ni(I))]}}),Bi=ka({batchToSpaceND_:function(e,t,n){const r=Ea(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));G(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),G(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),G(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},o={blockShape:t,crops:n};return Aa.runKernel(Me,s,o)}}),Di=ka({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const o=Ea(e,"x","batchNorm"),i=Ea(t,"mean","batchNorm"),u=Ea(n,"variance","batchNorm");let l,c;null!=a&&(l=Ea(a,"scale","batchNorm")),null!=r&&(c=Ea(r,"offset","batchNorm")),G(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),G(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),G(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p={x:function(e){let t;return t=0===e.rank||1===e.rank?wi(e,[1,1,1,e.size]):2===e.rank?wi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?wi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:c,mean:i,variance:u},d={varianceEpsilon:s},h=Aa.runKernel(bt,p,d);return wi(h,o.shape)}}),Fi=ka({batchNorm2d_:function(e,t,n,r,a,s){const o=Ea(e,"x","batchNorm"),i=Ea(t,"mean","batchNorm"),u=Ea(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ea(a,"scale","batchNorm")),null!=r&&(c=Ea(r,"offset","batchNorm")),G(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),G(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),G(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&G(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&G(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Di(o,i,u,c,l,s)}}),Oi=ka({batchNorm3d_:function(e,t,n,r,a,s){const o=Ea(e,"x","batchNorm"),i=Ea(t,"mean","batchNorm"),u=Ea(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ea(a,"scale","batchNorm")),null!=r&&(c=Ea(r,"offset","batchNorm")),G(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),G(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),G(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&G(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&G(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Di(o,i,u,c,l,s)}}),Li=ka({batchNorm4d_:function(e,t,n,r,a,s){const o=Ea(e,"x","batchNorm"),i=Ea(t,"mean","batchNorm"),u=Ea(n,"variance","batchNorm");let l,c;return null!=a&&(l=Ea(a,"scale","batchNorm")),null!=r&&(c=Ea(r,"offset","batchNorm")),G(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),G(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),G(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&G(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&G(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Di(o,i,u,c,l,s)}}),Mi=ka({bincount_:function(e,t,n){const r=Ea(e,"x","bincount"),a=Ea(t,"weights","bincount");G("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),G(n>=0,(()=>`size must be non-negative, but got ${n}.`)),G(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},o={size:n};return Aa.runKernel(Pe,s,o)}}),Pi=ka({bitwiseAnd_:function(e,t){const n=Ea(e,"x","bitwiseAnd"),r=Ea(t,"y","bitwiseAnd");if(!H(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const a={a:n,b:r};return Aa.runKernel(Qe,a)}}),Qi=ka({broadcastArgs_:function(e,t){const n=Ea(e,"s0","broadcastArgs","int32"),r=Ea(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return Aa.runKernel(Ue,a)}}),Ui=ka({broadcastTo_:function(e,t){let n=Ea(e,"broadcastTo","x");const r=n.shape;if(de(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=wi(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const o=s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===o.length)return _s(n);const i={x:n},u={reps:s};return Aa.runKernel(jn,i,u)}}),Gi=ka({ceil_:function(e){const t={x:Ea(e,"x","ceil","float32")};return Aa.runKernel(Ve,t)}}),Vi=ka({clipByValue_:function(e,t,n){const r=Ea(e,"x","clipByValue");if(G(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return to(r.shape,t,r.dtype);const a={x:r},s={clipValueMin:t,clipValueMax:n};return Aa.runKernel(We,a,s)}}),Wi=ka({concat1d_:function(e){return Ti(e,0)}}),zi=ka({concat2d_:function(e,t){return Ti(e,t)}}),Hi=ka({concat3d_:function(e,t){return Ti(e,t)}}),ji=ka({concat4d_:function(e,t){return Ti(e,t)}}),Ki=ka({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=Ea(e,"x","conv2d","float32"),u=Ea(t,"filter","conv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=wi(i,[1,i.shape[0],i.shape[1],i.shape[2]])),G(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),G(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Ci("conv2d",r,o);const p="NHWC"===a?l.shape[3]:l.shape[1];G(p===u.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`)),G(bi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),G(Ii(s),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),G(Ii(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},f=Aa.runKernel(Ke,d,h);return c?wi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),qi=ka({conv1d_:function(e,t,n,r,a="NWC",s=1,o){const i=Ea(e,"x","conv1d"),u=Ea(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=wi(i,[1,i.shape[0],i.shape[1]])),G(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),G(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Ci("conv1d",r,o),G(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),G(bi(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),G(Ii(s),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),G(Ii(n),(()=>"Error in conv1D: Stride should be larger than 0.")),G("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const p=wi(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=wi(l,[l.shape[0],1,l.shape[1],l.shape[2]]),h=Ki(d,p,[1,n],r,"NHWC",[1,s],o);return wi(h,c?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}}),Yi=ka({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",o){G(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=wi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),G(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),G(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),G(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?i[3]:i[1],p="NHWC"===s?u.shape[3]:u.shape[1];G(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),G(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),Ci("conv2dDerInput",a,o);const d={dy:u,filter:n},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,inputShape:i},f=Aa.runKernel(Ye,d,h);return l?wi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Xi=ka({conv2dTranspose_:function(e,t,n,r,a,s){const o=Ea(e,"x","conv2dTranspose"),i=Ea(t,"filter","conv2dTranspose");return Yi(n,o,i,r,a,"NHWC",s)}}),Ji=ka({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const o=Ea(e,"x","conv3d"),i=Ea(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=wi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),G(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),G(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),G(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),G(bi(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),G("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),G(Ii(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),G(Ii(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:u,filter:i},p={strides:n,pad:r,dataFormat:a,dilations:s},d=Aa.runKernel(Xe,c,p);return l?wi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Zi=ka({conv3DBackpropInput_:function(e,t,n,r,a){G(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=wi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=o.shape[4];G(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),G(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),G(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),G(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),G(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:o,filter:n},p={pad:a,strides:r,inputShape:s},d=Aa.runKernel(Je,c,p);return i?wi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),eu=ka({conv3dTranspose_:function(e,t,n,r,a){const s=Ea(e,"x","conv3dTranspose"),o=Ea(t,"filter","conv3dTranspose");return Zi(n,s,o,r,a)}}),tu=ka({cos_:function(e){const t={x:Ea(e,"x","cos","float32")};return Aa.runKernel("Cos",t)}}),nu=ka({cosh_:function(e){const t={x:Ea(e,"x","cosh","float32")};return Aa.runKernel(Ze,t)}}),ru=ka({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:Ea(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return Aa.runKernel(et,a,s)}}),au=ka({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Ea(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Aa.runKernel(tt,a,s)}}),su=ka({denseBincount_:function(e,t,n,r=!1){const a=Ea(e,"x","denseBincount"),s=Ea(t,"weights","denseBincount");G("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),G(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),G(n>=0,(()=>`size must be non-negative, but got ${n}.`)),G(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const o={x:a,weights:s},i={size:n,binaryOutput:r};return Aa.runKernel(rt,o,i)}}),ou=ka({depthToSpace_:function(e,t,n="NHWC"){const r=Ea(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];G(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),G(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),G(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),G(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return Aa.runKernel(at,i,u)}}),iu=ka({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=Ea(e,"x","depthwiseConv2d","float32"),u=Ea(t,"filter","depthwiseConv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=wi(i,[1,i.shape[0],i.shape[1],i.shape[2]])),G(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),G(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`));const p="NHWC"===a?l.shape[3]:l.shape[1];G(p===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Ci("depthwiseConv2d",r,o);const d={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},f=Aa.runKernel(st,d,h);return c?wi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),uu=ka({diag_:function(e){const t={x:Ea(e,"x","diag")};return Aa.runKernel(ut,t)}}),lu=ka({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const o=Ea(e,"x","dilation2d"),i=Ea(t,"filter","dilation2d");G(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),G(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),G("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=o,l=!1;3===o.rank&&(u=wi(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0),G(u.shape[3]===i.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`));const c={x:u,filter:i},p={strides:n,pad:r,dilations:a},d=Aa.runKernel(lt,c,p);return l?wi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),cu=ka({equal_:function(e,t){let n=Ea(e,"a","equal","string_or_numeric"),r=Ea(t,"b","equal","string_or_numeric");[n,r]=ca(n,r),io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(dt,a)}}),pu=ka({where_:function(e,t,n){const r=Ea(t,"a","where"),a=Ea(n,"b","where"),s=Ea(e,"condition","where","bool"),o=io(io(s.shape,r.shape),a.shape),i={condition:Ui(s,o),t:Ui(r,o),e:Ui(a,o)};return Aa.runKernel(Cn,i)}}),du=ka({divNoNan_:function(e,t){let n=Ea(e,"a","div"),r=Ea(t,"b","div");[n,r]=ca(n,r);const a=Gs(n,r),s=Hs(a),o=cu(r,s);return pu(o,s,a)}}),hu=ka({dot_:function(e,t){const n=Ea(e,"t1","dot"),r=Ea(t,"t2","dot");G(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(G(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=wi(n,[1,-1]),t=wi(r,[-1,1]),a=ki(e,t);return wi(a,[])}if(1===n.rank&&2===r.rank){const e=wi(n,[1,-1]),t=wi(r,[r.shape[0],r.shape[1]]),a=ki(e,t);return wi(a,[a.size])}if(2===n.rank&&1===r.rank){const e=wi(r,[-1,1]),t=ki(n,e);return wi(t,[t.size])}{const e=wi(r,[r.shape[0],r.shape[1]]);return ki(n,e)}}}),fu=ka({einsum_:function(e,...t){const n=t.map(((e,t)=>Ea(e,`tensors${t}`,"einsum"))),r={equation:e};return Aa.runKernel(pt,n,r)}}),mu=ka({elu_:function(e){const t={x:Ea(e,"x","elu","float32")};return Aa.runKernel("Elu",t)}}),gu=ka({ensureShape_:function(e,t){const n=Ea(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),Au=ka({erf_:function(e){let t=Ea(e,"x","erf");G("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=$s(t,"float32"));const n={x:t};return Aa.runKernel("Erf",n)}});function yu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function xu(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function bu(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Iu(e,t){return xu(e,t.map((e=>1)),t)}function vu(e,t,n){G(yu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Cu(e,t){if(yu(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function wu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Eu(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Su=ka({max_:function(e,t=null,n=!1){const r={x:Ea(e,"x","max")},a={reductionIndices:t,keepDims:n};return Aa.runKernel("Max",r,a)}}),Tu=ka({min_:function(e,t=null,n=!1){const r={x:Ea(e,"x","min")},a={axis:t,keepDims:n};return Aa.runKernel("Min",r,a)}}),ku=ka({sum_:function(e,t=null,n=!1){let r=Ea(e,"x","sum");"bool"===r.dtype&&(r=$s(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Aa.runKernel("Sum",a,s)}});function Nu(e,t,n=null){if(0===e.rank)return ao(e);if(1!==e.rank&&null===n)return Nu(wi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ku(ao(e),n);if(t===1/0)return Su(ao(e),n);if(t===-1/0)return Tu(ao(e),n);if("euclidean"===t||2===t)return Ws(ku(no(ao(e),Ks(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Su(ku(ao(e),n[0]),n[1]-1);if(t===1/0)return Su(ku(ao(e),n[1]),n[0]);if(t===-1/0)return Tu(ku(ao(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ws(ku(zs(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Ru=ka({norm_:function(e,t="euclidean",n=null,r=!1){const a=Nu(e=Ea(e,"x","norm"),t,n);let s=a.shape;if(r){const t=X(n,e.shape);s=Iu(a.shape,t)}return wi(a,s)}}),$u=ka({euclideanNorm_:function(e,t=null,n=!1){return Ru(e,"euclidean",t,n)}}),_u=ka({exp_:function(e){const t={x:Ea(e,"x","exp")};return Aa.runKernel(ht,t)}}),Bu=ka({expandDims_:function(e,t=0){const n=Ea(e,"x","expandDims","string_or_numeric");G(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return Aa.runKernel(ft,r,a)}}),Du=ka({expm1_:function(e){const t={x:Ea(e,"x","expm1")};return Aa.runKernel(mt,t)}}),Fu=ka({tile_:function(e,t){const n=Ea(e,"x","tile","string_or_numeric");G(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return Aa.runKernel(jn,r,a)}}),Ou=ka({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Rs([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const o=wi(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return Fu(Bu(o,0),[n[0],1,1]);if(2===n.length)return Fu(Bu(Bu(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Fu(Bu(Bu(Bu(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Lu=ka({floor_:function(e){const t={x:Ea(e,"x","floor","float32")};return Aa.runKernel(yt,t)}}),Mu=ka({gather_:function(e,t,n=0,r=0){const a={x:Ea(e,"x","gather"),indices:Ea(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Aa.runKernel(It,a,s)}}),Pu=ka({greater_:function(e,t){let n=Ea(e,"a","greater","string_or_numeric"),r=Ea(t,"b","greater","string_or_numeric");[n,r]=ca(n,r),io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(Ct,a)}}),Qu=ka({greaterEqual_:function(e,t){let n=Ea(e,"a","greaterEqual","string_or_numeric"),r=Ea(t,"b","greaterEqual","string_or_numeric");[n,r]=ca(n,r),io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(wt,a)}}),Uu=ka({imag_:function(e){const t={input:Ea(e,"input","imag")};return Aa.runKernel(Tt,t)}}),Gu=ka({isFinite_:function(e){const t={x:Ea(e,"x","isFinite")};return Aa.runKernel(kt,t)}}),Vu=ka({isInf_:function(e){const t={x:Ea(e,"x","isInf")};return Aa.runKernel(Nt,t)}}),Wu=ka({isNaN_:function(e){const t={x:Ea(e,"x","isNaN")};return Aa.runKernel(Rt,t)}}),zu=ka({leakyRelu_:function(e,t=.2){const n={x:Ea(e,"x","leakyRelu")},r={alpha:t};return Aa.runKernel($t,n,r)}}),Hu=ka({less_:function(e,t){let n=Ea(e,"a","less","string_or_numeric"),r=Ea(t,"b","less","string_or_numeric");[n,r]=ca(n,r),io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(_t,a)}}),ju=ka({lessEqual_:function(e,t){let n=Ea(e,"a","lessEqual","string_or_numeric"),r=Ea(t,"b","lessEqual","string_or_numeric");[n,r]=ca(n,r),io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(Bt,a)}});function Ku(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Aa.runKernel(Dt,{},r)}const qu=ka({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=Ea(e,"x","localResponseNormalization");G(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),G(j(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=s,i=!1;3===s.rank&&(i=!0,o=wi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:a},c=Aa.runKernel("LRN",u,l);return i?wi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Yu=ka({log_:function(e){const t={x:Ea(e,"x","log","float32")};return Aa.runKernel(Ft,t)}}),Xu=ka({log1p_:function(e){const t={x:Ea(e,"x","log1p")};return Aa.runKernel(Ot,t)}}),Ju=ka({neg_:function(e){const t={x:Ea(e,"x","neg")};return Aa.runKernel("Neg",t)}}),Zu=ka({softplus_:function(e){const t={x:Ea(e,"x","softplus")};return Aa.runKernel(Nn,t)}}),el=ka({logSigmoid_:function(e){const t=Ea(e,"x","logSigmoid");return js((e=>({value:Ju(Zu(Ju(e))),gradFunc:t=>Vs(t,Ni(Ju(e)))})))(t)}}),tl=ka({logSoftmax_:function(e,t=-1){const n=Ea(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=js(((e,n)=>{const r=Su(e,t,!0),a=ro(e,r),s=ro($s(a,"float32"),Yu(ku(_u(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=_u(r);return ro(e,Vs(ku(e,t,!0),a))}}}));return r(n)}}),nl=ka({logSumExp_:function(e,t=null,n=!1){const r=Ea(e,"x","logSumExp"),a=X(t,r.shape),s=Su(r,a,!0),o=ro(r,s),i=_u(o),u=ku(i,a),l=Yu(u),c=Qs(wi(s,l.shape),l);if(n){const e=Iu(c.shape,a);return wi(c,e)}return c}}),rl=ka({logicalAnd_:function(e,t){const n=Ea(e,"a","logicalAnd","bool"),r=Ea(t,"b","logicalAnd","bool");io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(Lt,a)}}),al=ka({logicalNot_:function(e){const t={x:Ea(e,"x","logicalNot","bool")};return Aa.runKernel(Mt,t)}}),sl=ka({logicalOr_:function(e,t){const n=Ea(e,"a","logicalOr","bool"),r=Ea(t,"b","logicalOr","bool");io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(Pt,a)}}),ol=ka({logicalXor_:function(e,t){const n=Ea(e,"a","logicalXor","bool"),r=Ea(t,"b","logicalXor","bool");return io(n.shape,r.shape),rl(sl(e,t),al(rl(e,t)))}}),il=2147483648,ul=ka({searchSorted_:function(e,t,n="left"){const r=Ea(e,"sortedSequence","searchSorted"),a=Ea(t,"values","searchSorted"),s=r.shape[r.shape.length-1],o=a.shape[a.shape.length-1],i=wi(r,[-1,s]),u=wi(a,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(z(u.shape)>=il)throw new Error("values tensor size must less than 2147483648");if(i.shape[1]>=il)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${i.shape[1]}`);const l={sortedSequence:i,values:u},c={side:n};return Aa.runKernel(vn,l,c)}});function ll(e,t){return ul(e,t,"left")}const cl=ka({maxPool_:function(e,t,n,r,a){const s=Ea(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=wi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),G(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),G(bi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Ci("maxPool",r,a);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=Aa.runKernel(Ut,u,l);return i?wi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),pl=ka({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const o=Ea(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=wi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),G(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),G("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Ci("maxPool3d",r,a);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=Aa.runKernel(Gt,l,c);return u?wi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),dl=ka({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:Ea(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=Aa.runKernel(Vt,s,o);return{result:i[0],indexes:i[1]}}}),hl=ka({mean_:function(e,t=null,n=!1){const r={x:Ea(e,"x","mean")},a={axis:t,keepDims:n};return Aa.runKernel(Wt,r,a)}});function fl(e,t="float32"){if(de(e),"complex64"===t){const t=fl(e,"float32"),n=fl(e,"float32");return Na(t,n)}const n=pe(z(e),t);return Aa.makeTensor(n,e,t)}function ml(e,t="float32"){if(de(e),"complex64"===t){const t=ml(e,"float32"),n=fl(e,"float32");return Na(t,n)}const n=ce(z(e),t);return Aa.makeTensor(n,e,t)}function gl(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Ea(e,"x","meshgrid",e instanceof Jr?e.dtype:"float32");if(void 0===t)return[r];let a=Ea(t,"y","meshgrid",t instanceof Jr?t.dtype:"float32");const s=z(r.shape),o=z(a.shape);return"xy"===n?(r=wi(r,[1,-1]),a=wi(a,[-1,1]),[ki(ml([o,1],r.dtype),r),ki(a,ml([1,s],a.dtype))]):(r=wi(r,[-1,1]),a=wi(a,[1,-1]),[ki(r,ml([1,o],r.dtype)),ki(ml([s,1],a.dtype),a)])}const Al=ka({minimum_:function(e,t){let n=Ea(e,"a","minimum"),r=Ea(t,"b","minimum");[n,r]=ca(n,r),"bool"===n.dtype&&(n=$s(n,"int32"),r=$s(r,"int32")),io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(zt,a)}}),yl=ka({mirrorPad_:function(e,t,n){G("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ea(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");G(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)G(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),G(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},o={x:r};return Aa.runKernel(Ht,o,s)}}),xl=ka({mod_:function(e,t){let n=Ea(e,"a","mod"),r=Ea(t,"b","mod");[n,r]=ca(n,r);const a={a:n,b:r};return Aa.runKernel("Mod",a)}}),bl=ka({moments_:function(e,t=null,n=!1){const r=X(t,(e=Ea(e,"x","moments")).shape),a=hl(e,r,n);let s=a.shape;n||(s=Iu(a.shape,r));const o=zs(ro($s(e,"float32"),wi(a,s)));return{mean:a,variance:hl(o,r,n)}}}),Il=ka({multiRNNCell_:function(e,t,n,r){const a=Ea(t,"data","multiRNNCell"),s=Sa(n,"c","multiRNNCell"),o=Sa(r,"h","multiRNNCell");let i=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,s[t],o[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),vl=ka({multinomial_:function(e,t,n,r=!1){const a=Ea(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?wi(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=Aa.runKernel(jt,i,u);return 1===o?wi(l,[l.size]):l}}),Cl=ka({notEqual_:function(e,t){let n=Ea(e,"a","notEqual","string_or_numeric"),r=Ea(t,"b","notEqual","string_or_numeric");[n,r]=ca(n,r),io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(qt,a)}}),wl=ka({oneHot_:function(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Ea(e,"indices","oneHot","int32")},o={dtype:a,depth:t,onValue:n,offValue:r};return Aa.runKernel(en,s,o)}}),El=ka({onesLike_:function(e){const t={x:Ea(e,"x","onesLike")};return Aa.runKernel(Zt,t)}}),Sl=ka({outerProduct_:function(e,t){const n=Ea(e,"v1","outerProduct"),r=Ea(t,"v2","outerProduct");G(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=wi(n,[-1,1]),s=wi(r,[1,-1]);return ki(a,s)}}),Tl=ka({pad_:function(e,t,n=0){const r=Ea(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return Aa.runKernel(nn,s,a)}}),kl=ka({pad1d_:function(e,t,n=0){return G(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Tl(e,[t],n)}}),Nl=ka({pad2d_:function(e,t,n=0){return G(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Tl(e,t,n)}}),Rl=ka({pad3d_:function(e,t,n=0){return G(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Tl(e,t,n)}}),$l=ka({pad4d_:function(e,t,n=0){return G(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Tl(e,t,n)}}),_l=ka({spaceToBatchND_:function(e,t,n){const r=Ea(e,"x","spaceToBatchND");G(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),G(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),G(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return Aa.runKernel($n,a,s)}}),Bl=ka({pool_:function(e,t,n,r,a,s,o){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=Ea(e,"x","maxPool");let u=i,l=!1;3===i.rank&&(l=!0,u=wi(i,[1,i.shape[0],i.shape[1],i.shape[2]])),G(bi(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const c=ci(u.shape,t,s,a,r),p=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),a=r.map((e=>Math.floor(e/2))),s=r.map(((e,t)=>e-a[t]));return r.map(((e,t)=>[a[t],s[t]]))}([c.filterHeight,c.filterWidth],p):[[0,0],[0,0]];const h=1===p[0]&&1===p[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t]));return[t.map(((e,t)=>[r[t],i[t]])),t.map(((e,t)=>[0,o[t]]))]}([c.inHeight,c.inWidth],p,d),g=h?r:"valid",A=h?u:_l(u,p,f),y=("avg"===n?()=>Ei(A,t,s,g,o):()=>cl(A,t,s,g,o))(),x=h?y:Bi(y,p,m);return l?wi(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),Dl=ka({prelu_:function(e,t){const n={x:Ea(e,"x","prelu"),alpha:Ea(t,"alpha","prelu")};return Aa.runKernel(rn,n)}}),Fl=ka({prod_:function(e,t=null,n=!1){let r=Ea(e,"x","prod");"bool"===r.dtype&&(r=$s(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Aa.runKernel(an,a,s)}}),Ol=ka({raggedGather_:function(e,t,n,r){const a=e.map(((e,t)=>Ea(e,`tensors${t}`,"raggedGather","int32"))),s={paramsNestedSplits:a,paramsDenseValues:Ea(t,"paramsDenseValues","raggedGather"),indices:Ea(n,"indices","raggedGather","int32")},o={outputRaggedRank:r},i=Aa.runKernel(sn,s,o);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),Ll=ka({raggedRange_:function(e,t,n){const r=Ea(e,"starts","raggedRange"),a={starts:r,limits:Ea(t,"limits","raggedRange",r.dtype),deltas:Ea(n,"deltas","raggedRange",r.dtype)},s=Aa.runKernel(on,a);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}}),Ml=ka({raggedTensorToTensor_:function(e,t,n,r,a){const s=Ea(e,"shape","raggedTensorToTensor","int32"),o=Ea(t,"values","raggedTensorToTensor"),i=Ea(n,"defaultValue","raggedTensorToTensor",o.dtype),u=r.map(((e,t)=>Ea(e,`tensors${t}`,"raggedTensorToTensor","int32"))),l={shape:s,values:o,defaultValue:i,rowPartitionTensors:u},c={rowPartitionTypes:a};return Aa.runKernel(un,l,c)}}),Pl=ka({rand_:function(e,t,n){de(e);const r=z(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return Aa.makeTensor(a,e,n)}});var Ql=n(474);class Ul{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Ql.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Gl{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=Ql.alea(a.toString()),this.randn=new Ul(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Vl{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ql.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Wl=ka({randomGamma_:function(e,t,n=1,r="float32",a){if(de(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Gl(t,n,r,a),o=Rs(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),zl=ka({randomNormal_:function(e,t=0,n=1,r,a){if(de(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Ul(t,n,r,!1,a),o=Rs(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),Hl=ka({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return zl(e,0,1,t,n)}}),jl=ka({randomUniform_:function(e,t=0,n=1,r="float32",a){de(e);const s=Rs(e,r),o=new Vl(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}}),Kl=ka({randomUniformInt_:function(e,t,n,r){return jl(e,t,n,"int32",r)}});function ql(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Aa.runKernel(ln,{},a)}const Yl=ka({real_:function(e){const t={input:Ea(e,"input","real")};return Aa.runKernel(cn,t)}}),Xl=ka({reciprocal_:function(e){const t={x:Ea(e,"x","reciprocal")};return Aa.runKernel(pn,t)}}),Jl=ka({relu_:function(e){const t={x:Ea(e,"x","relu")};return Aa.runKernel(dn,t)}}),Zl=ka({relu6_:function(e){const t={x:Ea(e,"x","relu6")};return Aa.runKernel(gn,t)}}),ec=ka({reverse_:function(e,t){const n={x:Ea(e,"x","reverse")},r={dims:t};return Aa.runKernel(An,n,r)}}),tc=ka({reverse1d_:function(e){const t=Ea(e,"x","reverse");return G(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),ec(t,0)}}),nc=ka({reverse2d_:function(e,t){const n=Ea(e,"x","reverse");return G(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),ec(n,t)}}),rc=ka({reverse3d_:function(e,t){const n=Ea(e,"x","reverse");return G(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),ec(n,t)}}),ac=ka({reverse4d_:function(e,t){const n=Ea(e,"x","reverse");return G(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),ec(n,t)}}),sc=ka({round_:function(e){const t={x:Ea(e,"x","round")};return Aa.runKernel(yn,t)}}),oc=ka({rsqrt_:function(e){const t={x:Ea(e,"x","rsqrt","float32")};return Aa.runKernel(xn,t)}}),ic=ka({selu_:function(e){const t={x:Ea(e,"x","selu")};return Aa.runKernel(wn,t)}}),uc=ka({separableConv2d_:function(e,t,n,r,a,s=[1,1],o="NHWC"){const i=Ea(e,"x","separableConv2d"),u=Ea(t,"depthwiseFilter","separableConv2d"),l=Ea(n,"pointwiseFilter","separableConv2d");let c=i,p=!1;if(3===i.rank&&(p=!0,c=wi(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");G(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),G(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),G(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),G(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),G(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],h=u.shape[3];G(l.shape[2]===d*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${l.shape[2]}.`));const f=iu(c,u,r,a,o,s),m=Ki(f,l,1,"valid",o);return p?wi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),lc=async function(e,t){const n=Ea(e,"x","setdiff1d"),r=Ea(t,"y","setdiff1d");G(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),G(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),G(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let e=0;e<a.length;e++)o.has(a[e])||i++;const u=new Kr([i],n.dtype),l=new Kr([i],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},cc=ka({sign_:function(e){const t={x:Ea(e,"x","sign")};return Aa.runKernel(Tn,t)}}),pc=ka({sin_:function(e){const t={x:Ea(e,"x","sin","float32")};return Aa.runKernel("Sin",t)}}),dc=ka({sinh_:function(e){const t={x:Ea(e,"x","sinh")};return Aa.runKernel(Sn,t)}}),hc=ka({slice1d_:function(e,t,n){const r=Ea(e,"x","slice1d");return G(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Ri(r,[t],[n])}}),fc=ka({slice2d_:function(e,t,n){const r=Ea(e,"x","slice2d");return G(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Ri(r,t,n)}}),mc=ka({slice3d_:function(e,t,n){const r=Ea(e,"x","slice3d");return G(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Ri(r,t,n)}}),gc=ka({slice4d_:function(e,t,n){const r=Ea(e,"x","slice4d");return G(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Ri(r,t,n)}}),Ac=ka({softmax_:function(e,t=-1){const n=Ea(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return Aa.runKernel(Bn,r,a)}}),yc=ka({fft_:function(e){G("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Aa.runKernel("FFT",t)}}),xc=ka({ifft_:function(e){G("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Aa.runKernel(St,t)}}),bc=ka({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=wi(e,[n,t]);r=xc(a)}else{const a=[n,2*(t-1)],s=wi(Yl(e),[n,t]),o=wi(Uu(e),[n,t]),i=ec(Ri(s,[0,1],[n,t-2]),1),u=Vs(ec(Ri(o,[0,1],[n,t-2]),1),Ks(-1)),l=Ti([s,i],1),c=Ti([o,u],1),p=wi(Na(l,c),[a[0],a[1]]);r=xc(p)}if(r=Yl(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=wi(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Ic=ka({split_:function(e,t,n=0){const r={x:Ea(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Aa.runKernel(_n,r,a)}}),vc=ka({rfft_:function(e,t){G("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=Ri(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=Ti([e,fl(r)],e.shape.length-1),n=t}else a=e;const s=Hs(a),o=wi(Na(a,s),[r,n]),i=yc(o),u=Math.floor(n/2)+1,l=Yl(i),c=Uu(i),p=Ic(l,[u,n-u],l.shape.length-1),d=Ic(c,[u,n-u],c.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=u,wi(Na(p[0],d[0]),h)}}),Cc=ka({squaredDifference_:function(e,t){let n=Ea(e,"a","squaredDifference"),r=Ea(t,"b","squaredDifference");[n,r]=ca(n,r),io(n.shape,r.shape);const a={a:n,b:r};return Aa.runKernel(Pn,a,{})}}),wc=ka({squeeze_:function(e,t){const n=Ea(e,"x","squeeze","string_or_numeric");return wi(n,J(n.shape,t).newShape)}}),Ec=ka({stack_:function(e,t=0){const n=Sa(e,"tensors","stack","string_or_numeric");G(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&G(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return Aa.runKernel(tn,r,a)}}),Sc=ka({step_:function(e,t=0){const n={x:Ea(e,"x","step")},r={alpha:t};return Aa.runKernel(tr,n,r)}}),Tc=ka({stridedSlice_:function(e,t,n,r,a=0,s=0,o=0,i=0,u=0){const l={x:Ea(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return Aa.runKernel(Un,l,c)}}),kc=ka({tan_:function(e){const t={x:Ea(e,"x","tan","float32")};return Aa.runKernel("Tan",t)}});function Nc(e,t){W(e);const n=va(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ra(e,null,n,t)}function Rc(e,t,n){if(W(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=va(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ra(e,t,r,n)}function $c(e,t,n){if(W(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=va(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ra(e,t,r,n)}function _c(e,t,n){if(W(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=va(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ra(e,t,r,n)}function Bc(e,t,n){if(W(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=va(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ra(e,t,r,n)}function Dc(e,t,n){if(W(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=va(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ra(e,t=t||r,r,n)}function Fc(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Oc(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Fc(n,t,e)}function Lc(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let o=1;for(let e=a;e<s;++e)o*=n[e];const i=a<1?1:a;return{sliceRank:a,numUpdates:z(t.shape)/i,sliceSize:o,strides:[...ie(n.slice(0,a)),1],outputSize:z(n)}}const Mc=ka({tensorScatterUpdate_:function(e,t,n){const r=Ea(e,"tensor","tensorScatterupdate"),a=Ea(t,"indices","tensorScatterupdate","int32"),s=Ea(n,"updates","tensorScatterupdate");if(Oc(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);const o={tensor:r,indices:a,updates:s};return Aa.runKernel(In,o,{})}}),Pc=ka({topk_:function(e,t=1,n=!0){const r=Ea(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},o={k:t,sorted:n},[i,u]=Aa.runKernel(Kn,s,o);return{values:i,indices:u}}}),Qc=ka({truncatedNormal_:function(e,t=0,n=1,r,a){if(de(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Ul(t,n,r,!0,a),o=Rs(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}}),Uc=ka({unique_:function(e,t=0){const n=Ea(e,"x","unique","string_or_numeric");G(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,o]=Aa.runKernel(Xn,r,a);return{values:s,indices:o}}}),Gc=ka({unsortedSegmentSum_:function(e,t,n){const r=Ea(e,"x","unsortedSegmentSum"),a=Ea(t,"segmentIds","unsortedSegmentSum","int32");G(j(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},o={numSegments:n};return Aa.runKernel(Zn,s,o)}}),Vc=ka({unstack_:function(e,t=0){const n=Ea(e,"x","unstack","string_or_numeric");G(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return Aa.runKernel(Jn,r,a)}});function Wc(e,t){return ul(e,t,"right")}function zc(e,t=!0,n,r){return Aa.makeVariable(e,t,n,r)}function Hc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Rs(e,"int32"),a=Rs([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),o=t*e.length;a.values.set(s,o)}return a.toTensor()}const jc=async function(e){const t=Ea(e,"condition","whereAsync","bool"),n=await t.data(),r=Hc(t.shape,n);return e!==t&&t.dispose(),r},Kc=async function(e,t,n){const r=Ea(e,"tensor","boolMask"),a=Ea(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;G(o>0,(()=>"mask cannot be scalar")),V(i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+o;e++)u*=i[e];const l=i.slice(0,s).concat([u],i.slice(s+o)),c=wi(r,l),p=wi(a,[-1]),d=await jc(p),h=wc(d,[1]),f=Mu(c,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),c.dispose(),p.dispose(),d.dispose(),f},qc=ka({transpose_:function(e,t,n){const r=Ea(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),G(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{G(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const a={x:r},s={perm:t};return"complex64"===r.dtype?Fs((()=>{let e=Yl(r),t=Uu(r);return e=Aa.runKernel(Yn,{x:e},s),t=Aa.runKernel(Yn,{x:t},s),n&&(t=Ju(t)),Na(e,t)})):Aa.runKernel(Yn,a,s)}}),Yc=ka({movingAverage_:function(e,t,n,r,a=!0){const s=Ea(e,"v","movingAverage"),o=Ea(t,"x","movingAverage"),i=Ea(n,"decay","movingAverage");var u,l;l=o,G((u=s).dtype===l.dtype,(()=>`The dtypes of the first(${u.dtype}) and second(${l.dtype}) input must match`)),G(H(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const c=Ks(1),p=ro(c,i);let d=Vs(ro(o,s),p);if(a){G(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Ea(r,"step","movingAverage");d=Gs(d,ro(c,no(i,e)))}return Qs(s,d)}}),Xc=ka({scatterND_:function(e,t,n){de(n);const r=Ea(e,"indices","scatterND","int32"),a=Ea(t,"updates","scatterND");Oc(a,r,n);const s={indices:r,updates:a},o={shape:n};return Aa.runKernel(bn,s,o)}}),Jc=ka({sparseToDense_:function(e,t,n,r=0){de(n);const a=Ea(e,"sparseIndices","sparseToDense","int32"),s=Ea(t,"sparseValues","sparseToDense","string_or_numeric"),o=Ea(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},u={outputShape:n};return Aa.runKernel(Mn,i,u)}}),Zc=ka({gatherND_:function(e,t){const n=Ea(t,"indices","gatherND","int32"),r={params:Ea(e,"x","gatherND","string_or_numeric"),indices:n};return Aa.runKernel(vt,r)}}),ep=ka({dropout_:function(e,t,n,r){const a=Ea(e,"x","dropout");if(G("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),G(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Jr?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(H(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,i=Gs(Lu(Qs(jl(s,0,1,"float32",r),o)),o);return Vs(a,i)}});function tp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function np(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return Nc(a,"float32")}const rp=async function(e,t,n=1){const r=Ea(e,"predictions","inTopK"),a=Ea(t,"targets","inTopK");G(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),G(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),V(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];G(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const o=await r.data(),i=await a.data(),[u,l]=[o.length/s,s],c=Z("bool",u);for(let e=0;e<u;e++){const t=e*l,r=o.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===i[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),$a(c,a.shape,"bool")},ap=ka({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=wi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=wi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),G(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),G(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),G(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?i.shape[3]:i.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];G(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),G(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Ci("conv2dDerFilter",a,o);const p={x:i,dy:u},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,filterShape:n};return Aa.runKernel(qe,p,d)}});function sp(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Vs(e,Sc(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function op(e,t){let n=t;const r=oo(e.shape,t.shape);return r.length>0&&(n=ku(n,r)),wi(n,e.shape)}function ip(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Jl(e);if("elu"===t)return mu(e);if("relu6"===t)return Zl(e);if("prelu"===t)return Dl(e,n);if("leakyrelu"===t)return zu(e,r);if("sigmoid"===t)return Ni(e);throw new Error(`Unknown fused activation ${t}.`)}const up=(e,t)=>!(e>0)||"linear"===t,lp=ka({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===up(Aa.state.gradientDepth,u)){G("NHWC"===a,(()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let p=Ki(e,t,n,r,a,s,o);return null!=i&&(p=Qs(p,i)),ip(p,u,l,c)}const p=Ea(e,"x","conv2d","float32"),d=Ea(t,"filter","conv2d","float32");let h=p,f=!1;3===p.rank&&(f=!0,h=wi(p,[1,p.shape[0],p.shape[1],p.shape[2]])),G(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),G(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Ci("fused conv2d",r,o);const m="NHWC"===a?h.shape[3]:h.shape[1];G(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),G(bi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const g=di(h.shape,d.shape,n,s,r,o);let A,y;if(null!=i&&(A=Ea(i,"bias","fused conv2d"),[A]=ca(A,p),"NHWC"===a?io(g.outShape,A.shape):(G(A.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${A.shape.length}.`)),G(0===A.shape.length||A.shape[0]===g.outChannels||1===A.shape[0],(()=>`Error in fused conv2d: bias shape (${A.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=l){const e=l.shape;if(G(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)G(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{io(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}y=Ea(l,"prelu weights","fused conv2d")}const x=(e,t)=>{G("NHWC"===a,(()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`));const[o,i,l,c]=t,p=sp(e,l,u);G(xi(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[Yi(i.shape,p,o,n,r),ap(i,p,o.shape,n,r)];if(null!=c){const e=op(c,p);d.push(e)}return d},b={x:h,filter:d,bias:A,preluActivationWeights:y},I={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=js(((e,t,n)=>{let r=Aa.runKernel(ar,b,I);return n([t,e,r]),f&&(r=wi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(h,d)}{const e=js(((e,t,n,r)=>{let a=Aa.runKernel(ar,b,I);return r([t,e,a,n]),f&&(a=wi(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(h,d,A)}}}),cp=ka({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],o){let i=e;3===e.rank&&(i=wi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=wi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:a,dimRoundingMode:o,dilations:s,filterShape:n};return Aa.runKernel(ot,l,c)}}),pp=ka({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],o){let i=t,u=!1;3===t.rank&&(u=!0,i=wi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:a,dimRoundingMode:o,dilations:s,inputShape:e},p=Aa.runKernel(it,l,c);return u?wi(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),dp=ka({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===up(Aa.state.gradientDepth,u)){let p=iu(e,t,n,r,a,s,o);return null!=i&&(p=Qs(p,i)),ip(p,u,l,c)}const p=Ea(e,"x","depthwiseConv2d","float32"),d=Ea(t,"filter","depthwiseConv2d","float32");let h=p,f=!1;3===p.rank&&(f=!0,h=wi(p,[1,p.shape[0],p.shape[1],p.shape[2]])),G(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),G(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),G(h.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),G(bi(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Ci("fused depthwiseConv2d",r,o);const m=di(h.shape,d.shape,n,s,r,o,!0);let g,A;null!=i&&(g=Ea(i,"bias","fused conv2d"),[g]=ca(g,p),io(m.outShape,g.shape)),null!=l&&(A=Ea(l,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{G(xi(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,i,l,c]=t,p=sp(e,l,u),d=pp(i.shape,p,a,n,r,s,o),h=cp(i,p,a.shape,n,r,s,o);return null!=c?[d,h,op(g,p)]:[d,h]},x={x:h,filter:d,bias:g,preluActivationWeights:A},b={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=js(((e,t,n)=>{let r=Aa.runKernel(sr,x,b);return n([t,e,r]),f&&(r=wi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return e(h,d)}{const e=js(((e,t,n,r)=>{let a=Aa.runKernel(sr,x,b);return r([t,e,a,n]),f&&(a=wi(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}));return e(h,d,g)}}}),hp=ka({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o,leakyreluAlpha:i=.2}){if(!1===up(Aa.state.gradientDepth,s)){let u=ki(e,t,n,r);return null!=a&&(u=Qs(u,a)),ip(u,s,o,i)}let u=Ea(e,"a","fused matMul"),l=Ea(t,"b","fused matMul");[u,l]=ca(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=r?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=z(f),A=z(m);G(c===p,(()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=io(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,h]),x=wi(u,n?[g,c,d]:[g,d,c]),b=wi(l,r?[A,h,p]:[A,p,h]);let I,v;null!=a&&(I=Ea(a,"bias","fused matMul"),[I]=ca(I,u),io(y,I.shape)),null!=o&&(v=Ea(o,"prelu weights","fused matMul"));const C=(e,t)=>{const[o,i,u,l]=t,c=sp(wi(e,u.shape),u,s);let p,d;return n||r?!n&&r?(p=ki(c,i,!1,!1),d=ki(c,o,!0,!1)):n&&!r?(p=ki(i,c,!1,!0),d=ki(o,c,!1,!1)):(p=ki(i,c,!0,!0),d=ki(c,o,!0,!0)):(p=ki(c,i,!1,!0),d=ki(o,c,!0,!1)),null!=a?[p,d,op(l,c)]:[p,d]},w={a:x,b,bias:I,preluActivationWeights:v},E={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:i};if(null==a){const e=js(((e,t,n)=>{const r=Aa.runKernel(rr,w,E);return n([e,t,r]),{value:wi(r,y),gradFunc:C}}));return e(x,b)}{const e=js(((e,t,n,r)=>{const a=Aa.runKernel(rr,w,E);return r([e,t,a,n]),{value:wi(a,y),gradFunc:C}}));return e(x,b,I)}}}),fp=ka({hammingWindow_:function(e){return np(e,.54,.46)}}),mp=ka({hannWindow_:function(e){return np(e,.5,.5)}}),gp=ka({frame_:function(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push(Ri(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=Ti([Ri(e,s,t-r),to([r],a)]);o.push(i),s+=n}return 0===o.length?Rc([],[0,t]):wi(Ti(o),[o.length,t])}}),Ap=ka({stft_:function(e,t,n,r,a=mp){null==r&&(r=tp(t));const s=gp(e,t,n),o=Vs(s,a(t));return vc(o,r)}}),yp=ka({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const o=Ea(e,"image","cropAndResize"),i=Ea(t,"boxes","cropAndResize","float32"),u=Ea(n,"boxInd","cropAndResize","int32"),l=i.shape[0];G(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),G(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),G(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),G(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),G(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),G("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:o,boxes:i,boxInd:u},p={method:a,extrapolationValue:s,cropSize:r};return Aa.runKernel(nt,c,p)}}),xp=ka({flipLeftRight_:function(e){const t=Ea(e,"image","flipLeftRight","float32");G(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Aa.runKernel(At,n,{})}}),bp=ka({grayscaleToRGB_:function(e){const t=Ea(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];G(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),G(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Fu(t,a)}}),Ip=ka({rgbToGrayscale_:function(e){const t=Ea(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];G(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),G(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const a=t.dtype,s=$s(t,"float32"),o=Nc([.2989,.587,.114]);let i;switch(t.rank){case 2:i=fu("ij,j->i",s,o);break;case 3:i=fu("ijk,k->ij",s,o);break;case 4:i=fu("ijkl,l->ijk",s,o);break;case 5:i=fu("ijklm,m->ijkl",s,o);break;case 6:i=fu("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=Bu(i,-1),$s(i,a)}}),vp=ka({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Ea(e,"image","rotateWithOffset","float32");G(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return Aa.runKernel(nr,s,o)}});function Cp(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),G(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),G(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),G(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),G(1===t.rank,(()=>"scores must be a 1D tensor")),G(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),G(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const wp=ka({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ea(e,"boxes","nonMaxSuppression","float32"),o=Ea(t,"scores","nonMaxSuppression","float32"),i=Cp(s,o,n,r,a),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold};return Aa.runKernel(Yt,{boxes:s,scores:o},u)}});function Ep(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||Sp)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Sp(e,t){return e>t?1:e<t?-1:0}function Tp(e,t,n,r,a){return Rp(e,t,n,r,a,0)}function kp(e,t,n,r,a,s){return Rp(e,t,n,r,a,0,!1,s,!0)}function Np(e,t,n,r,a,s){return Rp(e,t,n,r,a,s,!0)}function Rp(e,t,n,r,a,s,o=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Bp);const c=s>0?-.5/s:0,p=[],d=[];for(;p.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let n=p.length-1;n>=o;--n){const o=$p(e,s,p[n]);if(o>=r){i=!0;break}if(t.score=t.score*_p(r,c,o),t.score<=a)break}t.suppressBeginIndex=p.length,i||(t.score===n?(p.push(s),d.push(t.score)):t.score>a&&Ep(l,t,Bp))}const h=p.length,f=n-h;i&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:p};return o&&(m.selectedScores=d),u&&(m.validOutputs=h),m}function $p(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),h=(i-s)*(u-o),f=(p-l)*(d-c);if(h<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,c),A=Math.min(i,p),y=Math.min(u,d),x=Math.max(A-m,0)*Math.max(y-g,0);return x/(h+f-x)}function _p(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Bp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Dp=ka({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Ea(e,"boxes","nonMaxSuppression"),i=Ea(t,"scores","nonMaxSuppression"),u=Cp(o,i,n,r,a,s),l={boxes:o,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},p=Aa.runKernel(Jt,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}}),Fp=ka({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Ea(e,"boxes","nonMaxSuppression"),i=Ea(t,"scores","nonMaxSuppression"),u=Cp(o,i,n,r,a,null),l={boxes:o,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},p=Aa.runKernel(Xt,l,c);return{selectedIndices:p[0],validOutputs:p[1]}}}),Op=ka({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Ea(e,"images","resizeBilinear");G(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),G(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),G(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=wi(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Aa.runKernel(mn,i,u);return o?wi(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Lp=ka({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Ea(e,"images","resizeNearestNeighbor");G(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),G(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),G("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),G(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=wi(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Aa.runKernel(fn,i,u);return o?wi(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Mp=ka({threshold_:function(e,t="binary",n=!1,r=.5){const a=Ea(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,i,u,l,c=Vs(Nc([r]),255);if(G(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),G(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),G("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),G("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,i,u]=Ic(a,[1,1,1],-1);const e=Vs(o,.2989),t=Vs(i,.587),n=Vs(u,.114);l=Qs(Qs(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,o,i,u=Nc([-1]),l=Nc([0]),c=Nc([0]);for(let p=0;p<e.size-1;p++){n=Ri(e,0,p+1),r=Ri(e,p+1),o=Gs(ku(n),t),i=Gs(ku(r),t);const d=ku(Vs(n,ql(0,n.size)));a=Gs(d,ku(n));const h=to(r.shape,n.size),f=Qs(ql(0,r.size),h),m=Vs(r,f);s=Gs(ku(m),ku(r));const g=ro(a,s),A=ro(a,s),y=Vs(o,i);c=Vs(Vs(y,g),A);const x=Pu(c,l);l=pu(x,c,l),u=pu(x,Nc([p]),u)}return u}(Mi($s(sc(l),"int32"),$a([]),256),s));const p=n?ju(l,c):Pu(l,c);return $s(Vs(p,255),"int32")}}),Pp=ka({transform_:function(e,t,n="nearest",r="constant",a=0,s){const o=Ea(e,"image","transform","float32"),i=Ea(t,"transforms","transform","float32");G(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),G(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),G(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:o,transforms:i},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Aa.runKernel(qn,u,l)}}),Qp=ka({bandPart_:function(e,t,n){const r=Ea(e,"a","bandPart");G(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);let i,u;"number"==typeof t?(G(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),G(t<=s,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`)),i=Ea(t<0?s:t,"numLower","bandPart")):(G("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=pu(Hu(t,0),s,Al(t,s))),"number"==typeof n?(G(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),G(n<=o,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`)),u=Ea(n<0?o:n,"numUpper","bandPart")):(G("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),u=pu(Hu(n,0),o,Al(n,o)));const l=wi(ql(0,s,1,"int32"),[-1,1]),c=ql(0,o,1,"int32"),p=ro(l,c),d=rl(ju(p,i),Qu(p,Ju(u))),h=fl([s,o],r.dtype);return wi(Ec(Vc(wi(r,[-1,s,o])).map((e=>pu(d,e,h)))),a)}}),Up=ka({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,G(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)G(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Ic(e,e.shape[0],0).map((e=>wc(e,[0])));G(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Aa.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Vs(ku(Vs(n[r],e)),n[r]);e=ro(e,t)}return Gs(e,Ru(e,"euclidean"))})));return t?Ec(n,0):n}});function Gp(e,t=!1){return Aa.tidy((()=>{G(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Ou(n),s=_s(e);const o=Rc([[1]],[1,1]);let i=_s(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,l=a;[i,s,a]=Aa.tidy((()=>{const t=Ri(s,[e,e],[n-e,1]),u=Ru(t),l=Ri(s,[e,e],[1,1]),c=pu(Pu(l,0),Rc([[-1]]),Rc([[1]])),p=ro(l,Vs(c,u)),d=Gs(t,p);i=1===d.shape[0]?_s(o):Ti([o,Ri(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const h=Ju(Gs(ki(c,p),u)),f=Ri(s,[e,0],[n-e,r]),m=Vs(h,i),g=qc(i);if(0===e)s=ro(f,ki(m,ki(g,f)));else{const t=ro(f,ki(m,ki(g,f)));s=Ti([Ri(s,[0,0],[e,r]),t],0)}const A=qc(m),y=Ri(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=ro(y,ki(ki(y,i),A));else{const t=ro(y,ki(ki(y,i),A));a=Ti([Ri(a,[0,0],[n,e]),t],1)}return[i,s,a]})),Os([t,u,l])}return!t&&n>r&&(a=Ri(a,[0,0],[n,r]),s=Ri(s,[0,0],[r,r])),[a,s]}))}const Vp=ka({qr_:function(e,t=!1){if(G(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Gp(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Vc(wi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=Gp(e,t);a.push(n),s.push(r)})),[wi(Ec(a,0),e.shape),wi(Ec(s,0),e.shape)]}}});var Wp;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Wp||(Wp={}));const zp=ka({computeWeightedLoss_:function(e,t,n=Wp.SUM_BY_NONZERO_WEIGHTS){const r=Ea(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Ea(t,"weights","computeWeightedLoss"));const s=null==a?r:Vs(r,a);if(n===Wp.NONE)return s;if(n===Wp.SUM)return ku(s);if(n===Wp.MEAN){if(null==a)return hl(s);{const e=r.size/a.size,t=Gs(ku(s),ku(a));return e>1?Gs(t,Ks(e)):t}}if(n===Wp.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Gs(ku(s),Ks(r.size));{const e=Vs(a,ml(r.shape)),t=$s(ku(Cl(e,Ks(0))),"float32");return Gs(ku(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),Hp=ka({absoluteDifference_:function(e,t,n,r=Wp.SUM_BY_NONZERO_WEIGHTS){const a=Ea(e,"labels","absoluteDifference"),s=Ea(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Ea(n,"weights","absoluteDifference")),V(a.shape,s.shape,"Error in absoluteDifference: ");const i=ao(ro(a,s));return zp(i,o,r)}}),jp=ka({cosineDistance_:function(e,t,n,r,a=Wp.SUM_BY_NONZERO_WEIGHTS){const s=Ea(e,"labels","cosineDistance"),o=Ea(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Ea(r,"weights","cosineDistance")),V(s.shape,o.shape,"Error in cosineDistance: ");const u=Ks(1),l=ro(u,ku(Vs(s,o),n,!0));return zp(l,i,a)}}),Kp=ka({hingeLoss_:function(e,t,n,r=Wp.SUM_BY_NONZERO_WEIGHTS){let a=Ea(e,"labels","hingeLoss");const s=Ea(t,"predictions","hingeLoss");let o=null;null!=n&&(o=Ea(n,"weights","hingeLoss")),V(a.shape,s.shape,"Error in hingeLoss: ");const i=Ks(1);a=ro(Vs(Ks(2),a),i);const u=Jl(ro(i,Vs(a,s)));return zp(u,o,r)}}),qp=ka({huberLoss_:function(e,t,n,r=1,a=Wp.SUM_BY_NONZERO_WEIGHTS){const s=Ea(e,"labels","huberLoss"),o=Ea(t,"predictions","huberLoss");let i=null;null!=n&&(i=Ea(n,"weights","huberLoss")),V(s.shape,o.shape,"Error in huberLoss: ");const u=Ks(r),l=ao(ro(o,s)),c=Al(l,u),p=ro(l,c),d=Qs(Vs(Ks(.5),zs(c)),Vs(u,p));return zp(d,i,a)}}),Yp=ka({logLoss_:function(e,t,n,r=1e-7,a=Wp.SUM_BY_NONZERO_WEIGHTS){const s=Ea(e,"labels","logLoss"),o=Ea(t,"predictions","logLoss");let i=null;null!=n&&(i=Ea(n,"weights","logLoss")),V(s.shape,o.shape,"Error in logLoss: ");const u=Ks(1),l=Ks(r),c=Ju(Vs(s,Yu(Qs(o,l)))),p=Vs(ro(u,s),Yu(Qs(ro(u,o),l))),d=ro(c,p);return zp(d,i,a)}}),Xp=ka({meanSquaredError_:function(e,t,n,r=Wp.SUM_BY_NONZERO_WEIGHTS){const a=Ea(e,"labels","meanSquaredError"),s=Ea(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=Ea(n,"weights","meanSquaredError")),V(a.shape,s.shape,"Error in meanSquaredError: ");const i=Cc(a,s);return zp(i,o,r)}}),Jp=ka({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Wp.SUM_BY_NONZERO_WEIGHTS){let s=Ea(e,"multiClassLabels","sigmoidCrossEntropy");const o=Ea(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=Ea(n,"weights","sigmoidCrossEntropy")),V(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Ks(r),t=Ks(1),n=Ks(.5);s=Qs(Vs(s,ro(t,e)),Vs(n,e))}const u=function(e,t){const n=Ea(e,"labels","sigmoidCrossEntropyWithLogits"),r=Ea(t,"logits","sigmoidCrossEntropyWithLogits");V(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Jl(r),s=Vs(r,n),o=Xu(_u(Ju(ao(r))));return Qs(ro(a,s),o)}(s,o);return zp(u,i,a)}}),Zp=ka({softmaxCrossEntropy_:function(e,t,n,r=0,a=Wp.SUM_BY_NONZERO_WEIGHTS){let s=Ea(e,"onehotLabels","softmaxCrossEntropy");const o=Ea(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=Ea(n,"weights","softmaxCrossEntropy")),V(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Ks(r),t=Ks(1),n=Ks(s.shape[1]);s=Qs(Vs(s,ro(t,e)),Gs(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=js(((e,t,r)=>{const a=nl(t,[n],!0),s=ro($s(t,"float32"),a);r([e,s]);const o=Ju(Vs(s,e));return{value:ku(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Iu(e.shape,[n]);return[Vs(wi(e,s),ro($s(r,"float32"),_u(a))),Vs(wi(e,s),ro(_u(a),$s(r,"float32")))]}}}));return r(e,t)}(s,o);return zp(u,i,a)}}),ed=ka({sparseFillEmptyRows_:function(e,t,n,r){const a=Ea(e,"indices","sparseFillEmptyRows","int32"),s=Ea(t,"values","sparseFillEmptyRows"),o=Ea(n,"denseShape","sparseFillEmptyRows","int32"),i=Ea(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:a,values:s,denseShape:o,defaultValue:i},l=Aa.runKernel(Dn,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),td=ka({sparseReshape_:function(e,t,n){const r=Ea(e,"inputIndices","sparseReshape","int32"),a=Ea(t,"inputShape","sparseReshape","int32"),s=Ea(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const o={inputIndices:r,inputShape:a,newShape:s},i=Aa.runKernel(Fn,o);return{outputIndices:i[0],outputShape:i[1]}}}),nd=ka({sparseSegmentMean_:function(e,t,n){const r=Ea(e,"data","sparseSegmentMean"),a=Ea(t,"indices","sparseSegmentMean","int32"),s=Ea(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return Aa.runKernel(On,o)}}),rd=ka({sparseSegmentSum_:function(e,t,n){const r=Ea(e,"data","sparseSegmentSum"),a=Ea(t,"indices","sparseSegmentSum","int32"),s=Ea(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return Aa.runKernel(Ln,o)}}),ad=ka({stringNGrams_:function(e,t,n,r,a,s,o,i){const u=Ea(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Ea(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:o,preserveShortSequences:i},p={data:u,dataSplits:l},d=Aa.runKernel(Gn,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}}),sd={fft:yc,ifft:xc,rfft:vc,irfft:bc},od={hammingWindow:fp,hannWindow:mp,frame:gp,stft:Ap},id={flipLeftRight:xp,grayscaleToRGB:bp,resizeNearestNeighbor:Lp,resizeBilinear:Op,rgbToGrayscale:Ip,rotateWithOffset:vp,cropAndResize:yp,nonMaxSuppression:wp,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Ea(e,"boxes","nonMaxSuppressionAsync"),o=Ea(t,"scores","nonMaxSuppressionAsync"),i=Cp(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:p}=Tp(l,c,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),Nc(p,"int32")},nonMaxSuppressionWithScore:Dp,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=Ea(e,"boxes","nonMaxSuppressionAsync"),i=Ea(t,"scores","nonMaxSuppressionAsync"),u=Cp(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),c=l[0],p=l[1],{selectedIndices:d,selectedScores:h}=Np(c,p,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Nc(d,"int32"),selectedScores:Nc(h)}},nonMaxSuppressionPadded:Fp,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=Ea(e,"boxes","nonMaxSuppressionAsync"),i=Ea(t,"scores","nonMaxSuppressionAsync"),u=Cp(o,i,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[d,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=kp(d,h,l,c,p,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Nc(f,"int32"),validOutputs:Ks(m,"int32")}},threshold:Mp,transform:Pp},ud={bandPart:Qp,gramSchmidt:Up,qr:Vp},ld={absoluteDifference:Hp,computeWeightedLoss:zp,cosineDistance:jp,hingeLoss:Kp,huberLoss:qp,logLoss:Yp,meanSquaredError:Xp,sigmoidCrossEntropy:Jp,softmaxCrossEntropy:Zp},cd={sparseFillEmptyRows:ed,sparseReshape:td,sparseSegmentMean:nd,sparseSegmentSum:rd},pd={stringNGrams:ad,stringSplit:ka({stringSplit_:function(e,t,n=!0){const r=Ea(e,"input","stringSplit","string"),a=Ea(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},o={input:r,delimiter:a},i=Aa.runKernel(Vn,o,s);return{indices:i[0],values:i[1],shape:i[2]}}}),stringToHashBucketFast:ka({stringToHashBucketFast_:function(e,t){const n=Ea(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Aa.runKernel(Wn,a,r)}}),staticRegexReplace:ka({staticRegexReplace_:function(e,t,n,r=!0){const a=Ea(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return Aa.runKernel(Qn,{x:a},s)}})},dd="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function hd(e,t){const n=e[0].length;e.forEach(((e,t)=>{G(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),G(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)G(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function fd(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var md;function gd(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){const s=n[a],o=r[r.length-n.length+a],i=r[o];if(s>=0)if(i>=0){if(i!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${i}`)}else r[o]=s}return r}function Ad(e){const t={FIRST_DIM_SIZE:md.FIRST_DIM_SIZE,VALUE_ROWIDS:md.VALUE_ROWIDS,ROW_LENGTHS:md.ROW_LENGTHS,ROW_SPLITS:md.ROW_SPLITS,ROW_LIMITS:md.ROW_LIMITS,ROW_STARTS:md.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function yd(e){return 0===e.length?0:e[0]===md.FIRST_DIM_SIZE?e.length-1:e.length}function xd(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){const n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(md||(md={}));const bd=30;function Id(e){return e<=bd?e:oe(e,Math.floor(Math.sqrt(e)))}function vd(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Cd(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function wd(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ed(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Sd(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Td(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function kd(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===z(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let e=0;e<a.length-1;++e)o*=a[e];const i=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=i[e],u.push(i[e]);const c=[...ie(e.shape).map((e=>e/l)),1].slice(0,s);return[u,o,l,c]}const Nd=1.7580993408473768,Rd=1.0507009873554805,$d=.3275911,_d=.254829592,Bd=-.284496736,Dd=1.421413741,Fd=-1.453152027,Od=1.061405429;function Ld(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Md(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Pd(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Qd(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ud(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Gd(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Vd(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Wd(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const zd="->",Hd=/->/g,jd=",",Kd="...";function qd(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Hd,"").length)/zd.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${zd}").`);const[r,a]=e.split(zd);G(-1===r.indexOf(Kd),(()=>`The ellipsis notation ("${Kd}") is not supported yet.`));const s=r.split(jd),o=s.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&t!==jd&&i.push(t)}const u=new Array(s.length);for(let e=0;e<o;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(i.indexOf(s[e][t]))}const l=i.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:i,summedDims:c,idDims:u}}function Yd(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Xd(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:G(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Jd(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=eh(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Zd(e){return e.every(((e,t)=>e===t))}function eh(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function th(e,t,n=0){let r=[];if("number"==typeof t)G(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{G(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}G(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function nh(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function rh(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function ah(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function sh(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function oh(e,t){return`size ${e} must be non-negative, not ${t}`}function ih(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function uh(e,t){return`Input to reshape is a SparseTensor with ${z(e)}\n  dense values, but the requested shape requires a multiple of ${z(t)}. inputShape=${e} outputShape= ${t}`}function lh(e,t){return`Input to reshape is a tensor with ${z(e)} dense values, but the requested shape has ${z(t)}. inputShape=${e} outputShape=${t}`}function ch(){return"segment ids must be >= 0"}function ph(){return"segment ids are not increasing"}function dh(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function hh(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function fh(e,t){let n,r=!1;for(e<=bd?(n=e,r=!0):n=oe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=oe(e,n+1);return n}function mh(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function gh(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)i.push(t.shape[e]);for(let t=n+1;t<s;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:i}}function Ah(e){try{return e.map((e=>Dr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function yh(e){return e.map((e=>Br(e)))}!function(){for(const e of co)Zs(e)}();const xh={},bh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Ih(e,t){if(!(e in xh)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(xe().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete xh[e]}),!1),xe().getBool("SOFTWARE_WEBGL_ENABLED")&&(bh.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",bh)||n.getContext("experimental-webgl",bh):n.getContext("webgl2",bh)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;xh[e]=n}const n=xh[e];return null==n||n.isContextLost()?(delete xh[e],Ih(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),xh[e])}var vh,Ch,wh;function Eh(e,t){return[t,e]}function Sh(e){const t=z(e);return K(Math.ceil(t/4))}function Th(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function kh(e,t){const n=e;let r,a,s,o,i,u,l,c,p,d;return 2===xe().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,c=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function Nh(e,t){const n=t();return xe().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function Rh(e){return!!(xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function $h(e,t){return Qh(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(vh||(vh={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Ch||(Ch={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(wh||(wh={}));const _h=/ERROR: [0-9]+:([0-9]+):/g;function Bh(e,t){const n=_h.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,o=a.map(((e,t)=>q((t+1).toString(),s)+e));let i=0;for(let e=0;e<o.length;e++)i=Math.max(o[e].length,i);const u=o.slice(0,r-1),l=o.slice(r-1,r),c=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${q(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function Dh(e,t){if(Nh(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Fh(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(Nh(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),Nh(e,(()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o))),Nh(e,(()=>e.enableVertexAttribArray(i))),!0)}function Oh(e,t,n,r){Nh(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),Nh(e,(()=>e.activeTexture(e.TEXTURE0+n))),Nh(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),Nh(e,(()=>e.uniform1i(n,r)))}function Lh(e,t,n){Nh(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),Nh(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Mh(e,t){Nh(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),Nh(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Ph(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Qh(e,t,n){const r=Nh(e,(()=>t()));if(null==r)throw new Error(n);return r}function Uh(e,t=2){return z(e.slice(0,e.length-t))}function Gh(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Vh(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Uh(e),...Gh(e)]),t}function Wh(e){return e%2==0}function zh(e,t){if(H(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(Wh(n)&&Wh(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Wh(e[0])&&Wh(t[0])}let Hh,jh;function Kh(e,t){return null!=e.getExtension(t)}function qh(e){try{if(null!=Ih(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Yh(e){const t=kh(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function Xh(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&G("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const Jh=xe();function Zh(){let e,t,n,r,a,s,o,i,u,l;return 2===xe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",o="out vec4 outputColor;",i=xe().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function ef(e,t,n="index"){const r=ie(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function tf(e,t,n="index"){const r=ie(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function nf(e){const t=ie(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Jh.registerFlag("HAS_WEBGL",(()=>Jh.getNumber("WEBGL_VERSION")>0)),Jh.registerFlag("WEBGL_VERSION",(()=>qh(2)?2:qh(1)?1:0)),Jh.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Jh.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Jh.get("WEBGL_VERSION"))),Jh.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Jh.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Jh.registerFlag("WEBGL_PACK",(()=>Jh.getBool("HAS_WEBGL"))),Jh.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_PACK_CLIP",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_PACK_REDUCE",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_CONV_IM2COL",(()=>Jh.getBool("WEBGL_PACK"))),Jh.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==Hh){const t=Ih(e);Hh=t.getParameter(t.MAX_TEXTURE_SIZE)}return Hh}(Jh.getNumber("WEBGL_VERSION")))),Jh.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==jh){const t=Ih(e);jh=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,jh)}(Jh.getNumber("WEBGL_VERSION")))),Jh.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=Jh.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Ih(e);return t=Kh(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Kh(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),Jh.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Jh.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!xa())),Jh.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Ih(e);if(1===e){if(!Kh(t,"OES_texture_float"))return!1}else if(!Kh(t,"EXT_color_buffer_float"))return!1;return Yh(t)}(Jh.getNumber("WEBGL_VERSION")))),Jh.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Jh.getBool("WEBGL_FORCE_F16_TEXTURES")&&Jh.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Jh.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=Ih(e);if(1!==e){if(Kh(t,"EXT_color_buffer_float"))return Yh(t);const e="EXT_color_buffer_half_float";if(Kh(t,e)){const n=t.getExtension(e);return function(e,t){const n=kh(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!Kh(t,"OES_texture_float")&&!!Kh(t,"WEBGL_color_buffer_float")&&Yh(t)}(Jh.getNumber("WEBGL_VERSION")))),Jh.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=Jh.getNumber("WEBGL_VERSION"))&&null!=Ih(e).fenceSync;var e})),Jh.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Jh.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Jh.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Jh.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>xa()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),Jh.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Jh.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Jh.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Jh.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),Jh.registerFlag("WEBGL_EXP_CONV",(()=>!1)),Jh.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>Jh.getBool("IS_TEST"))),Jh.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),Jh.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),Jh.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),Jh.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const rf="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:af}=o;function sf(e,t,n){const r=[];if(e.forEach((e=>{const t=z(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=gf(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?uf(e,r):of(e,r);const s=e.shapeInfo.logicalShape,o=t.logicalShape;return s.length<=o.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=af(e.shapeInfo.logicalShape,t.logicalShape),u=mf(o),l=o-s;let c;const p=["x","y","z","w","u","v"];c=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>`coords.${p[e+l]} = 0;`)).join("\n");let d="";d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+l]}`)).join(", ");let h="return outputValue;";const f=1===z(e.shapeInfo.logicalShape),m=1===z(t.logicalShape);if(1!==s||f||m){if(f&&!m)h=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=s-2,t=s-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?h="return vec4(outputValue.x);":i.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${h}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===u&&null==e.shapeInfo.flatOffset&&H(o,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=mf(u),c=af(e.shapeInfo.logicalShape,t.logicalShape),p=u-i;let d;const h=["x","y","z","w","u","v"];d=0===i?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${h[e+p]} = 0;`)).join("\n");let f="";return f=u<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=Zh(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(i);let l,c,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${lf}\n    ${cf}\n    ${pf}\n  `}(i);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(H(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let o=s,i="",u="b, r, c";for(let t=2;t<e.length-1;t++)o*=e[e.length-t-1],i=`\n      int b${t} = index / ${o};\n      index -= b${t} * ${o};\n    `+i,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(i)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return H(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${tf(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=ef(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${tf(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=ef(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=ef(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=ef(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(i)),n.packedInputs&&(p+=df),[p,u,c,a,l,s,n.userCode].join("\n")}function of(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=hf(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${u}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ff(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],o=a[1];if(1===o&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=hf(n);return 1===o?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&H(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:i}=J(n),u=o;if(u.length<n.length){const n=["row","col"];return`\n      ${of(Af(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${yf(n,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ff(e)}\n      }\n    `;const l=s[0],c=s[1],p=hf(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:u}=J(n),l=i;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${of(Af(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${yf(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${o}, 1)));\n        ${ff(e)}\n      }\n    `;const c=e.shapeInfo.texShape,p=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===o&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=hf(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${o} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:u,keptDims:l}=J(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${of(Af(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${yf(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${s}, 1)));\n        ${ff(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(h===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(h===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const A=hf(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${A});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${h}, index + ${A});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,o=t[2]*s,i=t[1]*o,{newShape:u,keptDims:l}=J(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${of(Af(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${yf(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${s}, ${a})) +\n          depth3;\n        ${ff(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${hf(n)};\n      vec2 uv = uvFromFlat(${d}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=J(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${of(Af(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${yf(t,s)});\n      }\n    `}const o=t[5],i=t[4]*o,u=t[3]*i,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${ff(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===c&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${hf(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function uf(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${Zh().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=Zh();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=s[0],i=s[1],u=Zh();if(null!=s&&H(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${uf(Af(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${yf(s,r)});\n        }\n      `}const i=Zh();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=Zh();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],c=u[1],p=Math.ceil(s[o-1]/2);let d=p*Math.ceil(s[o-2]/2),h="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<o-1;e++)h=`int b${e}, `+h,d*=s[o-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const lf="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",cf="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pf="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",df="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function hf(e){return`offset${e}`}function ff(e){const t=e.name,n=z(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function mf(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function gf(e,t,n){const{newShape:r,keptDims:a}=J(t),s=t.length,o=e&&3===s&&1===t[0],i=o?t.slice(1):r,u=!e&&s>1&&!H(t,n)&&r.length<s||o;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:a}}function Af(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function yf(e,t){return t.map((t=>e[t])).join(", ")}function xf(e,t,n){const r=[],a=[];let s,o,i,u=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===xe().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const a of t.variableNames){const s={name:a,uniform:e.getUniformLocation(n,a,c),offset:e.getUniformLocation(n,`offset${a}`,c)};t.enableShapeUniforms&&(s.shape=e.getUniformLocation(n,`${a}Shape`,c),s.texShape=e.getUniformLocation(n,`${a}TexShape`,c)),r.push(s)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",c),i=e.getUniformLocation(n,"outShapeStrides",c),o=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)a.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:a,infLoc:u,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}}function bf(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!H(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,i=a.isUniform?null:a.texData.texShape;if(!H(o,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${i} must match`)}))}function If(e){return xe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class vf{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=vh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Zh();this.outputShape=e,this.enableShapeUniforms=If(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?tf(["r","c","d"],e):ef(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Cf{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=vh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Zh();this.outputShape=e,this.enableShapeUniforms=If(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?tf(["r","c","d"],e):ef(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class wf{constructor(e){this.variableNames=["A"],this.outTexUsage=Ch.DOWNLOAD;const t=Zh();this.outputShape=e,this.userCode=`\n      ${rf}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Ef{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ch.DOWNLOAD;const t=Zh();this.outputShape=e,this.userCode=`\n      ${rf}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const Sf={R:0,G:1,B:2,A:3};class Tf{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=Zh();this.outputShape=e,this.enableShapeUniforms=If(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let e=0;e<n.length;e++){const t=n[e];s+=`\n          if(offset == ${e}) {\n            result = values[${Sf[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":nf(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class kf{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Zh();this.outputShape=e,this.enableShapeUniforms=If(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":nf(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function Nf(e,t,n,r,a,s){!function(e,t){const n=xe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return Qh(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return Nh(e,(()=>e.bindTexture(i,o))),Nh(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),Nh(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),Nh(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),Nh(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===xe().getNumber("WEBGL_VERSION")?Nh(e,(()=>e.texImage2D(i,0,r,t,n,0,a,s,null))):Nh(e,(()=>e.texStorage2D(i,1,r,t,n))),Nh(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function Rf(e){return e.internalFormatFloat}function $f(e){return e.internalFormatHalfFloat}function _f(e){return e.downloadTextureFormat}function Bf(e){return e.internalFormatPackedFloat}function Df(e){return e.internalFormatPackedHalfFloat}class Ff{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=xe().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){xh[e]=t}(t,e)):this.gl=Ih(t),e=this.gl,2===xe().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>Nh(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>Nh(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>Nh(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>Nh(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Nh(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>Nh(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>Nh(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>Nh(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===xe().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=$h(this.gl,e),Kh(this.gl,t))this.textureHalfFloatExtension=$h(this.gl,t);else if(xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Kh(this.gl,r))this.colorBufferHalfFloatExtension=$h(this.gl,r);else if(xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Kh(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Kh(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=Qh(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Nh(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Nh(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=Qh(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Nh(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),Nh(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return Qh(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=kh(this.gl,this.textureHalfFloatExtension)}get debug(){return xe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Nh(e,(()=>e.finish())),Nh(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),Nh(e,(()=>e.deleteFramebuffer(this.framebuffer))),Nh(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),Nh(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),Nh(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Eh(t,n);return Nf(e,a,s,Rf(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Eh(t,n);return Nf(e,a,s,$f(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Eh(t,n);return Nf(e,a,s,_f(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Nh(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===xe().getNumber("WEBGL_VERSION")?Nh(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):Nh(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===xe().getNumber("WEBGL_VERSION")?Nh(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):Nh(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),Nh(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let o,i,u;Nh(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,u=s.internalFormatPackedFloat),o.set(a),2===xe().getNumber("WEBGL_VERSION")?Nh(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,i,o))):Nh(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,o))),Nh(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Th(t,n);return Nf(e,a,s,Df(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Th(t,n);return Nf(e,a,s,Bf(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Mh(this.gl,this.framebuffer),this.outputTexture=null),Nh(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=Eh(t,n),o=new Uint8Array(t*n*4);return Nh(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,o,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=Th(e,t);return n*r*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();Nh(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return Nh(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),Nh(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),Nh(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(xe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return Nh(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=Zh();return function(e,t){const n=Qh(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Nh(e,(()=>e.shaderSource(n,t))),Nh(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return Qh(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);Nh(t,(()=>t.attachShader(n,this.vertexShader))),Nh(t,(()=>t.attachShader(n,e))),function(e,t){if(Nh(e,(()=>e.linkProgram(t))),!xe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&Dh(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Nh(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){Nh(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Fh(e,t,"clipSpacePos",n,3,20,0)&&Fh(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(Nh(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Dh(this.gl,this.program),Nh(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Qh(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Nh(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Oh(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=Th(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Dh(this.gl,this.program),Ph(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Nh(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Nh(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=$h(this.gl,2===xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Y((()=>this.disposed||this.isQueryAvailable(e,xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in xe().platform&&(n=xe().platform.setTimeoutCustom.bind(xe().platform)),Y((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Lh(this.gl,e,this.framebuffer),this.debug&&Ph(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Lh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ph(this.gl)):Mh(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;Lh(r,e,this.framebuffer),this.debug&&Ph(r),this.outputTexture=e,Nh(r,(()=>r.viewport(0,0,t,n))),Nh(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),Nh(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Of(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&G("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function Lf(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function Mf(e){return(t,n,r,a,s)=>{const o=io(t,n),i=o.length,u=ie(o),l=Z(s,z(o)),c=t.length,p=n.length,d=ie(t),h=ie(n),f=so(t,o),m=so(n,o);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=fe(t,i,u),s=n.slice(-c);f.forEach((e=>s[e]=0));const o=he(s,c,d),g=n.slice(-p);m.forEach((e=>g[e]=0));const A=he(g,p,h);l[t]=e(r[o],a[A])}return[l,o]}}function Pf(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}function Qf(e,t,n="float32"){if("complex64"===n)return Pf({inputs:{real:Qf(e,t,"float32"),imag:Qf(e,t,"float32")},backend:e});const r=pe(z(t),n);return e.makeTensorInfo(t,n,r)}function Uf(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Gf(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=$r([0],n),[a,s]=Mf(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[s,"bool",a]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function Vf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Uf({inputs:{x:a},backend:n});const e=Qf(n,a.shape,a.dtype),t=Vf({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Pf({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}({inputs:{input:a},backend:n}),t=Vf({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!te(a.dtype,s)){const e=Uf({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const o=n.data.get(a.dataId).values,[i,u,l]=Gf(o,a.shape,a.dtype,s);return n.makeTensorInfo(i,u,l)}function Wf(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:o}=n,i=a;Of([s,o],e);const u=i.data.get(s.dataId).values,l=i.data.get(o.dataId).values,c="string"===s.dtype?Ah(u):u,p="string"===s.dtype?Ah(l):l,d=r||s.dtype,[h,f]=t(s.shape,o.shape,c,p,d);return i.makeTensorInfo(f,d,h)}:({inputs:e,backend:a})=>{const{a:s,b:o}=e,i=a;if("complex64"===s.dtype||"complex64"===o.dtype){const e=Vf({inputs:{x:s},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,l=i.data.get(a.dataId).values,c=Vf({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),p=i.data.get(c.dataId),d=p.complexTensorInfos.real,h=p.complexTensorInfos.imag,f=i.data.get(d.dataId).values,m=i.data.get(h.dataId).values,[g,A,y]=n(s.shape,o.shape,u,l,f,m),x=i.makeTensorInfo(y,"float32",g),b=i.makeTensorInfo(y,"float32",A),I=Pf({inputs:{real:x,imag:b},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(x),i.disposeIntermediateTensorInfo(b),I}{const e=i.data.get(s.dataId).values,n=i.data.get(o.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,o.shape,e,n,a);return i.makeTensorInfo(l,a,u)}}}function zf(e){return(t,n,r,a,s,o)=>{const i=io(t,n),u=z(i),l=i.length,c=ie(i),p=Z("float32",u),d=Z("float32",u),h=so(t,i),f=so(n,i),m=Ld(r,a),g=Ld(s,o),A=t.length,y=ie(t),x=n.length,b=ie(n);if(h.length+f.length===0)for(let t=0;t<p.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);p[t]=a.real,d[t]=a.imag}else for(let t=0;t<p.length;t++){const n=fe(t,l,c),r=n.slice(-A);h.forEach((e=>r[e]=0));const a=he(r,A,y),s=n.slice(-x);f.forEach((e=>s[e]=0));const o=he(s,x,b),i=e(m[2*a],m[2*a+1],g[2*o],g[2*o+1]);p[t]=i.real,d[t]=i.imag}return[p,d,i]}}const Hf=Mf(((e,t)=>e+t)),jf=zf(((e,t,n,r)=>({real:e+n,imag:t+r})));function Kf(e,t,n,r,a){const s=z(r),o=pe(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(o[r]+=s>0?t[n]:1)}return o}function qf(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],o=Rs([a,n],t.dtype);for(let i=0;i<a;i++)for(let a=0;a<s;a++){const s=e.get(i,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,a),i,s):o.set(o.get(i,s)+1,i,s))}return o}Wf(Se,Hf,jf);const Yf=Mf(((e,t)=>e&t));function Xf(e){return(t,n,r)=>{const a=ee(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function Jf(e,t,n){return Zf(e,Xf(t),n)}function Zf(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:o}=r;Of(o,e);const i=s,u=i.data.get(o.dataId).values;let l;if("string"===o.dtype){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=Ah(u)}else l=u;const c=n||o.dtype,p=t(l,c,a);return i.makeTensorInfo(o.shape,c,p)}}Wf(Qe,Yf);const em=Xf((e=>Math.ceil(e)));function tm(e,t,n,r){const a=ee(n,z(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=z(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?Ah(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[i+t]=s[o++]}r+=e.shape[1]}))}return a}Zf(Ve,em);const nm=Mf(((e,t)=>e===t?1:0)),rm=(Wf(dt,nm,null,"bool"),Xf((e=>Math.exp(e)))),am=(Zf(ht,rm,"float32"),Xf((e=>Math.expm1(e)))),sm=(Zf(mt,am),Xf((e=>Math.floor(e))));function om(e,t,n,r,a,s,o,i,u){const l=Rs([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*o[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${i}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}function im(e,t,n){const r=Rs(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],o=a[2],i=t.locToIndex([s,o]);a[2]=t.values[i];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}Zf(yt,sm);const um=Mf(((e,t)=>e>t?1:0)),lm=(Wf(Ct,um,null,"bool"),Mf(((e,t)=>e>=t?1:0))),cm=(Wf(wt,lm,null,"bool"),Mf(((e,t)=>e<t?1:0))),pm=(Wf(_t,cm,null,"bool"),Mf(((e,t)=>e<=t?1:0)));function dm(e,t,n){const r=(t-e)/(n-1),a=pe(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}Wf(Bt,pm,null,"bool");const hm=Xf((e=>Math.log(e)));function fm(e,t,n,r){const a=Z(r,z(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}Zf(Ft,hm);const mm=Mf(((e,t)=>Math.max(e,t))),gm=(Wf(Qt,mm),Mf(((e,t)=>Math.min(e,t)))),Am=(Wf(zt,gm),Mf(((e,t)=>e*t))),ym=zf(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));function xm(e,t,n){const r=Rr(-1,n);return Am([],t,r,e,n)}Wf(Kt,Am,ym);const bm=Mf(((e,t)=>e!==t?1:0));function Im(e,t,n,r,a){const s=t.length,o=z(t),i=ie(t),u=ie(a),l=Z(n,z(a));for(let t=0;t<o;++t){const n=fe(t,s,i),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[he(a,s,u)]=e[t]}return l}function vm(e,t,n,r){const[a,s]=bu(e,r),o=oa(t,"int32"),i=pe(z(a),o),u=z(s);for(let e=0;e<i.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];i[e]=r}return{outVals:i,outShape:a,outDtype:o}}function Cm(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function wm(e,t,n,r,a,s,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const a=fe(r,t.length,ie(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(s,o,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:l,valueSlices:c,numValues:p}=function(e,t,n,r){const a=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let e=0;e<t.length-1;++e){u*=t[e];const n=t[e+1];for(let t=1;t<u+1;++t)i[e].push(t*n)}for(let r=0;r<e.length;++r){let o=e[r],u=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],a=e+t.length-1;if(a>=0){const e=i[a],t=e[e.length-1]-r[o];for(let e=o;e<u;++e)i[a].push(r[e+1]+t)}o=r[o],u=r[u]}u!==o&&(a.push([o,u]),s+=u-o)}return{outSplits:i,valueSlices:a,numValues:s}}(s,o,e,u),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=ee("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),h=function(e,t,n,r,a){const s=t.slice();s[0]=a;const o=ee(n,z(s)),i=e.length;return function(e,t,n,r,a,s){const o=Cm(t,2)[1],i=Cm(s,2)[1];let u=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)a[u*i+t]=e[n*o+t];++u}}(e,t,r,0===i?0:i/t[0],o,s),[o,s]}(n,r,a,c,p);return[d,h[0],h[1]]}Wf(qt,bm,null,"bool");const Em=2147483647;function Sm(e,t,n,r,a,s,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,u=0===a.length,l=0===o.length,c=[];i||c.push(t[0]),u||c.push(a[0]),l||c.push(o[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const p=0===c.length?1:c[0],d=ee("int32",p+1);d[0]=0;for(let t=0;t<p;++t){const n=i?e[0]:e[t],a=u?r[0]:r[t],o=l?s[0]:s[t];if(0===o)throw new Error("Requires delta != 0");let c;if(o>0&&a<n||o<0&&a>n)c=0;else if(c=Math.ceil(Math.abs((a-n)/o)),c>Em)throw new Error(`Requires ((limit - start) / delta) <= ${Em}`);d[t+1]=d[t]+c}const h=ee(n,d[p]);let f=0;for(let t=0;t<p;++t){const n=d[t+1]-d[t];let r=i?e[0]:e[t];const a=l?s[0]:s[t];for(let e=0;e<n;++e)h[f++]=r,r+=a}return[d,h]}var Tm=md;class km{constructor(e,t,n,r,a,s,o,i,u,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Ad(l),this.raggedRank=yd(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Tm.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Tm.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Tm.VALUE_ROWIDS:return km.getMaxWidthValueRowID(t);case Tm.ROW_SPLITS:return km.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Tm[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){const t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Rm(e,n)}calculateOutputSize(e){const t=this.valuesShape;xd(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=gd(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),a=[];let s=0;for(let e=0;e<r;++e,s+=t)a.push(s);for(let t=r;t<e;++t)a.push(-1);return G(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){const a=e.length,s=[];for(let o=0;o<a-1;++o){const a=e[o+1]-e[o];let i=Math.min(r,a),u=t[o];-1===u&&(i=0);for(let e=0;e<i;++e)s.push(u),u+=n;for(let e=0;e<a-i;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){const a=e.length,s=[];if(0===a)return[];let o=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let u=t[i];s.push(u);for(let l=1;l<a;++l){const a=e[l];if(a===i)u>=0&&(++o,o<r?u+=n:u=-1);else{if(o=0,i=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);u=t[a]}s.push(u)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case Tm.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case Tm.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${Tm[s]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Tm.FIRST_DIM_SIZE:return e[0];case Tm.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Tm.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Tm[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=Rm(t,!1),a=ee(this.valuesDType,z(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(0===n.length)return;const a=this.values,s=n;let o=r.slice();o=o.slice(e+1);const i=z(o),u=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;Fs((()=>{const t=wi(l,e),n=Ui(t,o);l=n.dataSync()}))}let c=0,p=0,d=0;for(let e=0;e<=u;++e){let r=e<u?t[e]:-1;if(r!==d){if(p<d){const e=a.subarray(c*i);Nm(s.subarray(p*i),e,(d-p)*i)}if(e>=u){const e=n.length;r=Math.floor(e/i)}if(r>d)if(1===this.defaultValue.length)s.subarray(d*i,r*i).fill(this.defaultValue[0]),d=r;else for(;r>d;)Nm(s.slice(d*i),l,i),++d;r<0?(c=e+1,p=d):(c=e,p=d,d=p+1)}else++d}}}function Nm(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Rm(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function $m(e,t,n,r,a,s,o,i,u,l){return new km(e,t,n,r,a,s,o,i,u,l).compute()}function _m(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return pe(0,r);const a=pe(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const Bm=Xf((e=>1/Math.sqrt(e)));function Dm(e,t,n,r,a,s,o,i,u,l){const c=[r/a,a],p=e.values,d=t.values;if(0===r)return Rs(n,t.dtype);const h=u instanceof Kr?u:Rs(c,t.dtype);"string"==typeof u||"number"==typeof u?h.values.fill(u):"boolean"==typeof u&&h.values.fill(+u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<o;t++){const n=p[e*o+t];s.push(n),u+=n*i[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?h.values[u*a+n]+=d[e*a+n]:h.values[u*a+n]=0===t.rank?d[0]:d[e*a+n]}return h}Zf(xn,Bm);const Fm=Xf((e=>1/(1+Math.exp(-e))));function Om(e,t,n,r,a){const s=Ho(r,t,n),o=z(n),i=ie(r);if(s){const n=jo(t,i);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const u=Rs(r,a,"string"===a?Ah(e):e),l=Rs(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?yh(l.values):l.values}function Lm(e,t,n,r,a,s,o){const i=t[0],u=s[0],l=new Array(u),c=new Array(i),p=t[1];if(0===u){if(0!==i)throw new Error(nh(i));return[ee(n,0),[0,p],ee(a,0),l,c]}let d=!0,h=0;const f=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*p];if(n<0)throw new Error(rh(t,n));if(n>=u)throw new Error(ah(t,n,u));++f[n],d=d&&n>=h,h=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){const t=e,n=r;for(let e=0;e<i;++e)c[e]=e;return[t,[i,p],n,l,c]}{const t=f[u-1],s=ee(n,t*p),d=ee(a,t),h=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*p],a=h[n],o=(0===n?0:f[n-1])+a;h[n]++;for(let n=0;n<p;++n)s[o*p+n]=e[t*p+n];d[o]=r[t],c[t]=o}for(let e=0;e<u;++e)if(0===h[e]){const t=0===e?0:f[e-1];s[t*p+0]=e;for(let e=1;e<p;++e)s[t*p+e]=0;d[t]=o}return[s,[t,p],d,l,c]}}function Mm(e,t,n,r,a){const s=z(r),o=t[0],i=a.length,u=[];let l=1,c=-1;for(let e=0;e<i;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(sh(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(oh(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(uh(r,u));u[c]=e}if(z(u)!==s)throw new Error(lh(r,u));const p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const h=[];if(i>0){h[i-1]=1;for(let e=i-2;e>=0;--e)h[e]=h[e+1]*u[e+1]}const f=ee(n,o*i);for(let t=0;t<o;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<i;++e)f[t*i+e]=Math.trunc(n/h[e]),n%=h[e]}return[f,[o,i],u]}function Pm(e,t,n,r,a,s=!1,o=0){const i=r.length,u=[t[0],e.length/t[0]],l=u[1],c=i>0?a[i-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=c;const d=ee(n,p.reduce(((e,t)=>e*t),1));if(0===i)return c>0&&d.fill(o),[d,p];if(c<=0)throw new Error("segment ids must be >= 0");let h=0,f=1,m=0,g=a[h];for(;;){let t=0;if(f<i){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(dh(g,c));g>m&&d.fill(o,m*l,g*l);for(let t=h;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(hh(t,r[t],u[0]));for(let t=0;t<l;t++)d[g*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)d[g*l+e]/=f-h;if(h=f,++f,m=g+1,g=t,f>i)break}return m<c&&d.fill(o,m*l,c*l),[d,p]}Jf(kn,(e=>1/(1+Math.exp(-e))));const Qm=Xf((e=>Math.sqrt(e))),Um=(Jf(Rn,(e=>Math.sqrt(e))),Xf(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})));function Gm(e,t,n,r){const a=Rs(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),o=new Array(s.length);for(let e=0;e<o.length;e++)o[e]=s[e]*n[e]+r[e];a.set(t.get(...o),...s)}return a}Zf(Qn,Um);class Vm{constructor(e,t,n,r,a,s){this.separator=Br(e),this.nGramWidths=t,this.leftPad=Br(n),this.rightPad=Br(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let o=0;o<a;++o){const i=this.getPadWidth(s),u=Math.max(0,i-o),l=Math.max(0,i-(a-(o+1))),c=s-(u+l),p=t+(u>0?0:o-i);let d=0;d+=u*this.leftPad.length;for(let t=0;t<c;++t)d+=e[p+t].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[r+o]=new Uint8Array(d);const h=n[r+o];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[p+t]),m(this.separator);if(c>0){m(e[p+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=ee("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const o=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,s);this.createNGrams(e,r,o,a,u,s),a+=u})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(e,r,o,a,u,i)}}return[o,s]}}function Wm(e,t,n,r,a,s,o,i){return new Vm(n,r,a,s,o,i).compute(e,t)}function zm(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function Hm(e,t,n){const r=e.length,a=[];let s=0,o=0;const i=new Array(r);for(let u=0;u<r;++u){const r=a.length;zm(e[u],t,n,a);const l=a.length-r;i[u]=l,s+=l,o=Math.max(o,l)}const u=ee("int32",2*s),l=new Array(s),c=[r,o];let p=0;for(let e=0;e<r;++e)for(let t=0;t<i[e];++t)u[2*p]=e,u[2*p+1]=t,l[p]=a[p],++p;return[u,l,c]}function jm(e,t){const n=ee("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Nr(e[r]).modulo(t).getLowBitsUnsigned();return n}const Km=Mf(((e,t)=>e-t)),qm=zf(((e,t,n,r)=>({real:e-n,imag:t-r})));function Ym(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Rs(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}Wf(zn,Km,qm);const Xm=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Jm(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,o=Math.log(a),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(a-i)/a)*Math.sign(s-a/2);Jm(e,t,Math.max(n,Math.floor(t-s*i/a+u)),Math.min(r,Math.floor(t+(a-s)*i/a+u)))}const a=e[t];let s=n,o=r;for(U(e,n,t),Xm(e[r],a)>0&&U(e,n,r);s<o;){for(U(e,s,o),s++,o--;Xm(e[s],a)<0;)s+=1;for(;Xm(e[o],a)>0;)o-=1}0===Xm(e[n],a)?U(e,n,o):(o+=1,U(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}function Zm(e,t,n,r,a){const s=t[t.length-1],[o,i]=[e.length/s,s],u=Z(n,o*r),l=Z("int32",o*r);for(let t=0;t<o;t++){const n=t*i,s=e.subarray(n,n+i);let o=new Array(s.length);s.forEach(((e,t)=>o[t]={value:e,index:t})),r<o.length&&(Jm(o,r),o=o.slice(0,r)),a&&o.sort(Xm);const c=t*r,p=u.subarray(c,c+r),d=l.subarray(c,c+r);for(let e=0;e<r;e++)p[e]=o[e].value,d[e]=o[e].index}const c=t.slice();return c[c.length-1]=r,[Rs(c,n,u),Rs(c,"int32",l)]}function eg(e,t,n,r){const a=X(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const o=new Map,i=new Int32Array(n[a]),u=new Kr(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}const r=o.get(n);if(null!=r)i[t]=r;else{const e=o.size;o.set(n,e),i[t]=e,l.push(t)}}const p=s.slice();p[1]=o.size;const d=new Kr(p,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(u.get(n,e,r),n,t,r)}));const h=n.slice();return h[a]=p[1],{outputValues:d.values,outputShape:h,indices:i}}const{addImpl:tg,bincountImpl:ng,bincountReduceImpl:rg,bitwiseAndImpl:ag,castImpl:sg,ceilImpl:og,concatImpl:ig,equalImpl:ug,expImpl:lg,expm1Impl:cg,floorImpl:pg,gatherNdImpl:dg,gatherV2Impl:hg,greaterImpl:fg,greaterEqualImpl:mg,lessImpl:gg,lessEqualImpl:Ag,linSpaceImpl:yg,logImpl:xg,maxImpl:bg,maximumImpl:Ig,minimumImpl:vg,multiplyImpl:Cg,negImpl:wg,notEqualImpl:Eg,prodImpl:Sg,raggedGatherImpl:Tg,raggedRangeImpl:kg,raggedTensorToTensorImpl:Ng,rangeImpl:Rg,rsqrtImpl:$g,scatterImpl:_g,sigmoidImpl:Bg,simpleAbsImpl:Dg,sliceImpl:Fg,sparseFillEmptyRowsImpl:Og,sparseReshapeImpl:Lg,sparseSegmentReductionImpl:Mg,sqrtImpl:Pg,staticRegexReplaceImpl:Qg,stridedSliceImpl:Ug,stringNGramsImpl:Gg,stringSplitImpl:Vg,stringToHashBucketFastImpl:Wg,subImpl:zg,tileImpl:Hg,topKImpl:jg,transposeImpl:Kg,uniqueImpl:qg}=i;function Yg(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Xg(e,t){return 1===t?[e]:Yg(e,t)}class Jg{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=If(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Xg("rc",this.rank),t=mf(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Zg{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=If(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):ef(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":nf(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class eA{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=nA(t,n),a=rA(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=tA(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let o;return r===wh.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===wh.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===wh.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===wh.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===wh.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=nA(n,r),s=rA(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const o=tA(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=xe().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[s],l=u&&u.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function tA(e,t,n,r,a){const s=function(e,t){switch(e){case wh.PACKED_2X2_FLOAT32:return Bf(t);case wh.PACKED_2X2_FLOAT16:return Df(t);case wh.UNPACKED_FLOAT32:return Rf(t);case wh.UNPACKED_FLOAT16:return $f(t);case wh.PACKED_4X1_UNSIGNED_BYTE:return _f(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(a){const[t,n]=Th(e[0],e[1]);o=t*n}else{const[t,n]=Eh(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return o*i}function nA(e,t){if(e===Ch.UPLOAD)return wh.PACKED_2X2_FLOAT32;if(e===Ch.RENDER||null==e)return function(e){return xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?wh.PACKED_2X2_FLOAT32:wh.UNPACKED_FLOAT32:e?wh.PACKED_2X2_FLOAT16:wh.UNPACKED_FLOAT16}(t);if(e===Ch.DOWNLOAD||e===Ch.PIXELS)return wh.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function rA(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class aA{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=If(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const sA="if (isnan(x)) return x;",oA="return x;",iA="return abs(x);",uA="return (x >= 0.0) ? x : (exp(x) - 1.0);",lA=sA+"\n  return (x < 0.0) ? 0.0 : x;\n",cA=sA+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",pA="return x;",dA="return 1.0 / (1.0 + exp(-1.0 * x));",hA="return x;",fA="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",mA="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",gA="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",AA="return 1.0 / (1.0 + exp(-1.0 * x));";class yA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=If(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class xA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=If(this.outputShape.length);const t=e.length,n=Xg("rc",t),r=mf(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const bA=Hc,IA={},vA=xe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class CA extends L{nextDataId(){return CA.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!xe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Ff)t=e;else{const n=Ih(xe().getNumber("WEBGL_VERSION"),e);t=new Ff(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Ih(xe().getNumber("WEBGL_VERSION"));t=new Ff(e),this.binaryCache=((n=xe().getNumber("WEBGL_VERSION"))in IA||(IA[n]={}),IA[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new eA(this.gpgpu),this.numMBBeforeWarning=null==xe().global.screen?1024:xe().global.screen.height*xe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new O(this,Ds())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[r,a]},i.texShape=[r,a];const u=Vh(t),l=new Tf(u,!1,s),c=this.runWebGLProgram(l,[o],n,[[r,a]]);return c.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),c.dataId}write(e,t,n){if((xe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||xe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Ch.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(xe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Ch.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:o,isPacked:i}=t;if(null!=s){let t;t=i?new yA(o,pA):new aA(o,pA);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=_r()),c="complex64"===r?Ld(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=_r()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:o,isPacked:i}=t;if(null!=a){let t;t=i?new yA(r,pA):new aA(r,pA);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(xe().getBool("DEBUG")&&!xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===xe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&xe().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...Sh(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=Ld(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=z(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;Nh(e,(()=>e.deleteBuffer(c)))}const p=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ds().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:o,isPacked:i,texture:u}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=i?new yA(a,pA):new aA(a,pA);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:o}],o),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Ds().makeTensorFromTensorInfo(l),p=this.texData.get(l.dataId);return Object.assign({tensorRef:c},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Dr(e)));return Rs(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Rs(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Rh(n)){if(xe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=z(t);if(xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...Sh(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=xe().getBool("WEBGL_PACK")&&!0===r,o=s?Vh(t):t,i=s?new Ef(o):new wf(o),u=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=Or(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=Or(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:_r(),endMs:null}}endTimer(e){return xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=_r(),e)}async getQueryTime(e){if(xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=vA){return xe().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&z(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){or("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return bA(e.shape,t)}packedUnaryOp(e,t,n){const r=new yA(e.shape,t),a=this.compileAndRun(r,[e],n);return Ds().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Dg(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(xe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,iA,e.dtype);const t=new aA(e.shape,iA),n=this.compileAndRun(t,[e]);return Ds().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&re(n[0])){const a=n.map((e=>Br(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Ds().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new xA(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Jg(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Uh(e.shape),...Gh(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Uh(t),...Gh(t)],s=new Zg(a,n),o=[n],i=this.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;null!=t&&G(z(a)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const o=Vh(a);let i;i=r?new Cf(o):new vf(o);const u=[null!=t?t:Sh(o)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===vh.DENSE){const t=null!=s?s:Sh(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===z(o.shape))return i.values=Z(o.dtype,0),o;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&z(t.shape)<=xe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!zh(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const c={shape:o.shape,texData:i,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:u}=gf(e.packedInputs,t.shape,s);let l="",c="",p="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=ie(i);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${i[0]>1}_${i[1]>1}`;const d=t.shape.length,h=2===i.length&&H(t.shape,s),f=1===z(t.shape),m=so(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&H(s,n.texData.texShape),A=e.packedInputs||i.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${d}_${g}_${o?u:""}_${i.length}_${f}_${m}_${h}_${l}_${c}_${p}_${A}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${xe().getNumber("WEBGL_VERSION")}`,s}(e,l,c),d=this.getAndSaveBinary(p,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=sf(a,o,t),u=function(e,t){const n=Qh(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Nh(e,(()=>e.shaderSource(n,t))),Nh(e,(()=>e.compileShader(n))),xe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Bh(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(u);return xe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o},xf(e,t,l)))}(this.gpgpu,e,l,c))),h=null!=this.activeTimers;let f;h&&(f=this.startTimer()),xe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(bf(t.inShapeInfos,n),bf([t.outShapeInfo],[r]));const s=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):e.setOutputMatrixTexture(s.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===xe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const a=n[r],{uniform:s,offset:o,shape:i,texShape:u}=t.variablesLocations[r];if(i){const{uniformShape:n}=gf(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,a.texData.texShape[0],a.texData.texShape[1]),null!=s)if(a.isUniform)if(z(a.shape)<2)e.gl.uniform1f(s,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=a.texData.slice&&null!=o&&e.gl.uniform1i(o,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,s,r)}const i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=ie(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],s=t.customUniformLocations[n],o=a[n];if("float"===r.type)e.gl.uniform1fv(s,o);else if("vec2"===r.type)e.gl.uniform2fv(s,o);else if("vec3"===r.type)e.gl.uniform3fv(s,o);else if("vec4"===r.type)e.gl.uniform4fv(s,o);else if("int"===r.type)e.gl.uniform1iv(s,o);else if("ivec2"===r.type)e.gl.uniform2iv(s,o);else if("ivec3"===r.type)e.gl.uniform3iv(s,o);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(s,o)}}e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=xe().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=_r();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!xe().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(xe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Fs((()=>{if(!xe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=xe().getBool("DEBUG");xe().set("DEBUG",!1);const t=this.abs(Ks(1e-8)).dataSync()[0];if(xe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:o,isPacked:i}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=_r());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=xe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=xe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&xe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Q(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=J(e);e=t.newShape}let a=z(e),s=null;e.length<=1&&a<=n?s=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const o=null!=s&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||o)if(t){const t=Uh(e);let n=2,r=2;e.length&&([n,r]=Gh(e)),a=t*(n/2)*(r/2),s=K(a).map((e=>2*e))}else s=K(a);return s}(n,i),t.texShape=c),null!=a){const e=Vh(n);let s,o=c[1],p=c[0];const d=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!i&&d||([o,p]=Th(c[0],c[1])),s=i?new kf(e,d):new Tf(e,d);const h=d?[p,o]:c,f=this.makeTensorInfo(h,r),m=this.texData.get(f.dataId);m.usage=d?Ch.PIXELS:Ch.UPLOAD,m.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,p,a);const g=[[p,o]],A=!0,y=this.runWebGLProgram(s,[f],r,g,A),x=this.texData.get(y.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,xe().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=_r()-l)}else{const e=this.acquireTexture(c,o,r,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*ne(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await new Promise((e=>dd((()=>e())))),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Bh(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=xf(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:a,width:s,channels:o}=e,i=Ds().backend;if(!i.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=i.writeTexture(r,t,n,a,s,o);return Ds().makeTensorFromDataId(u,t,n,i)}}CA.nextDataId=0,ba()&&Ps("webgl",(()=>new CA),2);const wA="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class EA{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=io(t,n),this.enableShapeUniforms=If(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const SA="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class TA{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=io(t,n);const a=this.outputShape.length;this.enableShapeUniforms=If(a);let s="";if(r)if(0===a||1===z(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${mf(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Xg("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function kA(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const NA={kernelName:Et,backendName:"webgl",kernelFunc:kA};function RA(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=kA({inputs:{x:r},backend:n}),u=kA({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:u},s}const $A={kernelName:ze,backendName:"webgl",kernelFunc:RA},_A="return (a < 0.) ? b * a : a;",BA="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",DA={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,o=n.makeTensorInfo([],"float32",Rr(s,"float32")),i=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TA(BA,a.shape,o.shape):new EA(_A,a.shape,o.shape),u=n.runWebGLProgram(i,[a,o],"float32");return n.disposeIntermediateTensorInfo(o),u}},FA="return (a < 0.) ? b * a : a;",OA="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",LA={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TA(OA,r.shape,a.shape):new EA(FA,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},MA="if (isnan(x)) return x;";function PA({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:o}=a,i=s,u=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const e=i.texData.get(o.dataId),t=n(e.values,u);return i.makeTensorInfo(o.shape,u,t)}let l;return l=xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new yA(o.shape,t):new aA(o.shape,e),i.runWebGLProgram(l,[o],u)}}function QA({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:o,backend:i})=>{const{a:u,b:l}=o,c=i;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},o=new EA(e,u.shape,l.shape);return c.runWebGLProgram(o,[a,s],oa(n.dtype,r.dtype))})),s=RA({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const p=s||oa(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Ah(e):e,r="string"===u.dtype?Ah(t):t,[s,o]=a(u.shape,l.shape,n,r,p),i=c.makeTensorInfo(o,p);return c.texData.get(i.dataId).values=s,i}let d;return d=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new TA(t,u.shape,l.shape,n):new EA(e,u.shape,l.shape),c.runWebGLProgram(d,[u,l],p)}}function UA(e,t=!1){if("linear"===e)return t?hA:oA;if("relu"===e)return t?mA:lA;if("elu"===e)return t?fA:uA;if("relu6"===e)return t?gA:cA;if("prelu"===e)return t?OA:FA;if("leakyrelu"===e)return t?BA:_A;if("sigmoid"===e)return t?AA:dA;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class GA{constructor(e,t,n,r=!1,a=!1,s=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=If(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),p=r?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const A=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${A}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const VA={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class WA{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=io(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const zA="return a * b;";function HA(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=oa(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new WA(VA.REAL,r.shape,a.shape),o=new WA(VA.IMAG,r.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),c=RA({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[o,i]=Cg(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(i,s);return n.texData.get(u.dataId).values=o,u}let o;return o=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TA(zA,r.shape,a.shape):new EA(zA,r.shape,a.shape),n.runWebGLProgram(o,[r,a],s)}const jA={kernelName:Kt,backendName:"webgl",kernelFunc:HA};function KA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,o=n,i=z(a.shape),u=function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}(s,i),l=z(u);G(i===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`));const c=o.texData.get(a.dataId);return!c.isPacked||zh(a.shape,u)||null!==c.texture&&zh(c.shape,u)?(o.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[Uh(e.shape),...Gh(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Uh(t),...Gh(t)],o=new Zg(s,r),i=[r],u=n.runWebGLProgram(o,[a],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,o)}const qA={kernelName:hn,backendName:"webgl",kernelFunc:KA};class YA{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const o=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${j(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class XA{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(o="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(o="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${u});\n      }\n    `}}function JA(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Id(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let o=0;o<a.length;o++){const{inSize:i,windowSize:u,outSize:l}=a[o];let c,p;c="mean"===n?0===o?new YA({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new YA({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new XA({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),p=s,s=r.runWebGLProgram(c,[s],t),p.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(p)}return s}class ZA{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=mf(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class ey{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=mf(this.rank),a=Yg("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function ty(e,t,n){const r=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ey(e.shape,t):new ZA(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function ny(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;return function(e,t,n,r){const a=t,s=e.shape.length,o=X(a,e.shape);let i=o;const u=Cu(i,s),l=null!=u;let c=e;l&&(c=ty(e,u,r),i=Eu(i.length,s)),vu("sum",i,s);const[p,d]=bu(c.shape,i);let h=p;n&&(h=Iu(p,o));const f=z(d),m=KA({inputs:{x:c},attrs:{shape:[z(e.shape)/f,f]},backend:r}),g=JA(m,ia(e.dtype),"sum",r),A=KA({inputs:{x:g},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),A}(a,s,o,n)}const ry={kernelName:"Sum",backendName:"webgl",kernelFunc:ny};function ay(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=Kg(e,a.shape,a.dtype,s,u);l=o.makeTensorInfo(u,a.dtype),o.texData.get(l.dataId).values=t}else l=ty(a,s,o);return l}const sy={kernelName:Yn,backendName:"webgl",kernelFunc:ay},oy=1e3;function iy({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],d=r?t.shape[c-1]:t.shape[c-2],h=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),A=z(m),y=z(g),x=io(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);G(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=n?[A,p,h]:[A,h,p],I=r?[y,f,d]:[y,d,f],v=KA({inputs:{x:e},backend:a,attrs:{shape:b}}),C=KA({inputs:{x:t},backend:a,attrs:{shape:I}}),w=[v,C],E=Math.max(A,y),S=n?v.shape[1]:v.shape[2],T=null!=s,k=null!=o,N="leakyrelu"===u,R=null!=u?UA(u,!0):null;let $;if((1===h||1===f)&&S>oy&&!1===(T||k||N||null!=R)){let e=v,t=C;n&&(e=ay({inputs:{x:v},backend:a,attrs:{perm:[0,2,1]}}),w.push(e)),r&&(t=ay({inputs:{x:C},backend:a,attrs:{perm:[0,2,1]}}),w.push(t));const s=1===f;let o=e;1!==f&&(o=KA({inputs:{x:e},backend:a,attrs:{shape:[E,S,1]}}),w.push(o));const i=1===f?2:1;let u=t;s&&(u=KA({inputs:{x:t},backend:a,attrs:{shape:[E,1,S]}}),w.push(u));const l=HA({inputs:{a:o,b:u},backend:a});$=ny({inputs:{x:l},backend:a,attrs:{axis:i,keepDims:!0}}),w.push(l)}else{const u=oa(e.dtype,t.dtype),l=new GA(b,I,[E,h,f],n,r,T,R,k,N),c=[v,C];if(null!=s&&c.push(s),k&&c.push(o),N){const e=a.makeTensorInfo([],"float32",Rr(i,"float32"));c.push(e),w.push(e)}$=a.runWebGLProgram(l,c,u)}const _=KA({inputs:{x:$},backend:a,attrs:{shape:x}});w.push($);for(const e of w)a.disposeIntermediateTensorInfo(e);return _}const uy={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=r;return iy({a,b:s,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}},ly="return abs(x);",cy={kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Dg(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yA(r.shape,ly):new aA(r.shape,ly),n.runWebGLProgram(a,[r],r.dtype)}},py=PA({opSnippet:sA+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),dy={kernelName:we,backendName:"webgl",kernelFunc:py},hy=PA({opSnippet:sA+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),fy={kernelName:Ee,backendName:"webgl",kernelFunc:hy},my="return a + b;",gy=QA({opSnippet:my,packedOpSnippet:my,supportsComplex:!0,cpuKernelImpl:tg}),Ay={kernelName:Se,backendName:"webgl",kernelFunc:gy};class yy{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class xy{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const by={kernelName:Te,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return kA({inputs:{x:a[0]},backend:r});if(a.length>xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>oa(e,t))),o=a.map((e=>e.shape)),i=xe().getBool("WEBGL_PACK")?new xy(a[0].shape,o):new yy(a[0].shape,o);return r.runWebGLProgram(i,a,s)}},Iy={kernelName:"All",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,i=a.shape.length,u=X(s,a.shape);let l=u;const c=Cu(l,i);let p=a;null!=c&&(p=ay({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Eu(l.length,i)),vu("all",l,i);const[d,h]=bu(p.shape,l),f=KA({inputs:{x:p},backend:n,attrs:{shape:[-1,z(h)]}}),m=JA(f,f.dtype,"all",n);let g;return g=KA(o?{inputs:{x:m},backend:n,attrs:{shape:Iu(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}},vy={kernelName:"Any",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,i=a.shape.length,u=X(s,a.shape);let l=u;const c=Cu(l,i);let p=a;null!=c&&(p=ay({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Eu(l.length,i)),vu("any",l,i);const[d,h]=bu(p.shape,l),f=KA({inputs:{x:p},backend:n,attrs:{shape:[-1,z(h)]}}),m=JA(f,f.dtype,"any",n);let g;return g=KA(o?{inputs:{x:m},backend:n,attrs:{shape:Iu(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}};class Cy{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class wy{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,G(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=mf(i),l=Xg("coords",i);let c,p;if(1===s){p=i+1;const e=mf(p);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[i-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[i-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[i-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[i-2]};`}else p=i,c=`\n        ${u} sourceLocR = coords;\n        ++${l[i-1]};\n        ${u} sourceLocG = coords;\n        ++${l[i-2]};\n        ${u} sourceLocA = coords;\n        --${l[i-1]};\n        ${u} sourceLocB = coords;\n        --${l[i-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map((e=>"int "+e)),m=Xg("sourceLocR",p-1).concat("inIdx.r"),g=Xg("sourceLocG",p-1).concat("inIdx.g"),A=Xg("sourceLocB",p-1).concat("inIdx.b"),y=Xg("sourceLocA",p-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",b=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${A.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,I=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${A.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,v=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${v}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${l[i-2]} < ${o[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${I};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${I};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Ey(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const o=Id(s),i={windowSize:o,inSize:s,batchSize:a,outSize:Math.ceil(s/o)},u=new Cy(i,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const p=Ey(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function Sy(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=Id(a[a.length-1]),o=new wy(a,s,n,null==r),i=null==r?[t]:[t,r],u=e.runWebGLProgram(o,i,"int32");if(u.shape.length===t.shape.length){const r=Sy(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function Ty(e,t,n,r){const a=[n];if(vu("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!xe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,u]=bu(o.shape,a),l=z(u),c=KA({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(c);const p=Ey(e,c,r);n.push(p);const d=KA({inputs:{x:p},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return Sy(e,t,r)}const ky={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=X(s,a.shape);const i=Cu(o,a.shape.length);let u=a;const l=[];null!=i&&(u=ay({inputs:{x:a},backend:n,attrs:{perm:i}}),l.push(u),o=Eu(o.length,u.shape.length)),vu("argMax",[o[0]],u.shape.length);const c=Ty(n,u,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},Ny={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=X(s,a.shape);const i=Cu(o,a.shape.length);let u=a;const l=[];null!=i&&(u=ay({inputs:{x:a},backend:n,attrs:{perm:i}}),l.push(u),o=Eu(o.length,u.shape.length)),vu("argMin",[o[0]],u.shape.length);const c=Ty(n,u,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},Ry=PA({opSnippet:sA+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),$y={kernelName:Re,backendName:"webgl",kernelFunc:Ry},_y=PA({opSnippet:sA+"return log(x + sqrt(x * x + 1.0));"}),By={kernelName:$e,backendName:"webgl",kernelFunc:_y},Dy=PA({opSnippet:sA+"\n  return atan(x);\n"}),Fy={kernelName:_e,backendName:"webgl",kernelFunc:Dy},Oy=QA({opSnippet:wA+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+SA+"\n  return result;\n"}),Ly={kernelName:De,backendName:"webgl",kernelFunc:Oy},My=PA({opSnippet:sA+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Py={kernelName:Be,backendName:"webgl",kernelFunc:My};class Qy{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let A="0.0";if(f||(A="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${d}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const x=4*Math.floor(s/4),b=s%4,I=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${d}, ${h});\n      const float initializationValue = ${A};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${A});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${I}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${I}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${I}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${I}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Uy{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,A=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${A});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const I=4*Math.floor(s/4),v=s%4,C=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${A});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${I}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${C}\n            }\n\n            int xC = xCCorner + ${I};\n            if (${1===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${2===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${3===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${C}\n            }\n          }\n        }\n        setOutput(${b});\n      }\n    `}}const Gy={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Xh(a,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=r;G(bi(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=ci(a.shape,s,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&H(l.inShape,l.outShape))return kA({inputs:{x:a},backend:n});const c=new Qy(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},Vy={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r,c=pi(a.shape,s,o,[1,1,1],i,u,l),p=new Uy(c,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class Wy{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zy{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Hy={kernelName:"AvgPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,p=pi(o.shape,i,u,[1,1,1],l,c),d=new zy(p);return n.runWebGLProgram(d,[a],o.dtype)}},jy={kernelName:"AvgPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s;Xh([a,s],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=ci(o.shape,i,u,1,l),p=new Wy(c);return n.runWebGLProgram(p,[a],o.dtype)}},Ky={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:o,transposeB:i}=r;return iy({a,b:s,transposeA:o,transposeB:i,backend:n})}};class qy{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],io(e,t),io(e,n);let o="0.0";null!=r&&(io(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=a&&(io(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Yy{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],io(e,t),io(e,n);let o="vec4(0.0)";null!=r&&(io(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=a&&(io(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Xy={kernelName:bt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:o,scale:i}=e;G(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),G(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),G(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=o&&(c=o.shape,l.push(o));let p=null;null!=i&&(p=i.shape,l.push(i));const d=xe().getBool("WEBGL_PACK_NORMALIZATION")?new Yy(r.shape,a.shape,s.shape,c,p,u):new qy(r.shape,a.shape,s.shape,c,p,u);return t.runWebGLProgram(d,l,l[0].dtype)}};class Jy{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=mf(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Zy.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Zy[t]} = start[${t}] + coords.${Zy[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Zy=["x","y","z","w","u","v"];class ex{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=mf(this.rank),n=Xg("coords",this.rank),r=Xg("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function tx(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:o}=r,[i,u]=Ko(a,s,o);if(Do(a,i,u),0===z(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Fg(e.values,i,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=Ho(a.shape,i,u);if(l||!c){const e=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ex(u):new Jy(u),t=[i];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),o=r.texData.get(s.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=jo(t,ie(e.shape));a.slice&&(i+=a.slice.flatOffset),o.slice={flatOffset:i,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),s}(a,i,u,n)}const nx={kernelName:En,backendName:"webgl",kernelFunc:tx},rx={kernelName:Me,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:o}=r;G(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),u=Cd(a.shape,s,i),l=wd(u.length,s.length),c=Ed(a.shape,s,i),p=Sd(o,s.length),d=Td(c,o,s.length),h=[],f=KA({inputs:{x:a},backend:n,attrs:{shape:u}}),m=ay({inputs:{x:f},backend:n,attrs:{perm:l}}),g=KA({inputs:{x:m},backend:n,attrs:{shape:c}}),A=tx({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}},ax={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),u=n.readSync(s.dataId),l=ng(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}},sx={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=xe().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||1===o){const e=n.texData.get(r.dataId).values,t=n.texData.get(a.dataId).values,[s,o]=ag(r.shape,a.shape,e,t,r.dtype),i=n.makeTensorInfo(o,r.dtype);return n.texData.get(i.dataId).values=s,i}let i;return i=s?new TA("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,a.shape,!1):new EA("\n  return float(int(a.r) & int(b.r));\n",r.shape,a.shape),n.runWebGLProgram(i,[r,a],r.dtype)}},ox={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),o=n.readSync(a.dataId),i=io(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},ix=QA({opSnippet:"return float(a != b);",cpuKernelImpl:Eg,dtype:"bool"}),ux={kernelName:qt,backendName:"webgl",kernelFunc:ix};function lx(e){const{inputs:t,backend:n}=e,{input:r}=t;return kA({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const cx={kernelName:cn,backendName:"webgl",kernelFunc:lx},px={kernelName:Ge,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return kA({inputs:{x:s},backend:r});const t=fl(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=RA({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=lx({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!te(s.dtype,o)){const e=kA({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(r.shouldExecuteOnCPU([s])){const e=r.texData.get(s.dataId).values,[t,n,a]=sg(e,s.shape,s.dtype,o);return r.makeTensorInfo(t,n,a)}if("int32"===o)return function(e,t){const n=new aA(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",Z("bool",1)),t=ix({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}},dx="return ceil(x);",hx=PA({opSnippet:dx,packedOpSnippet:dx,cpuKernelImpl:og}),fx={kernelName:Ve,backendName:"webgl",kernelFunc:hx};class mx{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class gx{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Ax={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:o}=r;let i;i=xe().getBool("WEBGL_PACK_CLIP")?new gx(a.shape):new mx(a.shape);const u=[[s],[o]];return n.runWebGLProgram(i,[a],a.dtype,u)}};class yx{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function xx(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const bx={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new yx(r.shape),o=[xx(r,a.complexTensorInfos.real),xx(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class Ix{constructor(e){this.outputShape=[],this.outputShape=fd(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class vx{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=fd(e,t);const n=this.outputShape,r=n.length,a=mf(r),s=Xg("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const i=new Array(e.length-1);i[0]=e[0][t];for(let n=1;n<i.length;n++)i[n]=i[n-1]+e[n][t];const u=o[t],l=o.slice(-2),c=o.join();let p=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<i.length;e++){const t=i[e-1];p+=`\n        if (${u} < ${i[e]}  && ${u} >= ${i[e-1]}) {\n          return getChannel(\n            getT${e}(${Cx(o,u,t)}),\n            vec2(${Cx(l,u,t)}));\n        }`}const d=i.length,h=i[i.length-1];p+=`\n        return getChannel(\n          getT${d}(${Cx(o,u,h)}),\n          vec2(${Cx(l,u,h)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function Cx(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function wx(e){const{inputs:t,backend:n}=e,{input:r}=t;return kA({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Ex={kernelName:Tt,backendName:"webgl",kernelFunc:wx};function Sx(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>lx({inputs:{input:e},backend:n}))),a=e.map((e=>wx({inputs:{input:e},backend:n}))),s=Sx(r,t,n),o=Sx(a,t,n),i=RA({inputs:{real:s,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=z(e.shape.slice(t));return KA({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=fd(a.map((e=>e.shape)),1),i=1===a[0].shape[0],u=ig(s,o,r,i),l=fd(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const s=e.filter((e=>z(e.shape)>0)),o=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=o?new aA(e[0].shape,pA):new yA(e[0].shape,pA);return n.runWebGLProgram(t,e,r)}const i=xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){const e=[];for(let r=0;r<s.length;r+=i){const a=s.slice(r,r+i);e.push(Sx(a,t,n))}const r=Sx(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new vx(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,r)}const{tensors2D:u,outShape:l}=function(e,t,n){const r=fd(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>KA({inputs:{x:e},attrs:{shape:[-1,z(e.shape.slice(t))]},backend:n}))),outShape:r}}(s,t,n),c=new Ix(u.map((e=>e.shape))),p=n.runWebGLProgram(c,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=KA({inputs:{x:p},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(p),d}function Tx(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=X(a,t[0].shape)[0],o=t.map((e=>e.shape));hd(o,s);const i=fd(t.map((e=>e.shape)),s);if(0===z(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>z(e.shape)>0));return 1===u.length?kA({inputs:{x:u[0]},backend:n}):Sx(u,s,n)}const kx={kernelName:je,backendName:"webgl",kernelFunc:Tx};class Nx{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,A=m?2:3,y=m?3:1;let x="",b="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${A}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${I}\n        ${b}\n        setOutput(result);\n      }\n    `}}class Rx{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $x{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=If(this.outputShape.length);const s=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l;let p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<l;e++)p+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;p+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<l;e++)p+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(p+=`\n           xC = xCCorner + ${n*i};\n           `,1===o){if(n<l&&(s%2==1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,p+=1===i&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<l)){const e=s%2==0?Q(i):i;i%2==0&&s%2==1||i%2!=0&&s%2!=1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,p+=i>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):p+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<l&&(s%2==1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<l&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<l&&(p+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<l&&(p+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<l&&(p+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let d="",h="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,h="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${h}\n         setOutput(result);\n       }\n     `}}class _x{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=If(this.outputShape.length);const{dataFormat:n}=t,r=Zh(),a="channelsLast"===n,s=a?1:2,o=a?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function Bx(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Dx({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:i=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,p=u[0]*u[1]*u[2],d=n.outChannels,h="channelsLast"===n.dataFormat;let f;const m=[];if(null!=s){const e=Bx(s.shape,h);null!=e&&(s=KA({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if(null!=a){const e=Bx(a.shape,h);null!=e&&(a=KA({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if((1!==p&&1!==d||!(c>oy))&&l.isPacked&&h&&null!=l.texture&&u[2]%2!=0&&H(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),p={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,G(zh(l.shape,p.shape),(()=>`packed reshape ${l.shape} to ${p.shape} isn't free`));const h=KA({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(h);const g=iy({a:p,b:h,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:i,preluActivationWeights:s,leakyreluAlpha:o}),A=r.texData.get(g.dataId);G(A.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=d,A.shape=n.outShape,f=kA({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const u=n.outHeight*n.outWidth,l=KA({inputs:{x:e},backend:r,attrs:{shape:h?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),c=KA({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=iy({a:h?l:c,b:h?c:l,transposeA:!h,transposeB:!1,backend:r,bias:a,activation:i,preluActivationWeights:s,leakyreluAlpha:o});f=KA({inputs:{x:p},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(p)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function Fx({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:p,outHeight:d,dataFormat:h}=n,f="channelsLast"===h,m=u*l*c,g=d*p,A=[n.batchSize,m,g],y=[];if(null!=s){const e=Bx(s.shape,f);null!=e&&(s=KA({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(null!=a){const e=Bx(a.shape,f);null!=e&&(a=KA({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}const x=KA({inputs:{x:t},backend:r,attrs:{shape:[1,m,z(t.shape)/m]}});y.push(x);const b=new _x(A,n),I=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],v=r.runWebGLProgram(b,[e],"float32",I),C=KA({inputs:{x:v},backend:r,attrs:{shape:A}});y.push(v),y.push(C);const w=null!=a,E=null!=s,S="leakyrelu"===i,T=i?UA(i,!0):null,k=new GA(f?C.shape:x.shape,f?x.shape:C.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,w,T,E,S),N=f?[C,x]:[x,C];if(a&&N.push(a),E&&N.push(s),S){const e=r.makeTensorInfo([],"float32",Rr(o,"float32"));N.push(e),y.push(e)}const R=r.runWebGLProgram(k,N,"float32"),$=KA({inputs:{x:R},backend:r,attrs:{shape:n.outShape}});y.push(R);for(const e of y)r.disposeIntermediateTensorInfo(e);return $}const Ox={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,p=vi(u),d=di(a.shape,s.shape,o,l,i,c,!1,p);let h;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===p&&xe().getBool("WEBGL_EXP_CONV")){const e=new $x(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];h=n.runWebGLProgram(e,[a,s],"float32",t)}else if(xe().getBool("WEBGL_CONV_IM2COL"))h=Fx({x:a,filter:s,convInfo:d,backend:n});else{const e=new Nx(d);h=n.runWebGLProgram(e,[a,s],"float32")}else h=Dx({x:a,filter:s,convInfo:d,backend:n});const f=KA({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}};class Lx{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Mx{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Px{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Qx{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ux={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,p=vi(u),d=di(a.shape,c,o,1,i,l,!1,p),h=new Lx(d);return n.runWebGLProgram(h,[a,s],"float32")}};class Gx{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=If(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const Vx={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,p=vi(l),d=di(o,s.shape,i,1,u,c,!1,p);if(xe().getBool("WEBGL_PACK")&&"channelsLast"===p){const e=[[d.strideHeight,d.strideWidth]],t=new Gx(d);return n.runWebGLProgram(t,[a,s],"float32",e)}{const e=new Mx(d);return n.runWebGLProgram(e,[a,s],"float32")}}},Wx={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:i,dilations:u}=r,l=hi(a.shape,s.shape,o,u,i),c=new Rx(l);return n.runWebGLProgram(c,[a,s],"float32")}},zx={kernelName:"Conv3DBackpropFilterV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:i,filterShape:u}=r,l=hi(a.shape,u,o,1,i),c=new Px(l);return n.runWebGLProgram(c,[a,s],"float32")}},Hx={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:o,strides:i,inputShape:u}=r,l=hi(u,s.shape,i,1,o),c=new Qx(l);return n.runWebGLProgram(c,[a,s],"float32")}},jx={kernelName:"Cos",backendName:"webgl",kernelFunc:PA({opSnippet:MA+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${SA}\n  return result;\n`})},Kx=PA({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),qx={kernelName:Ze,backendName:"webgl",kernelFunc:Kx};class Yx{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[l]=t,[c,p]=n;this.outputShape=[l,c,p,u];const d="bilinear"===r?1:0,[h,f]=[o-1+".0",i-1+".0"],[m,g,A]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,x,b]=p>1?[""+(i-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${A};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Xx={kernelName:nt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new Yx(a.shape,s.shape,i,u,l);return n.runWebGLProgram(c,[a,s,o],"float32")}};var Jx;!function(e){e.Prod="*",e.Sum="+"}(Jx||(Jx={}));class Zx{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,s=this.op===Jx.Prod?"1.0":"0.0",o=n?s:`getX(${eb(a,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(i-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${i}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${mf(a)} coords = getOutputCoords();\n        int end = ${tb(a,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${tb(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${eb(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function eb(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function tb(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function nb(e,t,n,r,a,s){const o=t.shape.length,i=Cu([r],o);let u=t;null!=i&&(u=ay({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=Eu(1,o)[0];if(l!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=u.shape[l];let p=kA({inputs:{x:u},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new Zx(e,u.shape,!1,s),a=[[t]],o=p;p=n.runWebGLProgram(r,[p],p.dtype,a),n.disposeIntermediateTensorInfo(o)}if(a){const t=new Zx(e,u.shape,a,s),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=i){const e=ay({inputs:{x:p},backend:n,attrs:{perm:wu(i)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),e}return p}const rb={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:i}=r;return nb(Jx.Prod,a,n,s,o,i)}},ab={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:i}=r;return nb(Jx.Sum,a,n,s,o,i)}},sb={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=ng(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=rg(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class ob{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const ib={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r,i=a.shape[0],u=("NHWC"===o?a.shape[1]:a.shape[2])*s,l=("NHWC"===o?a.shape[2]:a.shape[3])*s,c=("NHWC"===o?a.shape[3]:a.shape[1])/(s*s),p=new ob("NHWC"===o?[i,u,l,c]:[i,c,u,l],s,o);return n.runWebGLProgram(p,[a],a.dtype)}};class ub{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=If(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class lb{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=If(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,p=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(p+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*u};\n          `,1===i){if(t<c&&(o%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=o%2==0?Q(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(o%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let h="",f="";n&&(h=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const cb={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),G(bi(o,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const p=di(a.shape,s.shape,o,c,i,l,!0);let d;d=xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new lb(p):new ub(p);const h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[a,s],"float32",h)}};class pb{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class db{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const hb={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,p=di(a.shape,c,o,i,u,l,!0),d=new pb(p);return n.runWebGLProgram(d,[a,s],"float32")}},fb={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,p=di(c,s.shape,o,i,u,l,!0),d=new db(p);return n.runWebGLProgram(d,[a,s],"float32")}};class mb{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const gb={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=z(r.shape),o=KA({inputs:{x:r},backend:n,attrs:{shape:[s]}}),i=new mb(s),u=n.runWebGLProgram(i,[o],o.dtype),l=KA({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};class Ab{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const yb={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:i,dilations:u}=r,l=li(a.shape,s.shape,o,i,"NHWC",u);let c;const p=new Ab(l);c=n.runWebGLProgram(p,[a,s],"float32");const d=KA({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}},xb={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:o,summedDims:i,idDims:u}=qd(a,s.length);Xd(o.length,u,s);const{path:l,steps:c}=Jd(i,u),p=c.length;let d=null,h=o.length;const f=[];for(let e=0;e<p;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Yd(h,u[t]);let a;Zd(e)?a=s[t]:(a=ay({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const o=a.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);H(a.shape,o)||(a=KA({inputs:{x:a},backend:n,attrs:{shape:o}}),f.push(a)),null===d?d=a:(d=HA({inputs:{a,b:d},backend:n}),f.push(d))}e<p-1&&(l[e]>=0&&(d=ny({inputs:{x:d},backend:n,attrs:{axis:l[e]-(o.length-h),keepDims:!1}}),f.push(d)),h--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},bb={kernelName:"Elu",backendName:"webgl",kernelFunc:PA({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"})},Ib={kernelName:"EluGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TA("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new EA("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},vb=QA({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:ug}),Cb={kernelName:dt,backendName:"webgl",kernelFunc:vb},wb={kernelName:"Erf",backendName:"webgl",kernelFunc:PA({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${$d};\n  float a1 = ${_d};\n  float a2 = ${Bd};\n  float a3 = ${Dd};\n  float a4 = ${Fd};\n  float a5 = ${Od};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`})},Eb=PA({opSnippet:MA+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:lg,dtype:"float32"}),Sb={kernelName:ht,backendName:"webgl",kernelFunc:Eb};function Tb(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,o=s.shape.length,i=s.shape.slice();let u=a;return a<0&&(G(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+a+1),i.splice(u,0,1),KA({inputs:{x:s},backend:r,attrs:{shape:i}})}const kb={kernelName:ft,backendName:"webgl",kernelFunc:Tb},Nb="return exp(x) - 1.0;",Rb=PA({opSnippet:Nb,packedOpSnippet:Nb,cpuKernelImpl:cg}),$b={kernelName:mt,backendName:"webgl",kernelFunc:Rb};class _b{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Bb(e,t,n){const r=n.texData.get(e.dataId),a=z(e.shape),s=e.shape[e.shape.length-1],o=KA({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),i=o.shape,u=new _b("real",i,t),l=new _b("imag",i,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],p=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),h=RA({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const f=KA({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(h),f}const Db={kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Bb(r,!1,n)}};class Fb{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Ob(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||ae(a),"string"===s){const e=ee(s,z(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new Fb(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const Lb={kernelName:gt,backendName:"webgl",kernelFunc:Ob};class Mb{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Pb={kernelName:At,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Mb(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Qb="return floor(x);",Ub=PA({opSnippet:Qb,packedOpSnippet:Qb,cpuKernelImpl:pg}),Gb={kernelName:yt,backendName:"webgl",kernelFunc:Ub},Vb=QA({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Wb={kernelName:xt,backendName:"webgl",kernelFunc:Vb};class zb{constructor(e){this.variableNames=["A"];const t=Zh(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Hb{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Zh(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const jb={kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],p=[l,u,s];if(i||o){const e=xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Kb&&e===qb||(qb=e,Kb=document.createElement("canvas").getContext("2d",{willReadFrequently:qb})),Kb.canvas.width=u,Kb.canvas.height=l,Kb.drawImage(a,0,0,u,l),a=Kb.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=Ch.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),a);const h=xe().getBool("WEBGL_PACK")?new Hb(p):new zb(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}};let Kb,qb=xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Yb={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=r,m=vi(c),g=di(a.shape,s.shape,u,p,l,d,!1,m);let A;const y=[],x=null!=o,b=null!=i,I="leakyrelu"===h,v=()=>{const e=[a,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=KA({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(x&&e.push(t(o,c)),b&&e.push(t(i,c)),I){const t=n.makeTensorInfo([],"float32",Rr(f,"float32"));e.push(t),y.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&xe().getBool("WEBGL_EXP_CONV")){const e=h?UA(h,!0):null,t=new $x(g,x,e,b,I),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],a=v();A=n.runWebGLProgram(t,a,"float32",r)}else if(xe().getBool("WEBGL_CONV_IM2COL"))A=Fx({x:a,filter:s,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{const e=h?UA(h,!1):null,t=new Nx(g,x,e,b,I),r=v();A=n.runWebGLProgram(t,r,"float32")}else A=Dx({x:a,filter:s,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});const C=KA({inputs:{x:A},backend:n,attrs:{shape:g.outShape}});return y.push(A),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}},Xb={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=r,f=[];let m=c;null==m&&(m=[1,1]),G(bi(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=di(a.shape,s.shape,u,m,l,p,!0),A=xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,y=d?UA(d,A):null,x=[a,s],b=null!=o,I=null!=i,v="leakyrelu"===d;if(b&&x.push(o),I&&x.push(i),v){const e=n.makeTensorInfo([],"float32",Rr(h,"float32"));x.push(e),f.push(e)}let C;C=A?new lb(g,b,y,I,v):new ub(g,b,y,I,v);const w=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=n.runWebGLProgram(C,x,"float32",w);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),E}};class Jb{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=mf(n.length);let s="\n    int index;";for(let e=0;e<this.sliceDim;e++)s+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const Zb={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,o=s[s.length-1],i=z(r.shape),[u,l,c,p]=kd(r,a),d=KA({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),h=KA({inputs:{x:r},backend:n,attrs:{shape:[z(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=dg(e,t,r.dtype,l,o,c,p,r.shape,i);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new Jb(o,p,[l,c],r.shape),m=n.runWebGLProgram(f,[h,d],h.dtype),g=KA({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};class eI{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=mf(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function tI(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:o,batchDims:i}=r,u=X(o,a.shape)[0];if(xe().get("DEBUG")){const e=n.readSync(s.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];G(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=gh(a,s,u,i),c=z(s.shape),p=[],d=KA({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=KA({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});p.push(d),p.push(h);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(h),t=n.bufferSync(d),r=hg(t,e,f);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new eI(d.shape,f),g=n.runWebGLProgram(m,[d,h],d.dtype);p.push(g);const A=KA({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}const nI={kernelName:It,backendName:"webgl",kernelFunc:tI},rI=QA({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:fg,dtype:"bool"}),aI={kernelName:Ct,backendName:"webgl",kernelFunc:rI},sI=QA({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:mg}),oI={kernelName:wt,backendName:"webgl",kernelFunc:sI},iI={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Bb(r,!0,n)}},uI=PA({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),lI={kernelName:kt,backendName:"webgl",kernelFunc:uI},cI=PA({opSnippet:"return float(isinf(x));",dtype:"bool"}),pI={kernelName:Nt,backendName:"webgl",kernelFunc:cI},dI=PA({opSnippet:"return float(isnan(x));",dtype:"bool"}),hI={kernelName:Rt,backendName:"webgl",kernelFunc:dI},fI=QA({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:gg,dtype:"bool"}),mI={kernelName:_t,backendName:"webgl",kernelFunc:fI},gI=QA({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Ag,dtype:"bool"}),AI={kernelName:Bt,backendName:"webgl",kernelFunc:gI},yI={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=yg(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},xI=PA({opSnippet:MA+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:xg}),bI={kernelName:Ft,backendName:"webgl",kernelFunc:xI},II=PA({opSnippet:MA+"\n  return log(1.0 + x);\n"}),vI={kernelName:Ot,backendName:"webgl",kernelFunc:II},CI=QA({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),wI={kernelName:Lt,backendName:"webgl",kernelFunc:CI},EI=PA({opSnippet:"return float(!(x >= 1.0));"}),SI={kernelName:Mt,backendName:"webgl",kernelFunc:EI},TI=QA({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),kI={kernelName:Pt,backendName:"webgl",kernelFunc:TI};class NI{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class RI{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const $I={kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:o,alpha:i,beta:u}=r,l=xe().getBool("WEBGL_PACK_NORMALIZATION")?new RI(a.shape,s,o,i,u):new NI(a.shape,s,o,i,u);return n.runWebGLProgram(l,[a],a.dtype)}};class _I{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const BI={kernelName:"LRNGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,p=new _I(a.shape,i,u,l,c);return n.runWebGLProgram(p,[a,s,o],a.dtype)}};function DI(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:o}=r,i=a.shape.length,u=X(s,a.shape);let l=u;const c=Cu(l,i),p=null!=c,d=n.shouldExecuteOnCPU([a]);let h=a;if(p){if(d){const e=n.texData.get(h.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=Kg(e,a.shape,a.dtype,c,t);h=n.makeTensorInfo(t,a.dtype),n.texData.get(h.dataId).values=r}else h=ty(a,c,n);l=Eu(l.length,i)}vu("max",l,i);const[f,m]=bu(h.shape,l);let g,A=f;if(o&&(A=Iu(f,u)),d){const e=n.texData.get(h.dataId).values,t=bg(e,z(m),A,a.dtype);g=n.makeTensorInfo(A,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=z(t),s=KA({inputs:{x:e},attrs:{shape:[z(e.shape)/a,a]},backend:r}),o=JA(s,e.dtype,"max",r),i=KA({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}(h,m,A,n);return p&&n.disposeIntermediateTensorInfo(h),g}const FI={kernelName:"Max",backendName:"webgl",kernelFunc:DI},OI=QA({opSnippet:wA+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+SA+"\n  return result;\n",cpuKernelImpl:Ig}),LI={kernelName:Qt,backendName:"webgl",kernelFunc:OI},MI={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Xh(a,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=r;G(bi(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const l=ci(a.shape,s,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&H(l.inShape,l.outShape))return kA({inputs:{x:a},backend:n});const c=new Qy(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},PI={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=pi(a.shape,s,o,[1,1,1],i,l,u),p=new Uy(c,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class QI{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UI{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,p=u-1-e.padInfo.top,d=l-1-e.padInfo.left,h=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GI={kernelName:"MaxPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,p=pi(o.shape,i,u,[1,1,1],l,c),d=new Uy(p,"max",!0),h=n.runWebGLProgram(d,[o],o.dtype),f=new UI(p),m=n.runWebGLProgram(f,[a,h],o.dtype);return n.disposeIntermediateTensorInfo(h),m}},VI={kernelName:"MaxPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:o}=t,i=s;Xh([s,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,d=ci(i.shape,u,l,1,c,p),h=new Qy(d,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new QI(d),g=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},WI={kernelName:Vt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:o,includeBatchInIndex:i}=t,u=n;G(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];G(bi(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=ci(r.shape,a,s,l,o),[p,d]=function(e,t,n,r){let a=new Qy(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Qy(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,i,c,u);return[p,d]}},zI={kernelName:Wt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,o=n,i=r.shape.length,u=X(s,r.shape);let l=u;const c=Cu(l,i),p=null!=c,d=o.shouldExecuteOnCPU([r]),h=[];let f=r;if(p){if(d){const e=o.texData.get(f.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=Kg(e,r.shape,r.dtype,c,t);f=o.makeTensorInfo(t,r.dtype),o.texData.get(f.dataId).values=n}else f=ty(r,c,o);h.push(f),l=Eu(l.length,i)}vu("sum",l,i);const[m,g]=bu(f.shape,l);let A=m;a&&(A=Iu(m,u));const y=function(e,t,n,r){const a=z(t),s=KA({inputs:{x:e},attrs:{shape:[z(e.shape)/a,a]},backend:r}),o=JA(s,"float32","mean",r),i=KA({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}(f,g,A,o);for(const e of h)o.disposeIntermediateTensorInfo(e);return y}},HI={kernelName:"Min",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,i=a.shape.length,u=X(s,a.shape);let l=u;const c=Cu(l,i);let p=a;null!=c&&(p=ay({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Eu(l.length,a.shape.length)),vu("min",l,i);const[d,h]=bu(p.shape,l),f=KA({inputs:{x:p},backend:n,attrs:{shape:[-1,z(h)]}}),m=JA(f,f.dtype,"min",n);let g;return g=KA(o?{inputs:{x:m},backend:n,attrs:{shape:Iu(d,u)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(p),g}},jI=QA({opSnippet:wA+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+SA+"\n  return result;\n",cpuKernelImpl:vg}),KI={kernelName:zt,backendName:"webgl",kernelFunc:jI};class qI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=mf(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class YI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=mf(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Xg("rc",r),u=Xg("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const XI={kernelName:Ht,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,o=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YI(r.shape,a,s):new qI(r.shape,a,s);return t.runWebGLProgram(o,[r],r.dtype)}},JI={kernelName:"Mod",backendName:"webgl",kernelFunc:QA({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+SA+"\n  return result;\n"})};class ZI{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const ev=QA({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),tv={kernelName:ct,backendName:"webgl",kernelFunc:ev},nv="return a - b;",rv=QA({opSnippet:nv,packedOpSnippet:nv,supportsComplex:!0,cpuKernelImpl:zg}),av={kernelName:zn,backendName:"webgl",kernelFunc:rv};function sv(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,o=X([s],a.shape),i=DI({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=Iu(i.shape,o),l=KA({inputs:{x:i},backend:n,attrs:{shape:u}}),c=rv({inputs:{a,b:l},backend:n}),p=Eb({inputs:{x:c},backend:n}),d=ny({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),h=KA({inputs:{x:d},backend:n,attrs:{shape:u}}),f=ev({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}const ov={kernelName:Bn,backendName:"webgl",kernelFunc:sv},iv={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,u=i?a:sv({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new ZI(l,c,s),d=[[o]],h=n.runWebGLProgram(p,[u],"int32",d);return i||n.disposeIntermediateTensorInfo(u),h}},uv=sA+"\n  return -x;\n",lv={kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=wg(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new yA(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new aA(r.shape,uv),n.runWebGLProgram(a,[r],r.dtype)}},cv=Tp,pv={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){or("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:p}=cv(l,c,o,i,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},dv=kp,hv={kernelName:Xt,backendName:"webgl",kernelFunc:function(e){or("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:d,validOutputs:h}=dv(c,p,o,i,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},fv=Np,mv={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){or("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),p=n.readSync(s.dataId),d=o,h=i,f=u,m=l,{selectedIndices:g,selectedScores:A}=fv(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([A.length],"float32",new Float32Array(A))]}};class gv{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Av={kernelName:en,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:o,onValue:i,offValue:u}=r,l=z(a.shape),c=new gv(l,o,i,u),p=KA({inputs:{x:a},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(c,[p],s);n.disposeIntermediateTensorInfo(p);const h=KA({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,o]}});return n.disposeIntermediateTensorInfo(d),h}};function yv(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=lx({inputs:{input:r},backend:n}),t=yv({inputs:{x:e},backend:n}),a=wx({inputs:{input:r},backend:n}),s=yv({inputs:{x:a},backend:n}),o=RA({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Ob({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const xv={kernelName:er,backendName:"webgl",kernelFunc:yv},bv={kernelName:Zt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=lx({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=wx({inputs:{input:a},backend:r}),o=yv({inputs:{x:s},backend:r}),i=RA({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return Ob({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},Iv={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Tb({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{V(s,e.shape,"All tensors passed to stack must have matching shapes"),G(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],u=t.map((e=>{const t=Tb({inputs:{input:e},backend:n,attrs:{dim:a}});return i.push(t),t})),l=Tx({inputs:u,backend:n,attrs:{axis:a}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class vv{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=mf(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Cv{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=mf(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Xg("rc",r),u=Xg("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${p[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const wv=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:o}=r;if(0===z(a.shape)){const e=s.map(((e,t)=>e[0]+a.shape[t]+e[1]));return Ob({backend:n,attrs:{shape:e,value:o,dtype:a.dtype}})}const i=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cv(a.shape,s,o):new vv(a.shape,s,o),u=[[o]];return n.runWebGLProgram(i,[a],a.dtype,u)},Ev={kernelName:nn,backendName:"webgl",kernelFunc:wv},Sv={kernelName:"Pow",backendName:"webgl",kernelFunc:QA({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+SA+"\n  return result;\n"})},Tv={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,i=a.shape.length,u=[],l=X(s,a.shape);let c=l;const p=Cu(c,i);let d,h=a;if(null!=p&&(h=ay({inputs:{x:a},backend:n,attrs:{perm:p}}),c=Eu(c.length,i),u.push(h)),vu("prod",c,i),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:r,outDtype:a}=Sg(h.shape,h.dtype,e,c);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=bu(h.shape,c),r=z(t),s=KA({inputs:{x:h},backend:n,attrs:{shape:[-1,r]}}),o=JA(s,ia(a.dtype),"prod",n);d=KA({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(s),u.push(o)}if(o){u.push(d);const e=Iu(d.shape,l);d=KA({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},kv={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=r,u=a.map((e=>n.readSync(e.dataId))),l=a.map((e=>e.shape)),c=n.readSync(s.dataId),p=n.readSync(o.dataId),[d,h,f]=Tg(u,l,c,s.shape,s.dtype,p,o.shape,i),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,h);return m.concat([g])}},Nv={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=kg(o,r.shape,r.dtype,i,a.shape,u,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}},Rv={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),p=n.readSync(o.dataId),d=i.map((e=>n.readSync(e.dataId))),h=i.map((e=>e.shape)),[f,m]=Ng(l,a.shape,c,s.shape,s.dtype,p,o.shape,d,h,u);return n.makeTensorInfo(f,s.dtype,m)}},$v=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=Rg(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},_v={kernelName:ln,backendName:"webgl",kernelFunc:$v},Bv=PA({opSnippet:"return 1.0 / x;"}),Dv={kernelName:pn,backendName:"webgl",kernelFunc:Bv},Fv=PA({opSnippet:sA+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Ov={kernelName:dn,backendName:"webgl",kernelFunc:Fv},Lv=PA({opSnippet:sA+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Mv={kernelName:gn,backendName:"webgl",kernelFunc:Lv};class Pv{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Qv{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Uv={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:i}=r,[u,l]=i,c=xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Qv(a.shape,u,l,s,o):new Pv(a.shape,u,l,s,o);return n.runWebGLProgram(c,[a],"float32")}};class Gv{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,d=1/c,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Vv={kernelName:"ResizeBilinearGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new Gv(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class Wv{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class zv{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Hv={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:i}=r,[u,l]=i,c=xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zv(a.shape,u,l,s,o):new Wv(a.shape,u,l,s,o);return n.runWebGLProgram(c,[a],a.dtype)}};class jv{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,d=1/c,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Kv={kernelName:"ResizeNearestNeighborGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new jv(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class qv{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=mf(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Yv{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Xg("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=mf(n);function i(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Xv={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,o=a.shape.length,i=X(s,a.shape);if(0===o)return kA({inputs:{x:a},backend:n});const u=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Yv(a.shape,i):new qv(a.shape,i);return n.runWebGLProgram(u,[a],a.dtype)}};class Jv{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Zv={kernelName:nr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:o}=t,i=n,u=new Jv(r.shape,s),[l,c]=vd(o,r.shape[1],r.shape[2]),p=[[l,c,Math.sin(a),Math.cos(a)]];return i.runWebGLProgram(u,[r],r.dtype,p)}},eC=PA({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),tC={kernelName:yn,backendName:"webgl",kernelFunc:eC},nC=PA({opSnippet:"return inversesqrt(x);",cpuKernelImpl:$g}),rC={kernelName:xn,backendName:"webgl",kernelFunc:nC};class aC{constructor(e,t,n,r,a,s,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const u=mf(a.length),l=mf(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const p=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${p});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class sC{constructor(e,t,n,r,a,s,o=!0,i=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const u=mf(a.length),l=mf(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const p=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`;let f="";i&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",A=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${p});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${A};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${h};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const oC={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=Lc(0,a,o),d=[p/l,l];if(0===p)return n.makeTensorInfo(o,a.dtype);const h=KA({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),f=KA({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=xe().getBool("WEBGL_PACK")?new sC(u,i,h.shape.length,f.shape.length,c,d):new aC(u,i,h.shape.length,f.shape.length,c,d);const A=n.runWebGLProgram(g,[f,h,m],f.dtype),y=KA({inputs:{x:A},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(m),y}};class iC{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===xe().getNumber("WEBGL_VERSION")?"while (left < right) {":a,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const uC={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:o}=r,i=new iC(a.shape[0],a.shape[1],s.shape[1],o),u=[[a.shape[1]]];return n.runWebGLProgram(i,[a,s],"int32",u)}};class lC{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=o.join()}const s=mf(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const cC={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,o=new lC(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[r,a,s],oa(a.dtype,s.dtype))}},pC=PA({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Nd};\n  float scale = ${Rd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),dC={kernelName:wn,backendName:"webgl",kernelFunc:pC},hC=PA({opSnippet:MA+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Bg}),fC={kernelName:kn,backendName:"webgl",kernelFunc:hC},mC=PA({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),gC={kernelName:Tn,backendName:"webgl",kernelFunc:mC},AC={kernelName:"Sin",backendName:"webgl",kernelFunc:PA({opSnippet:MA+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${SA}\n  return result;\n`})},yC=PA({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),xC={kernelName:Sn,backendName:"webgl",kernelFunc:yC},bC=PA({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),IC={kernelName:Nn,backendName:"webgl",kernelFunc:bC},vC={kernelName:$n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:o}=r;G(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=wv({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),p=Cd(c.shape,s,i,!1),d=wd(p.length,s.length,!1),h=Ed(c.shape,s,i,!1),f=KA({inputs:{x:c},backend:n,attrs:{shape:p}}),m=ay({inputs:{x:f},backend:n,attrs:{perm:d}}),g=KA({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},CC={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[p,d,h,f,m]=Og(i,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(d,r.dtype,p),n.makeTensorInfo([d[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},wC={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const o=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,p]=Lg(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}},EC={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Mg(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},SC={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Mg(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}},TC={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=Lc(0,a,i);if("string"===s.dtype){const e=n.bufferSync(a),t=n.bufferSync(s),r=Dr(n.readSync(o.dataId)[0]),h=_g(e,t,i,d,c,l,u,p,r,!1);return n.makeTensorInfo(i,h.dtype,h.values)}const h=new aC(l,u,a.shape.length,s.shape.length,p,[d,1],!1),f=n.runWebGLProgram(h,[s,a,o],s.dtype),m=KA({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}},kC={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:o}=r,i=X(o,a.shape)[0],u=th(a,s,i),l=a.shape.length,c=new Array(l).fill(0),p=a.shape.slice();return u.map((e=>{const t=[...p];t[i]=e;const r=tx({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r}))}},NC="return sqrt(x);",RC=PA({opSnippet:NC,packedOpSnippet:NC,cpuKernelImpl:Pg}),$C={kernelName:Rn,backendName:"webgl",kernelFunc:RC},_C={kernelName:"Square",backendName:"webgl",kernelFunc:PA({opSnippet:"return x * x;"})},BC="return (a - b) * (a - b);",DC=QA({opSnippet:BC,packedOpSnippet:BC}),FC={kernelName:Pn,backendName:"webgl",kernelFunc:DC},OC={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const s=Ah(n.readSync(a.dataId)),o=Qg(s,"string",r);return n.makeTensorInfo(a.shape,"string",o)}},LC={kernelName:tr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=sA+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new aA(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class MC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=mf(n.length),s=mf(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const PC={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:A,begin:y,end:x,strides:b}=qo(a.shape,s,o,i,u,l,c,p,d);let I;if(m)I=KA({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||A){G(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=Oo(y,x,b),t=tx({inputs:{x:a},backend:n,attrs:{begin:y,size:e}});I=KA({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=Rs(a.shape,a.dtype,e),r=Ug(h,t,b,y);I=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new MC(y,b,h);I=n.runWebGLProgram(e,[a],a.dtype)}const v=KA({inputs:{x:I},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(I),v}},QC={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=Gg(d,h,a,s,o,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},UC={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[l,c,p]=Vg(i,u,a),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}},GC={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=Wg(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},VC={kernelName:"Tan",backendName:"webgl",kernelFunc:PA({opSnippet:"return tan(x);"})},WC=PA({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),zC={kernelName:Hn,backendName:"webgl",kernelFunc:WC},HC={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:o}=t,{}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=Lc(0,s,a.shape),d=[p/l,l];if(0===p)return n.makeTensorInfo(a.shape,s.dtype);const h=KA({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=KA({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),m=KA({inputs:{x:a},backend:n,attrs:{shape:d}}),g=new aC(u,i,h.shape.length,f.shape.length,c,d,!1,!0),A=n.runWebGLProgram(g,[f,h,m],m.dtype),y=KA({inputs:{x:A},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(A),y}};class jC{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=mf(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function KC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Dr(e))):e,r=Rs(a.shape,a.dtype,t),o=Hg(r,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new jC(a.shape,s);return n.runWebGLProgram(o,[a],a.dtype)}const qC={kernelName:jn,backendName:"webgl",kernelFunc:KC};class YC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class XC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function JC(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function ZC(e){let t=1;for(;t<e;)t*=2;return t}const ew={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:o}=r,i=xe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=xe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<i||s>u){const e=n.readSync(a.dataId),[t,r]=jg(e,l,a.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,Ob({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,h=d?n.unpackTensor(a):a,f=z(l)/c,m=KA({inputs:{x:h},attrs:{shape:[f,c]},backend:n});d&&JC(n,h);const g=ZC(s),A=ZC(c);let y=null;const x=()=>null===y?[m,m]:[m,y],b=(e,t,r)=>{const a=x(),s=new YC(r),o=[[c],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=y;y=n.runWebGLProgram(s,a,"int32",o),JC(n,i)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)b(t,n,[f,A])}for(let e=A;e>g;e/=2){const t=x(),r=new XC([f,e/2]),a=[[c],[null===y?1:0],[g]],s=y;y=n.runWebGLProgram(r,t,"int32",a),JC(n,s);const o=g/2,i=2*o;for(let e=o;e>=1;e/=2)b(i,e,y.shape)}let I=y;y=tx({inputs:{x:y},backend:n,attrs:{begin:0,size:[f,s]}}),JC(n,I);let v=tI({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});JC(n,m);const C=l.slice(0,-1);C.push(s),I=y,y=KA({inputs:{x:y},attrs:{shape:C},backend:n}),JC(n,I);const w=v;return v=KA({inputs:{x:v},attrs:{shape:C},backend:n}),JC(n,w),[v,y]}};class tw{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const nw={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=r,[c,p,d,h]=a.shape,[f,m]=null!=l?l:[p,d],g=new tw(p,d,o,i,u,[c,f,m,h]);return n.runWebGLProgram(g,[a,s],"float32")}},rw={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Xh(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=qg(o,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},aw={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,u=a.shape[s],l=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==s&&(l[c++]=o.shape[e]);const p=[],d=new Array(i).fill(0),h=o.shape.slice();h[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){d[s]=e;const t=tx({inputs:{x:o},backend:n,attrs:{begin:d,size:h}}),r=KA({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class sw{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const ow={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:o}=r,i=a.shape.length,u=[];let l=0;const c=Cu([l],i);let p=a;null!=c&&(p=ay({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(p),l=Eu(1,i)[0]);const d=mh(p.shape,l,o),h=z([p.shape[l]]),f=KA({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});u.push(f);const m=ia(a.dtype),g=(e,t,r,a,s)=>{const o=e.shape[0],i=e.shape[1],l=fh(i,s),c=new sw({windowSize:l,inSize:i,batchSize:o,numSegments:s},t),p=n.compileAndRun(c,[e,r],a);if(u.push(p),p.shape[1]===s)return p;const d=$v({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),h=KC({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});return u.push(d),u.push(h),g(p,t,h,a,s)},A=KA({inputs:{x:g(f,"unsortedSegmentSum",s,m,o)},backend:n,attrs:{shape:d}});let y=A;if(null!=c){u.push(A);const e=wu(c);y=ay({inputs:{x:y},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},iw=[uy,cy,dy,fy,Ay,by,Iy,vy,ky,Ny,$y,By,Fy,Ly,Py,Gy,Vy,Hy,jy,Ky,Xy,rx,ax,sx,ox,px,fx,Ax,$A,bx,kx,Ox,Ux,Vx,Wx,zx,Hx,jx,qx,Xx,rb,ab,sb,ib,cb,hb,fb,gb,yb,xb,bb,Ib,Cb,wb,Sb,kb,$b,Db,Lb,Pb,Gb,Wb,jb,Yb,Xb,Zb,nI,aI,oI,NA,iI,Ex,lI,pI,hI,DA,mI,AI,yI,bI,vI,wI,SI,kI,$I,BI,FI,LI,MI,PI,GI,VI,WI,zI,HI,KI,XI,JI,iv,jA,lv,pv,hv,mv,ux,Av,bv,Iv,Ev,Sv,LA,Tv,kv,Nv,Rv,_v,cx,tv,Dv,Ov,Mv,qA,Uv,Vv,Hv,Kv,Xv,Zv,tC,rC,oC,uC,cC,dC,fC,gC,AC,xC,nx,ov,IC,vC,CC,wC,EC,SC,TC,kC,$C,_C,FC,OC,LC,PC,QC,UC,GC,av,ry,VC,zC,HC,qC,ew,nw,sy,rw,aw,ow,xv];for(const e of iw)hr(e);var uw,lw;xe().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(uw||(uw={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(lw||(lw={}));const cw={};function pw(e){return cw[e]}function dw(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return hw(t.inputNames[i],n,r,a);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>hw(e,n,r,a)))}const u=hw(t.inputNames[i],n,r,a),l=u.dataSync();return"number"===s.type?l[0]:le(u.shape,l)}const o=t.attrParams[e];return o&&o.value}function hw(e,t,n,r){const[a,s]=Aw(e,n);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[gw(a,e)]));return void 0!==o?t[gw(a,o)][s]:void 0}function fw(e,t,n){return t[gw(e,n.currentContextId)]}function mw(e,t){const[n,r,a]=Aw(e,t);return[gw(n,t&&t.currentContextId),r,a]}function gw(e,t){return t?`${e}-${t}`:e}function Aw(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let a;if(1===r.length)a=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function yw(e,t,n){let r=dw("pad",e,t,n);if("explicit"===r){r=dw("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function xw(e){return e.kept?e:_s(e)}const bw=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Iw=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vw=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Cw=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],ww=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Ew=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Sw=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Tw=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],kw=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Nw=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Rw=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],$w=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],_w=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Bw=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Dw=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Fw=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Ow=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Lw=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Mw=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class Pw{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[u,l,c,p,d,h,f,m,g,A,y,x,b,I,v,C,w,E,S].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(o);p.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=mw(e),s=o[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=mw(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=mw(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:o,inputs:i,outputs:u,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=pw(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=Uw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Uw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Xw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Xw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Vw(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Vw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Yw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Yw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Gw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Gw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Zw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Zw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=qw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=qw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Jw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Jw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=Hw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Hw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=jw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=jw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=zw(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=zw(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=mw(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Ww(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=mw(e),o=r[a];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=mw(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Qw(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=xe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Uw(e,t,n,r=!1){const a=e[t];return null!=a?Qw(a.s,r):n}function Gw(e,t,n){const r=e[t];return r?r.b:n}function Vw(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Ww(e){switch("string"==typeof e&&(e=uw[e]),e){case uw.DT_FLOAT:case uw.DT_HALF:return"float32";case uw.DT_INT32:case uw.DT_INT64:case uw.DT_INT8:case uw.DT_UINT8:return"int32";case uw.DT_BOOL:return"bool";case uw.DT_DOUBLE:return"float32";case uw.DT_STRING:return"string";default:return null}}function zw(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Hw(e,t,n){const r=e[t];return r&&r.type?Ww(r.type):n}function jw(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Ww(e))):n}function Kw(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function qw(e,t,n){const r=e[t];return r&&r.shape?Kw(r.shape):n}function Yw(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Xw(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>Qw(e,r))):n}function Jw(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Kw(e))):n}function Zw(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class eE{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return hw(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return hw(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Vw(this.node.rawAttrs,e,t);if(null!=n.s)return Uw(this.node.rawAttrs,e,t);if(null!=n.b)return Gw(this.node.rawAttrs,e,t);if(null!=n.shape)return qw(this.node.rawAttrs,e,t);if(null!=n.type)return Hw(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Yw(this.node.rawAttrs,e,t);if(null!=n.list.s)return Xw(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Jw(this.node.rawAttrs,e,t);if(null!=n.list.b)return Zw(this.node.rawAttrs,e,t);if(null!=n.list.type)return jw(this.node.rawAttrs,e,t)}return t}}function tE(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){G(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];G(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function nE(e){return"number"!=typeof e&&!e.some((e=>e<0))}function rE(e,t,n){let r=aE(e,n);const a=!nE(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=aE(e.shape,r)})),!nE(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function aE(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class sE{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Ks(0),Ls(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),tE(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Ls(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return $a([],[0].concat(this.elementShape));const n=this.readMany(e);return tE(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Ec(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return $a([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return tE(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ti(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Vc(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Fs((()=>{t=wi(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=wi(Ri(t,o,i),this.elementShape)}return s}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class oE{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);tE(t,e.shape,"TensorList shape mismatch: "),Ls(e)})),this.idTensor=Ks(0),this.maxNumElements=r,Ls(this.idTensor)}copy(){return new oE([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);tE(e,this.elementShape,"TensorList shape mismatch: ");const r=rE(this.elementShape,this.tensors,e);return Fs((()=>{const e=this.tensors.map((e=>wi(e,r)));return Ec(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=rE(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,tE(r.shape,e,"TensorList shape mismatch: "),wi(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(tE(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ls(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new oE([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);tE(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=rE(this.elementShape,this.tensors,t);return wi(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);tE(this.elementShape,t.shape,"TensorList shape mismatch: "),Ls(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);tE(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=rE(this.elementShape,this.tensors,n);return 0===e.length?$a([],[0].concat(r)):Fs((()=>{const t=e.map((e=>wi(this.tensors[e],r)));return Ec(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);tE(this.elementShape,t,"TensorList shape mismatch: ");const n=rE(this.elementShape,this.tensors,t);return 0===this.size()?$a([],[0].concat(n)):Fs((()=>{const e=this.tensors.map((e=>wi(e,n)));return Ti(e,0)}))}}function iE(e,t,n){const[r,a]=dw("fusedOps",e,t,n),s="biasadd"===r,o=!s,i="prelu"===a,u="fusedbatchnorm"===r,l=dw("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=dw("strides",e,t,n),p=yw(e,t,n),d=dw("dataFormat",e,t,n).toUpperCase(),h=dw("dilations",e,t,n);let[f,m]=dw("args",e,t,n);return o&&(m=f,f=void 0),{stride:c,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:dw("leakyreluAlpha",e,t,n)}}function uE(e,t,n){return{boxes:dw("boxes",e,t,n),scores:dw("scores",e,t,n),maxOutputSize:dw("maxOutputSize",e,t,n),iouThreshold:dw("iouThreshold",e,t,n),scoreThreshold:dw("scoreThreshold",e,t,n),softNmsSigma:dw("softNmsSigma",e,t,n)}}class lE{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ks(0),this.tensorMap=new Map,Ls(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ks(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Fs((()=>{const e=Vc(t),r=n.length,a=e.length;G(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];Ls(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Fs((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Ec(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function cE(e,t,n,r,a=Fs){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(dw("a",e,t,n),dw("b",e,t,n))];case"AddN":return[r.addN(dw("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(dw("a",e,t,n),dw("b",e,t,n))];case"Mul":return[r.mul(dw("a",e,t,n),dw("b",e,t,n))];case"RealDiv":case"Div":return[r.div(dw("a",e,t,n),dw("b",e,t,n))];case"DivNoNan":return[r.divNoNan(dw("a",e,t,n),dw("b",e,t,n))];case"FloorDiv":return[r.floorDiv(dw("a",e,t,n),dw("b",e,t,n))];case"Sub":return[r.sub(dw("a",e,t,n),dw("b",e,t,n))];case"Minimum":return[r.minimum(dw("a",e,t,n),dw("b",e,t,n))];case"Maximum":return[r.maximum(dw("a",e,t,n),dw("b",e,t,n))];case"Pow":return[r.pow(dw("a",e,t,n),dw("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(dw("a",e,t,n),dw("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(dw("x",e,t,n))];case"Acos":return[r.acos(dw("x",e,t,n))];case"Acosh":return[r.acosh(dw("x",e,t,n))];case"Asin":return[r.asin(dw("x",e,t,n))];case"Asinh":return[r.asinh(dw("x",e,t,n))];case"Atan":return[r.atan(dw("x",e,t,n))];case"Atan2":return[r.atan2(dw("x",e,t,n),dw("y",e,t,n))];case"Atanh":return[r.atanh(dw("x",e,t,n))];case"Ceil":return[r.ceil(dw("x",e,t,n))];case"Complex":return[r.complex(dw("real",e,t,n),dw("imag",e,t,n))];case"Cos":return[r.cos(dw("x",e,t,n))];case"Cosh":return[r.cosh(dw("x",e,t,n))];case"Elu":return[r.elu(dw("x",e,t,n))];case"Erf":return[r.erf(dw("x",e,t,n))];case"Exp":return[r.exp(dw("x",e,t,n))];case"Expm1":return[r.expm1(dw("x",e,t,n))];case"Floor":return[r.floor(dw("x",e,t,n))];case"Log":return[r.log(dw("x",e,t,n))];case"Log1p":return[r.log1p(dw("x",e,t,n))];case"Imag":return[r.imag(dw("x",e,t,n))];case"Neg":return[r.neg(dw("x",e,t,n))];case"Reciprocal":return[r.reciprocal(dw("x",e,t,n))];case"Real":return[r.real(dw("x",e,t,n))];case"Relu":return[r.relu(dw("x",e,t,n))];case"Round":return[r.round(dw("x",e,t,n))];case"Selu":return[r.selu(dw("x",e,t,n))];case"Sigmoid":return[r.sigmoid(dw("x",e,t,n))];case"Sin":return[r.sin(dw("x",e,t,n))];case"Sign":return[r.sign(dw("x",e,t,n))];case"Sinh":return[r.sinh(dw("x",e,t,n))];case"Softplus":return[r.softplus(dw("x",e,t,n))];case"Sqrt":return[r.sqrt(dw("x",e,t,n))];case"Square":return[r.square(dw("x",e,t,n))];case"Tanh":return[r.tanh(dw("x",e,t,n))];case"Tan":return[r.tan(dw("x",e,t,n))];case"ClipByValue":return[r.clipByValue(dw("x",e,t,n),dw("clipValueMin",e,t,n),dw("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(dw("x",e,t,n))];case"Rsqrt":return[r.rsqrt(hw(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(dw("x",e,t,n),dw("alpha",e,t,n))];case"Prelu":return[r.prelu(dw("x",e,t,n),dw("alpha",e,t,n))];case"IsNan":return[r.isNaN(hw(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(hw(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(hw(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=dw("thenBranch",e,t,n),a=dw("elseBranch",e,t,n),s=dw("cond",e,t,n),o=dw("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=dw("body",e,t,n),a=dw("cond",e,t,n),s=dw("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[xw(dw("pred",e,t,n))];case"Switch":{const r=dw("pred",e,t,n);let a=dw("data",e,t,n);return a.kept||(a=xw(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==hw(e,t,n)));return r?[xw(hw(r,t,n))]:void 0}case"Enter":{const r=dw("frameName",e,t,n),a=dw("tensor",e,t,n);return n.enterFrame(r),[xw(a)]}case"Exit":{const r=dw("tensor",e,t,n);return n.exitFrame(),[xw(r)]}case"NextIteration":{const r=dw("tensor",e,t,n);return n.nextIteration(),[xw(r)]}case"TensorArrayV3":{const r=dw("size",e,t,n),a=dw("dtype",e,t,n),s=dw("elementShape",e,t,n),o=dw("dynamicSize",e,t,n),i=dw("clearAfterRead",e,t,n),u=dw("identicalElementShapes",e,t,n),l=dw("name",e,t,n),c=new sE(l,a,r,s,u,o,i);return n.addTensorArray(c),[c.idTensor,Ks(1)]}case"TensorArrayWriteV3":{const r=dw("tensorArrayId",e,t,n),a=dw("index",e,t,n),s=dw("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=dw("tensorArrayId",e,t,n),a=dw("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=dw("tensorArrayId",e,t,n),a=dw("indices",e,t,n),s=dw("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=dw("tensorArrayId",e,t,n),a=dw("indices",e,t,n),s=dw("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=dw("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=dw("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=dw("tensorArrayId",e,t,n),a=dw("tensor",e,t,n),s=dw("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=dw("tensorArrayId",e,t,n);return[Ks(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=dw("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=dw("tensorListId",e,t,n),a=dw("index",e,t,n),s=dw("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=dw("tensorListId",e,t,n),a=dw("index",e,t,n),s=dw("elementShape",e,t,n),o=dw("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=dw("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new oE([],n,e.dtype,r),o=Vc(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(dw("tensor",e,t,n),r,dw("elementShape",e,t,n),dw("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=dw("elementShape",e,t,n),a=dw("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=dw(s,e,t,n),i=function(e,t,n,r){return new oE([],e,t,r)}(r,a,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=dw("tensorListId",e,t,n),a=dw("indices",e,t,n),s=dw("elementShape",e,t,n),o=dw("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=dw("tensorListId",e,t,n),a=dw("elementShape",e,t,n),s=dw("elementDType",e,t,n),o=dw("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);tE(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Vc(e);return new oE(a,t,r)}(dw("tensor",e,t,n),dw("elementShape",e,t,n),dw("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=dw("tensorListId",e,t,n),a=n.getTensorList(r.id),s=dw("dtype",e,t,n),o=dw("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=dw("tensorListId",e,t,n),a=dw("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=dw("tensorListId",e,t,n),a=dw("elementShape",e,t,n),s=dw("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=dw("tensor",e,t,n),a=dw("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=aE(e.shape.slice(1),n),o=0===r?0:e.size/r,i=Fs((()=>{const n=[];e=wi(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],o];n[r]=wi(Ri(e,i,u),s)}return e.dispose(),n})),u=new oE([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)u.setItem(e,i[e]);return u}(r,dw("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const r=dw("tensorListId",e,t,n);return[Ks(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=dw("tensorListId",e,t,n),a=dw("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"Conv1D":{const a=dw("stride",e,t,n),s=dw("pad",e,t,n),o=dw("dataFormat",e,t,n).toUpperCase(),i=dw("dilation",e,t,n);return[r.conv1d(dw("x",e,t,n),dw("filter",e,t,n),a,s,o,i)]}case"Conv2D":{const a=dw("strides",e,t,n),s=yw(e,t,n),o=dw("dataFormat",e,t,n).toUpperCase(),i=dw("dilations",e,t,n);return[r.conv2d(dw("x",e,t,n),dw("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:a,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=iE(e,t,n);return[r.fused.conv2d({x:dw("x",e,t,n),filter:dw("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:s,dataFormat:o,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=iE(e,t,n);return[r.fused.depthwiseConv2d({x:dw("x",e,t,n),filter:dw("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=dw("outputShape",e,t,n),s=dw("strides",e,t,n),o=yw(e,t,n);return[r.conv2dTranspose(dw("x",e,t,n),dw("filter",e,t,n),a,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=dw("strides",e,t,n),s=yw(e,t,n),o=dw("dilations",e,t,n),i=dw("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(dw("input",e,t,n),dw("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const a=dw("strides",e,t,n),s=dw("pad",e,t,n),o=dw("dataFormat",e,t,n).toUpperCase(),i=dw("dilations",e,t,n);return[r.conv3d(dw("x",e,t,n),dw("filter",e,t,n),[a[1],a[2],a[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const a=dw("strides",e,t,n),s=dw("pad",e,t,n),o=dw("kernelSize",e,t,n);return[r.avgPool(dw("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s)]}case"MaxPool":{const a=dw("strides",e,t,n),s=dw("pad",e,t,n),o=dw("kernelSize",e,t,n);return[r.maxPool(dw("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{const a=dw("strides",e,t,n),s=dw("pad",e,t,n),o=dw("kernelSize",e,t,n),i=dw("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax(dw("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s,i);return[u,l]}case"AvgPool3D":{const a=dw("strides",e,t,n),s=dw("pad",e,t,n),o=dw("kernelSize",e,t,n);return[r.avgPool3d(dw("x",e,t,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{const a=dw("strides",e,t,n),s=dw("pad",e,t,n),o=dw("kernelSize",e,t,n);return[r.maxPool3d(dw("x",e,t,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{const a=dw("strides",e,t,n),s=dw("pad",e,t,n),o=dw("dilations",e,t,n),i=a[1],u=a[2],l=o[1],c=o[2];return[r.dilation2d(dw("x",e,t,n),dw("filter",e,t,n),[i,u],s,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"Fill":{const a=dw("shape",e,t,n),s=dw("dtype",e,t,n),o=dw("value",e,t,n);return[r.fill(a,o,s)]}case"LinSpace":{const a=dw("start",e,t,n),s=dw("stop",e,t,n),o=dw("num",e,t,n);return[r.linspace(a,s,o)]}case"Multinomial":{const a=dw("logits",e,t,n),s=dw("numSamples",e,t,n),o=dw("seed",e,t,n);return[r.multinomial(a,s,o)]}case"OneHot":{const a=dw("indices",e,t,n),s=dw("depth",e,t,n),o=dw("onValue",e,t,n),i=dw("offValue",e,t,n),u=dw("dtype",e,t,n);return[r.oneHot(a,s,o,i,u)]}case"Ones":return[r.ones(dw("shape",e,t,n),dw("dtype",e,t,n))];case"OnesLike":return[r.onesLike(dw("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(dw("shape",e,t,n),dw("dtype",e,t,n),dw("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(dw("shape",e,t,n),dw("minval",e,t,n),dw("maxval",e,t,n),dw("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(dw("shape",e,t,n),dw("minval",e,t,n),dw("maxval",e,t,n),dw("seed",e,t,n))];case"Range":{const a=dw("start",e,t,n),s=dw("stop",e,t,n),o=dw("step",e,t,n);return[r.range(a,s,o,dw("dtype",e,t,n))]}case"TruncatedNormal":{const a=dw("shape",e,t,n),s=dw("mean",e,t,n),o=dw("stdDev",e,t,n),i=dw("seed",e,t,n);return[r.truncatedNormal(a,s,o,dw("dtype",e,t,n),i)]}case"Zeros":return[r.zeros(dw("shape",e,t,n),dw("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(dw("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,a=T)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=uE(e,t,n),c=await a.image.nonMaxSuppressionWithScoreAsync(r,s,o,i,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=uE(e,t,n),l=dw("padToMaxOutputSize",e,t,n),c=await a.image.nonMaxSuppressionPaddedAsync(r,s,o,i,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=uE(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,o,i,u)]}case"Where":{const r=a.cast(dw("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(dw("x",e,t,n),dw("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"LowerBound":{const a=dw("sortedSequence",e,t,n),s=dw("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{const a=dw("x",e,t,n),s=dw("k",e,t,n),o=dw("sorted",e,t,n),i=r.topk(a,s,o);return[i.values,i.indices]}case"UpperBound":{const a=dw("sortedSequence",e,t,n),s=dw("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{const a=dw("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{const a=dw("x",e,t,n),s=dw("axis",e,t,n),o=r.unique(a,s);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"ResizeBilinear":{const a=dw("images",e,t,n),s=dw("size",e,t,n),o=dw("alignCorners",e,t,n),i=dw("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const a=dw("images",e,t,n),s=dw("size",e,t,n),o=dw("alignCorners",e,t,n),i=dw("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],o,i)]}case"CropAndResize":{const a=dw("image",e,t,n),s=dw("boxes",e,t,n),o=dw("boxInd",e,t,n),i=dw("cropSize",e,t,n),u=dw("method",e,t,n),l=dw("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,o,i,u,l)]}case"ImageProjectiveTransformV3":{const a=dw("images",e,t,n),s=dw("transforms",e,t,n),o=dw("outputShape",e,t,n),i=dw("fillValue",e,t,n),u=dw("interpolation",e,t,n),l=dw("fillMode",e,t,n);return[r.image.transform(a,s,u.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const a=dw("default",e,t,n);return[hw(e.name,t,n)||a];case"Placeholder":return[hw(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[xw(dw("x",e,t,n))];case"IdentityN":return dw("x",e,t,n).map((e=>xw(e)));case"Shape":return[r.tensor1d(dw("x",e,t,n).shape,"int32")];case"ShapeN":return dw("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(dw("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(dw("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const s=dw("x",e,t,n),o=dw("data",e,t,n),i=dw("message",e,t,n),u=dw("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"Equal":return[r.equal(dw("a",e,t,n),dw("b",e,t,n))];case"NotEqual":return[r.notEqual(dw("a",e,t,n),dw("b",e,t,n))];case"Greater":return[r.greater(dw("a",e,t,n),dw("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(dw("a",e,t,n),dw("b",e,t,n))];case"Less":return[r.less(dw("a",e,t,n),dw("b",e,t,n))];case"LessEqual":return[r.lessEqual(dw("a",e,t,n),dw("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(dw("a",e,t,n),dw("b",e,t,n))];case"LogicalNot":return[r.logicalNot(dw("a",e,t,n))];case"LogicalOr":return[r.logicalOr(dw("a",e,t,n),dw("b",e,t,n))];case"Select":case"SelectV2":return[r.where(dw("condition",e,t,n),dw("a",e,t,n),dw("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(dw("a",e,t,n),dw("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(dw("a",e,t,n),dw("b",e,t,n),dw("transposeA",e,t,n),dw("transposeB",e,t,n))];case"Einsum":return[r.einsum(dw("equation",e,t,n),...dw("tensors",e,t,n))];case"Transpose":return[r.transpose(dw("x",e,t,n),dw("perm",e,t,n))];case"_FusedMatMul":const[a,s]=dw("fusedOps",e,t,n),o="biasadd"===a,i="prelu"===s,u=dw("numArgs",e,t,n),l=dw("leakyreluAlpha",e,t,n);if(o){if(i&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,p]=dw("args",e,t,n);return[r.fused.matMul({a:dw("a",e,t,n),b:dw("b",e,t,n),transposeA:dw("transposeA",e,t,n),transposeB:dw("transposeB",e,t,n),bias:c,activation:s,preluActivationWeights:p,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(dw("a",e,t,n),dw("numLower",e,t,n),dw("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(dw("x",e,t,n),dw("axis",e,t,n),dw("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(dw("x",e,t,n),dw("mean",e,t,n),dw("variance",e,t,n),dw("offset",e,t,n),dw("scale",e,t,n),dw("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(dw("x",e,t,n),dw("radius",e,t,n),dw("bias",e,t,n),dw("alpha",e,t,n),dw("beta",e,t,n))];case"Softmax":return[r.softmax(dw("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(dw("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(dw("paramsNestedSplits",e,t,n),dw("paramsDenseValues",e,t,n),dw("indices",e,t,n),dw("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(dw("starts",e,t,n),dw("limits",e,t,n),dw("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(dw("shape",e,t,n),dw("values",e,t,n),dw("defaultValue",e,t,n),dw("rowPartitionTensors",e,t,n),dw("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"Max":{const a=dw("axis",e,t,n),s=dw("keepDims",e,t,n);return[r.max(dw("x",e,t,n),a,s)]}case"Mean":{const a=dw("axis",e,t,n),s=dw("keepDims",e,t,n);return[r.mean(dw("x",e,t,n),a,s)]}case"Min":{const a=dw("axis",e,t,n),s=dw("keepDims",e,t,n);return[r.min(dw("x",e,t,n),a,s)]}case"Sum":{const a=dw("axis",e,t,n),s=dw("keepDims",e,t,n);return[r.sum(dw("x",e,t,n),a,s)]}case"All":{const a=dw("axis",e,t,n),s=dw("keepDims",e,t,n);return[r.all(dw("x",e,t,n),a,s)]}case"Any":{const a=dw("axis",e,t,n),s=dw("keepDims",e,t,n);return[r.any(dw("x",e,t,n),a,s)]}case"ArgMax":{const a=dw("axis",e,t,n);return[r.argMax(dw("x",e,t,n),a)]}case"ArgMin":{const a=dw("axis",e,t,n);return[r.argMin(dw("x",e,t,n),a)]}case"Prod":{const a=dw("axis",e,t,n),s=dw("keepDims",e,t,n);return[r.prod(dw("x",e,t,n),a,s)]}case"Cumprod":{const a=dw("axis",e,t,n),s=dw("exclusive",e,t,n),o=dw("reverse",e,t,n);return[r.cumprod(dw("x",e,t,n),a,s,o)]}case"Cumsum":{const a=dw("axis",e,t,n),s=dw("exclusive",e,t,n),o=dw("reverse",e,t,n);return[r.cumsum(dw("x",e,t,n),a,s,o)]}case"Bincount":const a=dw("x",e,t,n),s=dw("weights",e,t,n),o=dw("size",e,t,n);return[r.bincount(a,s,o)];case"DenseBincount":{const a=dw("x",e,t,n),s=dw("weights",e,t,n),o=dw("size",e,t,n),i=dw("binaryOutput",e,t,n);return[r.denseBincount(a,s,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"ConcatV2":case"Concat":{const a=dw("n",e,t,n),s=dw("axis",e,t,n);let o=dw("tensors",e,t,n);return o=o.slice(0,a),[r.concat(o,s)]}case"Gather":{const a=dw("x",e,t,n),s=dw("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{const a=dw("axis",e,t,n),s=dw("batchDims",e,t,n),o=dw("x",e,t,n),i=dw("indices",e,t,n);return[r.gather(o,r.cast(i,"int32"),a,s)]}case"Reverse":{const a=dw("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);const o=dw("x",e,t,n);return[r.reverse(o,s)]}case"ReverseV2":{const a=dw("axis",e,t,n),s=dw("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{const a=dw("begin",e,t,n),s=dw("size",e,t,n);return[r.slice(dw("x",e,t,n),a,s)]}case"StridedSlice":{const a=dw("begin",e,t,n),s=dw("end",e,t,n),o=dw("strides",e,t,n),i=dw("beginMask",e,t,n),u=dw("endMask",e,t,n),l=dw("ellipsisMask",e,t,n),c=dw("newAxisMask",e,t,n),p=dw("shrinkAxisMask",e,t,n),d=dw("x",e,t,n);return[r.stridedSlice(d,a,s,o,i,u,l,c,p)]}case"Pack":return Fs((()=>{const a=dw("axis",e,t,n),s=dw("tensors",e,t,n),o=s[0].shape,i=r.squeeze(s[0]).shape,u=s.map((e=>{const t=H(e.shape,o);if(!t&&!H(r.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,o)}));return[r.stack(u,a)]}));case"Unpack":{const a=dw("axis",e,t,n),s=dw("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{const a=dw("reps",e,t,n);return[r.tile(dw("x",e,t,n),a)]}case"Split":case"SplitV":{const a=dw("axis",e,t,n),s=dw("numOrSizeSplits",e,t,n),o=dw("x",e,t,n);return r.split(o,s,a)}case"ScatterNd":{const a=dw("indices",e,t,n),s=dw("values",e,t,n),o=dw("shape",e,t,n);return[r.scatterND(a,s,o)]}case"GatherNd":{const a=dw("x",e,t,n),s=dw("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{const a=dw("sparseIndices",e,t,n),s=dw("outputShape",e,t,n),o=dw("sparseValues",e,t,n),i=dw("defaultValue",e,t,n);return[r.sparseToDense(a,o,s,o.dtype===i.dtype?i:r.cast(i,o.dtype))]}case"TensorScatterUpdate":{const a=dw("indices",e,t,n),s=dw("values",e,t,n),o=dw("tensor",e,t,n);return[r.tensorScatterUpdate(o,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(dw("indices",e,t,n),dw("values",e,t,n),dw("denseShape",e,t,n),dw("defaultValue",e,t,n));return[a,s,o,i]}case"SparseReshape":{const{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(dw("inputIndices",e,t,n),dw("inputShape",e,t,n),dw("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(dw("data",e,t,n),dw("indices",e,t,n),dw("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(dw("data",e,t,n),dw("indices",e,t,n),dw("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"FFT":return[r.fft(dw("x",e,t,n))];case"IFFT":return[r.ifft(dw("x",e,t,n))];case"RFFT":return[r.rfft(dw("x",e,t,n))];case"IRFFT":return[r.irfft(dw("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(dw("input",e,t,n),dw("pattern",e,t,n),dw("rewrite",e,t,n),dw("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(dw("data",e,t,n),dw("dataSplits",e,t,n),dw("separator",e,t,n),dw("nGramWidths",e,t,n),dw("leftPad",e,t,n),dw("rightPad",e,t,n),dw("padWidth",e,t,n),dw("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{const{indices:a,values:s,shape:o}=r.string.stringSplit(dw("input",e,t,n),dw("delimiter",e,t,n),dw("skipEmpty",e,t,n));return[a,s,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(dw("input",e,t,n),dw("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return a((()=>((e,t,n,r=T)=>{switch(e.op){case"Cast":return[r.cast(dw("x",e,t,n),dw("dtype",e,t,n))];case"ExpandDims":{const a=dw("axis",e,t,n);return[r.expandDims(dw("x",e,t,n),a)]}case"Squeeze":{const a=dw("axis",e,t,n);return[r.squeeze(dw("x",e,t,n),a)]}case"Reshape":return[r.reshape(dw("x",e,t,n),dw("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(dw("x",e,t,n),dw("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(dw("x",e,t,n),dw("padding",e,t,n),dw("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(dw("x",e,t,n),dw("padding",e,t,n),dw("constantValue",e,t,n))];case"SpaceToBatchND":{const a=dw("blockShape",e,t,n),s=dw("paddings",e,t,n);return[r.spaceToBatchND(dw("x",e,t,n),a,s)]}case"BatchToSpaceND":{const a=dw("blockShape",e,t,n),s=dw("crops",e,t,n);return[r.batchToSpaceND(dw("x",e,t,n),a,s)]}case"DepthToSpace":{const a=dw("blockSize",e,t,n),s=dw("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(dw("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(dw("x",e,t,n),dw("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(dw("s0",e,t,n),dw("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{const a=dw("keyDType",e,t,n),s=dw("valueDType",e,t,n),o=new lE(a,s);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=dw("tableHandle",e,t,n,r),s=dw("keys",e,t,n),o=dw("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=dw("tableHandle",e,t,n,r),s=dw("keys",e,t,n),o=dw("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=dw("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=pw(e.op);if(s&&s.customExecutor)return s.customExecutor(new eE(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return me(s)?s.then((e=>[].concat(e))):[].concat(s)}class pE{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function dE(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const u=new Set,l=new Set(Object.keys(e).map((e=>Aw(e)[0])));r=r||[];const c=new Set(r.map((e=>Aw(e.name)[0]))),p=[...t];for(;p.length>0;){const e=p.pop();(AE(e)||yE(e)||xE(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(l.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}class hE extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const fE=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),mE=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),gE=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function AE(e){return fE.has(e.op)}function yE(e){return mE.has(e.op)}function xE(e){return gE.has(e.op)}class bE{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new bE(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=dE(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}const o=function(e,t){const{usedNodes:n,inputs:r}=t,a=Object.keys(r).map((e=>Aw(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"==typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const u=i([...a,...e.weights,...s]).filter(o),l=i([...u,...Object.values(e.nodes)]).filter(o),c=new Map(l.map((e=>[e.name,e]))),p={};for(const e of l){p[e.name]=p[e.name]||0;for(const t of e.children)o(t)||(p[t.name]=Number.POSITIVE_INFINITY),p[t.name]=(p[t.name]||0)+1}const d=Object.entries(p).filter((([,e])=>0===e)).map((([e])=>e)),h=[...d];for(;d.length>0;){const e=d.pop(),t=c.get(e);for(const e of t.children.filter(o))0==--p[e.name]&&(h.push(e.name),d.push(e.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),a=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!a.has(e.name)&&(a.add(e.name),r.push(e.name))}return e.filter((e=>a.has(e.name)))}(h.map((e=>c.get(e))),u);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),a=e=>r.has("string"==typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(o)){if(!n.has(e.name))throw new hE(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new hE(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(const e of t.inputs){if(!n.has(e.name))throw new hE(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new hE(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,u),f}(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>AE(e)?n:t)),a=e=>{const n=r[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(a).reduce(((e,t)=>Math.max(e,t)),r[t]))),o=new Map;for(let t=0;t<e.length;++t){const r=s[t];if(r===n)continue;const a=e[t],i=e[r];o.has(i.name)||o.set(i.name,[]),o.get(i.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Ls(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Aw(e)[0]])),a=t.map((e=>Aw(e)[0])),s=new Set(a);let o=a.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(r,o);let u=this.compiledMap.get(i);null==u&&(u=this.compile(e,o),this.compiledMap.set(i,u));try{this.keepIntermediateTensors=xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const l={},c={};return Fs((()=>{const n=new pE(this.weightMap,l,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[a,s]=Aw(t,n),o=[];o[s]=e[t],r[a]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(o))}));const a=this.getFrozenTensorIds(r),{orderedNodes:o,nodeLiveUntilMap:i}=u;for(const e of o){if(r[e.name])continue;const t=cE(e,r,n,this._resourceManager);if(me(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,i.get(e.name))}return null==this.parent&&n.dispose(a),t.map((e=>hw(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){if(!AE(t)&&!s.has(e)){for(const r of n[e])null!=r&&(o[r.id]=(o[r.id]||0)+t.children.length);for(const e of t.inputs){if(AE(e))continue;const t=fw(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||a.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function o(e){return AE(e)||a.has(e.name)}if(!AE(e)&&null!=s)for(const e of s){if(o(e))continue;const a=fw(e.name,t,n);for(const e of a)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const s=new pE(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>hw(e,o,s))),u=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[Aw(e)[0]])),o=n.map((e=>Aw(e)[0])),i=new Set(o);let u=o.map((e=>this.graph.nodes[e]));0===u.length&&(u=this._outputs);const{usedNodes:l,missingInputs:c,dynamicNode:p,syncInputs:d}=dE(e,u,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Aw(t),a=[];a[r]=e[t],f[n]=a}));const m={},g=this.getFrozenTensorIds(f),A={};for(;h.length>0;){const e=this.processStack(s,h,t,f,A,g,i,m,l);await Promise.all(e)}null!=p||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=u.filter((e=>!AE(e)&&!hw(e.name,f,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,a,s,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&dw("isConstant",e.node,r,n)&&([c]=mw(e.node.name,n)),null==r[e.node.name]){const p=cE(e.node,r,n,this._resourceManager);c||([c]=mw(e.node.name,n));const d=n.currentContext;me(p)?l.push(p.then((l=>(r[c]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(l)),n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(p)),this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[o]=mw(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!hw(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!hw(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Aw(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;G(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&G(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const a in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Aw(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Aw(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class IE{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class vE{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,n={},r=e){this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=r,null==n&&(this.loadOptions={}),this.resourceManager=new IE}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return me(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new bE(Pw.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Pw.Instance.transformGraph(e.modelInitializer);this.initializer=new bE(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof Jr?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Jr||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var a,s,o;const i=null===(o=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Os(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}const CE={format:"graph-model",generatedBy:"2.13.0",convertedBy:"TensorFlow.js Converter v4.10.0",signature:{inputs:{input:{name:"input:0",dtype:"DT_FLOAT",tensorShape:{dim:[{size:"1"},{size:"1"},{size:"-1"},{size:"-1"}]}}},outputs:{output:{name:"Identity:0",dtype:"DT_FLOAT",tensorShape:{dim:[{size:"1"},{size:"1"},{size:"-1"},{size:"-1"}]}}}},modelTopology:{node:[{name:"PartitionedCall/Const",op:"Const",attr:{dtype:{type:"DT_INT32"},value:{tensor:{dtype:"DT_INT32",tensorShape:{dim:[{size:"4"},{size:"2"}]}}}}},{name:"PartitionedCall/transpose_1/perm",op:"Const",attr:{dtype:{type:"DT_INT32"},value:{tensor:{dtype:"DT_INT32",tensorShape:{dim:[{size:"4"}]}}}}},{name:"PartitionedCall/split",op:"Const",attr:{dtype:{type:"DT_FLOAT"},value:{tensor:{dtype:"DT_FLOAT",tensorShape:{dim:[{size:"1"},{size:"7"},{size:"1"},{size:"1"}]}}}}},{name:"PartitionedCall/transpose_2/perm",op:"Const",attr:{value:{tensor:{dtype:"DT_INT32",tensorShape:{dim:[{size:"4"}]}}},dtype:{type:"DT_INT32"}}},{name:"PartitionedCall/Const_1",op:"Const",attr:{dtype:{type:"DT_INT32"},value:{tensor:{dtype:"DT_INT32",tensorShape:{dim:[{size:"4"},{size:"2"}]}}}}},{name:"PartitionedCall/transpose_4/perm",op:"Const",attr:{dtype:{type:"DT_INT32"},value:{tensor:{dtype:"DT_INT32",tensorShape:{dim:[{size:"4"}]}}}}},{name:"PartitionedCall/split_1",op:"Const",attr:{dtype:{type:"DT_FLOAT"},value:{tensor:{dtype:"DT_FLOAT",tensorShape:{dim:[{size:"7"},{size:"1"},{size:"1"},{size:"1"}]}}}}},{name:"PartitionedCall/transpose_5/perm",op:"Const",attr:{dtype:{type:"DT_INT32"},value:{tensor:{dtype:"DT_INT32",tensorShape:{dim:[{size:"4"}]}}}}},{name:"unknown_1",op:"Const",attr:{dtype:{type:"DT_FLOAT"},value:{tensor:{dtype:"DT_FLOAT",tensorShape:{dim:[{size:"1"}]}}}}},{name:"unknown_2",op:"Const",attr:{value:{tensor:{dtype:"DT_FLOAT",tensorShape:{dim:[{size:"1"}]}}},dtype:{type:"DT_FLOAT"}}},{name:"input",op:"Placeholder",attr:{shape:{shape:{dim:[{size:"1"},{size:"1"},{size:"-1"},{size:"-1"}]}},dtype:{type:"DT_FLOAT"}}},{name:"PartitionedCall/Pad",op:"Pad",input:["input","PartitionedCall/Const"],attr:{Tpaddings:{type:"DT_INT32"},T:{type:"DT_FLOAT"}}},{name:"PartitionedCall/onnx_tf_prefix_Mul_4",op:"Mul",input:["input","unknown_2"],attr:{T:{type:"DT_FLOAT"}}},{name:"PartitionedCall/transpose_1",op:"Transpose",input:["PartitionedCall/Pad","PartitionedCall/transpose_1/perm"],attr:{T:{type:"DT_FLOAT"},Tperm:{type:"DT_INT32"}}},{name:"PartitionedCall/convolution",op:"Conv2D",input:["PartitionedCall/transpose_1","PartitionedCall/split"],device:"/device:CPU:0",attr:{data_format:{s:"TkhXQw=="},use_cudnn_on_gpu:{b:!0},strides:{list:{i:["1","1","1","1"]}},T:{type:"DT_FLOAT"},padding:{s:"VkFMSUQ="},dilations:{list:{i:["1","1","1","1"]}},explicit_paddings:{list:{}}}},{name:"PartitionedCall/transpose_2",op:"Transpose",input:["PartitionedCall/convolution","PartitionedCall/transpose_2/perm"],attr:{Tperm:{type:"DT_INT32"},T:{type:"DT_FLOAT"}}},{name:"PartitionedCall/Pad_1",op:"Pad",input:["PartitionedCall/transpose_2","PartitionedCall/Const_1"],attr:{T:{type:"DT_FLOAT"},Tpaddings:{type:"DT_INT32"}}},{name:"PartitionedCall/transpose_4",op:"Transpose",input:["PartitionedCall/Pad_1","PartitionedCall/transpose_4/perm"],attr:{Tperm:{type:"DT_INT32"},T:{type:"DT_FLOAT"}}},{name:"PartitionedCall/convolution_1",op:"Conv2D",input:["PartitionedCall/transpose_4","PartitionedCall/split_1"],device:"/device:CPU:0",attr:{dilations:{list:{i:["1","1","1","1"]}},padding:{s:"VkFMSUQ="},use_cudnn_on_gpu:{b:!0},strides:{list:{i:["1","1","1","1"]}},explicit_paddings:{list:{}},data_format:{s:"TkhXQw=="},T:{type:"DT_FLOAT"}}},{name:"PartitionedCall/transpose_5",op:"Transpose",input:["PartitionedCall/convolution_1","PartitionedCall/transpose_5/perm"],attr:{T:{type:"DT_FLOAT"},Tperm:{type:"DT_INT32"}}},{name:"PartitionedCall/onnx_tf_prefix_Relu_2",op:"Relu",input:["PartitionedCall/transpose_5"],attr:{T:{type:"DT_FLOAT"}}},{name:"PartitionedCall/onnx_tf_prefix_Mul_3",op:"Mul",input:["PartitionedCall/onnx_tf_prefix_Relu_2","unknown_1"],attr:{T:{type:"DT_FLOAT"}}},{name:"PartitionedCall/onnx_tf_prefix_Add_5",op:"AddV2",input:["PartitionedCall/onnx_tf_prefix_Mul_3","PartitionedCall/onnx_tf_prefix_Mul_4"],attr:{T:{type:"DT_FLOAT"}}},{name:"Identity",op:"Identity",input:["PartitionedCall/onnx_tf_prefix_Add_5"],attr:{T:{type:"DT_FLOAT"}}}],library:{},versions:{producer:1482}},weightsManifest:[{paths:["group1-shard1of1.bin"],weights:[{name:"PartitionedCall/Const",shape:[4,2],dtype:"int32"},{name:"PartitionedCall/transpose_1/perm",shape:[4],dtype:"int32"},{name:"PartitionedCall/split",shape:[1,7,1,1],dtype:"float32"},{name:"PartitionedCall/transpose_2/perm",shape:[4],dtype:"int32"},{name:"PartitionedCall/Const_1",shape:[4,2],dtype:"int32"},{name:"PartitionedCall/transpose_4/perm",shape:[4],dtype:"int32"},{name:"PartitionedCall/split_1",shape:[7,1,1,1],dtype:"float32"},{name:"PartitionedCall/transpose_5/perm",shape:[4],dtype:"int32"},{name:"unknown_1",shape:[1],dtype:"float32"},{name:"unknown_2",shape:[1],dtype:"float32"}]}]},wE="#version 300 es\nprecision highp float;\nin vec3 clipSpacePos;\nin vec2 uv;\nout vec2 resultUV;\n\nvoid main() {\n  gl_Position = vec4(clipSpacePos, 1);\n  resultUV = uv;\n}";class EE{_observer;_float_window=[];_timer;_canvasFPStimer;enabled=!0;isRuning=!1;width=-1;height=-1;videoTexture=null;grayTexture=null;grayFbo=null;flipTexture=null;flipFbo=null;vertexBuffer=null;indexBuffer=null;vertexArray;videoProgram=null;grayProgram=null;unpackProgram=null;video=null;canvas=null;gl=null;model=null;backendName;static id=0;constructor(e){this._observer=e,this.backendName=`custom-webgl-${EE.id}`,EE.id++}async enable(){this.enabled=!0}async disable(){this.enabled=!1}async setMode(e){}async start(){let e=0,t=0;this._timer=setInterval((()=>{e>0&&this._observer.emit("stats",{time:Date.now(),rate:e,cost:Math.floor(t/e)}),e=0,t=0}),1e3);const n=this.gl;if(!n)throw new Error("Create webgl2 context failed");this.isRuning=!0;const r=async()=>{let r=performance.now();if(!(this.videoProgram&&this.grayProgram&&this.unpackProgram&&this.grayTexture&&this.model&&this.video))return;let a=this.video.videoWidth,s=this.video.videoHeight;this.width===(a%2!=0?a-1:a)&&this.height===(s%2!=0?s-1:s)||this.glResize(n,a,s),a=this.width,s=this.height,n.viewport(0,0,a,s),n.scissor(0,0,a,s),n.clearColor(0,0,0,1),n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT);const o=this.enabled?this.grayProgram:this.videoProgram;n.useProgram(o),n.bindVertexArray(this.vertexArray),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer),n.bindBuffer(n.ARRAY_BUFFER,this.vertexBuffer);let i=n.getAttribLocation(o,"clipSpacePos");if(n.bindBuffer(n.ARRAY_BUFFER,this.vertexBuffer),n.vertexAttribPointer(i,3,n.FLOAT,!1,20,0),n.enableVertexAttribArray(i),i=n.getAttribLocation(o,"uv"),n.bindBuffer(n.ARRAY_BUFFER,this.vertexBuffer),n.vertexAttribPointer(i,2,n.FLOAT,!1,20,12),n.enableVertexAttribArray(i),n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,this.videoTexture),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,a,s,0,n.RGBA,n.UNSIGNED_BYTE,this.video),n.bindFramebuffer(n.FRAMEBUFFER,this.grayFbo),n.drawArrays(n.TRIANGLE_STRIP,0,4),this.enabled){await Ms(this.backendName);const e=[1,1,s,a],t=$a({texture:this.grayTexture,height:s,width:a,channels:"R"},e),r=this.model.predict(t),o=r.getTexture();n.viewport(0,0,a,s),n.scissor(0,0,a,s),n.useProgram(this.unpackProgram),n.bindVertexArray(this.vertexArray),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer),n.bindBuffer(n.ARRAY_BUFFER,this.vertexBuffer),i=n.getAttribLocation(this.unpackProgram,"clipSpacePos"),n.bindBuffer(n.ARRAY_BUFFER,this.vertexBuffer),n.vertexAttribPointer(i,3,n.FLOAT,!1,20,0),n.enableVertexAttribArray(i),i=n.getAttribLocation(this.unpackProgram,"uv"),n.bindBuffer(n.ARRAY_BUFFER,this.vertexBuffer),n.vertexAttribPointer(i,2,n.FLOAT,!1,20,12),n.enableVertexAttribArray(i);const u=n.getUniformLocation(this.unpackProgram,"width");u&&n.uniform1i(u,a);const l=n.getUniformLocation(this.unpackProgram,"height");l&&n.uniform1i(l,s);const c=n.getUniformLocation(this.unpackProgram,"sr");n.uniform1i(c,0),n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,o);const p=n.getUniformLocation(this.unpackProgram,"yuv");n.uniform1i(p,1),n.activeTexture(n.TEXTURE1),n.bindTexture(n.TEXTURE_2D,this.grayTexture),n.bindFramebuffer(n.FRAMEBUFFER,this.flipFbo),n.drawArrays(n.TRIANGLE_STRIP,0,4),t.dispose(),r.dispose()}n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,this.enabled?this.flipFbo:this.grayFbo),n.blitFramebuffer(0,0,a,s,0,s,a,0,n.COLOR_BUFFER_BIT,n.LINEAR);let u=performance.now();e++,t+=u-r};if(this.video?.requestVideoFrameCallback){const e=()=>{this.isRuning&&this.video?.requestVideoFrameCallback(e.bind(this)),r.bind(this)()};this.video.requestVideoFrameCallback(e.bind(this))}else this._canvasFPStimer&&clearInterval(this._canvasFPStimer),this._canvasFPStimer=setInterval((()=>{r.bind(this)()}),66)}fillBlack(){const e=this.gl;e&&(e.viewport(0,0,this.width,this.height),e.scissor(0,0,this.width,this.height),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT))}async stop(e){this.isRuning=!1,clearInterval(this._timer),this._float_window=[],this._canvasFPStimer&&(clearInterval(this._canvasFPStimer),this._canvasFPStimer=void 0),this.video?.pause()}async newTrack(e){if(this.model||(this.gl=await this.lazyInit()),!this.gl)throw new Error("Create webgl2 context failed");let t={width:0,height:0};const n=this.video,r=navigator.userAgent.indexOf("Firefox")>-1;t=r?await new Promise(((t,r)=>{null!==n?(n.srcObject=new MediaStream([e]),n.oncanplay=()=>{n.onplaying=()=>{n.onplaying=null,t({width:n.videoWidth,height:n.videoHeight})},n.play(),n.oncanplay=null}):r("Failed to start video enhancing extension!")})):await new Promise(((t,n)=>{const r=()=>{const n=e.getSettings();void 0!==n.width&&void 0!==n.height?t({width:n.width,height:n.height}):setTimeout(r,100)};r()})),this.width===(t.width%2!=0?t.width-1:t.width)&&this.height===(t.height%2!=0?t.height-1:t.height)||this.glResize(this.gl,t.width,t.height),r||await new Promise(((t,r)=>{null!==n?(n.srcObject=new MediaStream([e]),n.oncanplay=()=>{n.onplaying=()=>{n.onplaying=null,t(null)},n.play(),n.oncanplay=null}):r("Failed to start video enhancing extension!")})),this.start();const a=this.canvas?.captureStream(),s=a?.getVideoTracks()[0];return void 0===s?null:s}async lazyInit(){dr("webgl").forEach((e=>{hr({...e,backendName:this.backendName})})),this.video=document.createElement("video"),this.video.style.display="none",this.video.setAttribute("playsinline",""),this.video.muted=!0,this.video.autoplay=!0,this.video.playsInline=!0,this.canvas=document.createElement("canvas");const t=this.canvas.getContext("webgl2",{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0,powerPreference:"high-performance"});if(!t)throw new Error("WebGL2 is not supported on this deivce");Ps(this.backendName,(()=>new CA(new Ff(t)))),await Ms(this.backendName);const n=this.base64ToArrayBuffer("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAgAAAAMAAAABAAAAL7qePAlIyT1CR2Y+1c2ZPkJHZj4JSMk9L7qePAAAAAADAAAAAQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAMAAAAAAAAAAAAAAAAAAAACAAAAAwAAAAEAAACFcwM97ifkPazEWj6Fcoo+rMRaPu4n5D2FcwM9AAAAAAMAAAABAAAAAgAAAP4dZ79/BPA/"),r={load:async()=>({modelTopology:CE.modelTopology,weightSpecs:CE.weightsManifest[0].weights,weightData:[n]})};return this.model=await async function(t,n={},r=e){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"==typeof t&&(t=function(e){return e.endsWith("/")||(e+="/"),`${e}model.json?tfjs-format=file`}(t));const a=new vE(t,n,r);return await a.load(),a}(r),this.videoProgram=this.createGlProgram(t,wE,"#version 300 es\nprecision mediump float;\n\nuniform sampler2D video;\n\nin highp vec2 resultUV;\nout vec4 out_color;\n\nvoid main() {\n  out_color = texture(video, resultUV).rgba;\n}"),this.grayProgram=this.createGlProgram(t,wE,"#version 300 es\nprecision mediump float;\n\nuniform sampler2D video;\n\nin highp vec2 resultUV;\nout vec4 out_color;\n\nvoid main() {\n  vec3 rgb = texture(video, resultUV).rgb;\n    \n  const highp mat3 yuvMat = mat3(0.256789, 0.504129, 0.097906,\n                            -0.148223, -0.290992, 0.439215,\n                            0.439215, -0.367789, -0.071426);\n  const highp vec3 offset = vec3(0.0625, 0.500, 0.500);\n\n  highp vec3 yuv = rgb * yuvMat + offset;\n  out_color = vec4(yuv, 1.0);\n}"),this.unpackProgram=this.createGlProgram(t,wE,"#version 300 es\nprecision mediump float;\n\nuniform sampler2D sr;\nuniform sampler2D yuv;\nuniform int width;\nuniform int height;\n\nin highp vec2 resultUV;\nout vec4 out_color;\nconst vec2 halfCR = vec2(0.5, 0.5);\n\nvoid main() {\n  vec2 resTexRC = vec2(resultUV.xy * vec2(width, height));\n\n  vec4 frag = texture(sr, resultUV);\n\n  vec2 modCoord = mod(resTexRC, 2.);\n\n  float gray = modCoord.y < 1. ?\n    (modCoord.x < 1. ? frag.r : frag.g) :\n    (modCoord.x < 1. ? frag.b : frag.a);\n\n  vec4 pixel = texture(yuv, resultUV);\n  vec3 yuvcolor = vec3(gray, pixel.g, pixel.b);\n\n  const highp mat3 rgbMat = mat3(1.164383,  0.000000,  1.596027,\n    1.164383, -0.391762, -0.812968,\n    1.164383,  2.017232,  0.000000);\n  const highp vec3 offset = vec3(0.0625, 0.500, 0.500);\n\n  out_color = vec4((yuvcolor - offset) * rgbMat, 1.0);\n}"),this.vertexBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,Float32Array.from([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]),t.STATIC_DRAW),this.indexBuffer=t.createBuffer(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,Float32Array.from([0,1,2,2,1,3]),t.STATIC_DRAW),this.vertexArray=t.createVertexArray(),t}base64ToArrayBuffer(e){for(var t=window.atob(e),n=t.length,r=new Uint8Array(n),a=0;a<n;a++)r[a]=t.charCodeAt(a);return r.buffer}async reset(){this.stop()}async release(){this.stop(),this.gl&&(this.grayFbo&&this.gl.deleteFramebuffer(this.grayFbo),this.flipFbo&&this.gl.deleteFramebuffer(this.flipFbo),this.videoTexture&&this.gl.deleteTexture(this.videoTexture),this.grayTexture&&this.gl.deleteTexture(this.grayTexture),this.flipTexture&&this.gl.deleteTexture(this.flipTexture)),this.video=null,this.canvas=null,this.gl=null}createTexture(e,t,n,r){let a=e.createTexture();return e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,r,t,n,0,r,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),a}createFrameBuffer(e,t){let n=e.createFramebuffer();return e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0),n}createProgram(e,t,n){const r=e.createProgram();if(!r)return null;if(e.attachShader(r,t),e.attachShader(r,n),e.linkProgram(r),!e.getProgramParameter(r,e.LINK_STATUS)){const t=e.getProgramInfoLog(r);return console.error("Error in program linking:"+t),e.deleteProgram(r),null}return r}loadShader(e,t,n){const r=e.createShader(n);if(!r)return null;if(e.shaderSource(r,t),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS)){const n=e.getShaderInfoLog(r);return console.error("*** Error compiling shader '"+r+"':"+n+"\n"+t.split("\n").map(((e,t)=>`${t+1}: ${e}`)).join("\n")),e.deleteShader(r),null}return r}createProgramFromSources(e,t,n){const r=this.loadShader(e,t,e.VERTEX_SHADER),a=this.loadShader(e,n,e.FRAGMENT_SHADER);return r&&a?this.createProgram(e,r,a):null}createGlProgram(e,t,n){let r=this.createProgramFromSources(e,t,n);return r?(e.bindAttribLocation(r,0,"position"),e.bindAttribLocation(r,1,"input_tex_coord"),r):null}glResize(e,t,n){this.width=t%2!=0?t-1:t,this.height=n%2!=0?n-1:n,this.video&&(this.video.width=t,this.video.height=n),this.canvas&&(this.canvas.width=t,this.canvas.height=n),this.grayFbo&&e.deleteFramebuffer(this.grayFbo),this.flipFbo&&e.deleteFramebuffer(this.flipFbo),this.videoTexture&&e.deleteTexture(this.videoTexture),this.grayTexture&&e.deleteTexture(this.grayTexture),this.flipTexture&&e.deleteTexture(this.flipTexture),this.videoTexture=this.createTexture(e,t,n,e.RGBA),this.grayTexture=this.createTexture(e,t,n,e.RGBA),this.grayTexture&&(this.grayFbo=this.createFrameBuffer(e,this.grayTexture)),this.flipTexture=this.createTexture(e,t,n,e.RGBA),this.flipTexture&&(this.flipFbo=this.createFrameBuffer(e,this.flipTexture))}}var SE=n(939);class TE{_observer;_trackProcessor;_trackGenerator;constructor(e){this._observer=e}get readableStream(){return this._trackProcessor?.readable}get writableStream(){return this._trackGenerator?.writable}async setMode(e){}async newTrack(e){return this._trackProcessor=new MediaStreamTrackProcessor({track:e}),this._trackGenerator=new MediaStreamTrackGenerator({kind:"video"}),this._trackGenerator}}const kE=n(246),NE="start",RE="stop",$E="enable",_E="disable",BE="ready";class DE{_observer;_worker;_worker_ready=!1;_internal_emiter=new SE.EventEmitter;_started=!1;_enabled=!1;_processing=!1;_dropCnt=0;_frameIdx=0;_mediaPipe;constructor(e){this._observer=e,this._worker=new kE,this._worker.onmessage=this.onWorkerMessage.bind(this),window.hasOwnProperty("MediaStreamTrackProcessor")&&window.hasOwnProperty("MediaStreamTrackGenerator")&&(this._mediaPipe=new TE(this._internal_emiter))}async enable(){if(!this._enabled)return new Promise(((e,t)=>{let n=()=>{};const r=setTimeout((()=>{n()}),3e3),a=()=>{clearTimeout(r),this._enabled=!0,e()};n=()=>{this._internal_emiter.off($E,a),this._worker?t("worker ENABLE timeout"):e()},this._internal_emiter.once($E,a),this._worker.postMessage({type:$E})}))}async disable(){if(this._enabled)return new Promise(((e,t)=>{this._worker||e();let n=()=>{};const r=setTimeout((()=>{n()}),3e3),a=()=>{clearTimeout(r),this._enabled=!1,e()};n=()=>{this._internal_emiter.off(_E,a),this._worker?t("worker DISABLE timeout"):e()},this._internal_emiter.once(_E,a),this._worker.postMessage({type:_E})}))}async setMode(e){}async start(e,t){if(!this._started)return new Promise(((n,r)=>{let a=()=>{};const s=setTimeout((()=>{a()}),3e3),o=()=>{clearTimeout(s),this._started=!0,n()};a=()=>{this._internal_emiter.off(NE,o),this._worker?r("worker START timeout"):n()},this._internal_emiter.once(NE,o),this._worker?.postMessage({type:NE,readableStream:e,writableStream:t},[e,t])}))}async stop(){if(this._started)return new Promise(((e,t)=>{let n=()=>{};const r=setTimeout((()=>{n()}),3e3),a=()=>{clearTimeout(r),this._started=!1,e()};n=()=>{this._internal_emiter.off(RE,a),this._worker?t("worker STOP timeout"):e()};var s=performance.now();this._internal_emiter.once(`${RE}${s}`,a),this._worker?.postMessage({type:RE,idx:s})}))}async handleImageData(e){return{skip:!0,img:e}}onWorkerMessage(e){e.data.type===NE||e.data.type===RE||e.data.type===$E||e.data.type===_E||"start2"===e.data.type?this._internal_emiter.emit(e.data.idx?`${e.data.type}${e.data.idx}`:e.data.type):"event"===e.data.type?"cost"===e.data.evt?this._observer.emit("stats",{time:Date.now(),rate:e.data.cnt,cost:e.data.avg,format:e.data.format}):e.data.evt===BE?(this._observer.emit(BE,e.data.stats),this._worker_ready=!0):"timeout"===e.data.evt||(e.data.evt.includes("frame-")||e.data.evt.includes("img-"))&&this._internal_emiter.emit(e.data.evt,e.data):"error"===e.data.type?(console.error("worker error",e.data.msg),this._observer.emit("error",e.data.msg)):"log"===e.data.type&&console.error("worker log",e.data.msg)}async newTrack(e){await this.stop();const t=await this._mediaPipe.newTrack(e);return await this.start(this._mediaPipe.readableStream,this._mediaPipe.writableStream),t}async reset(){return await this.disable(),this.stop()}async release(){await this.stop(),this._worker&&(this._worker.terminate(),this._worker=void 0)}}var FE;!function(e){e.ERROR="error",e.FIRST_VIDEO_FRAME="first-video-frame",e.SKIPFRAME="skip-frame",e.STATS="stats"}(FE||(FE={}));class OE extends B{name="SuperClarityProcessor";iscentry;_stats;_running=!1;_worker_insertable_enabled=!1;static numProcessor=0;static MaxProcessor=2;processed_track=null;emiter=new SE.EventEmitter;constructor(){super(),this._enabled=!1,this._worker_insertable_enabled="Worker"in window&&"MediaStreamTrackProcessor"in window&&"MediaStreamTrackGenerator"in window,this._worker_insertable_enabled?this.iscentry=new DE(this.emiter):this.iscentry=new EE(this.emiter),this.init()}on(e,t){super.on(e,t)}init(){D.info(`[${this.name}-${this.ID}] init`),this.emiter.on("stats",(e=>{this._stats=e;const t={enabled:this._enabled,time:this._enabled?this._stats.time:0,cost:this._enabled?this._stats.cost:-1,frameRate:this._enabled&&this._stats.rate?this._stats.rate:-1};e.format&&(t.format=e.format),this.emitAsPromiseNoResponse(FE.STATS,t)})),this.emiter.on("error",(e=>{this.emitAsPromiseNoResponse(FE.ERROR,e)})),this.emiter.on("ready",(e=>{this.emitAsPromiseNoResponse(FE.FIRST_VIDEO_FRAME,{...e,enabled:this._enabled})})),this.emiter.on("skip-frame",(e=>{this.emitAsPromiseNoResponse(FE.SKIPFRAME,{time:Date.now(),totalDropped:e})})),F.reportApiInvoke({name:`${this.name}.init`,options:"version:0.1.5-beta"}).onSuccess()}setMode(e){}version(){return"0.1.5-beta"}getStats(){return{enabled:this._enabled,costtime:this._enabled&&this._stats&&this._stats.cost?this._stats.cost:-1,frameRate:this._enabled&&this._stats&&this._stats.rate?this._stats.rate:-1}}async onEnableChange(e){if(e)if(this.processed_track&&this.context)if(this._running)this.output(this.processed_track,this.context);else{if(!(OE.numProcessor<OE.MaxProcessor))return this.emitAsPromiseNoResponse(FE.ERROR,"Limit max enabled processor number exceed"),void await this.disable();await(this.iscentry?.enable()),this._running=!0,OE.numProcessor++,this.output(this.processed_track,this.context)}else this.inputTrack&&this.context&&this.output(this.inputTrack,this.context);else!0===this._running&&(this._running=!1,OE.numProcessor--),this.inputTrack&&this.context&&this.output(this.inputTrack,this.context),await(this.iscentry?.disable()),this._stats={time:Date.now(),cost:-1,rate:-1}}onPiped(e){}async onUnpiped(){!0===this._running&&(this._running=!1,OE.numProcessor--),await(this.iscentry?.disable()),this._stats={time:Date.now(),cost:-1,rate:-1}}async onTrack(e,t){D.info(`[${this.name}-${this.ID}] onTrack`),"ended"!==e.readyState?(this.processed_track&&(await this.iscentry.reset(),this._running=!1,OE.numProcessor--),this.processed_track=await this.iscentry.newTrack(e),this.inputTrack=e,await this.onEnableChange(this.enabled)):D.debug(`[${this.name}-${this.ID}] MediaStreamTrack with 'ended' readyState was piped`)}async release(){return!0===this._running&&(this._running=!1,OE.numProcessor--),this.iscentry?.release()}}class LE extends _{constructor(){super()}_createProcessor(){return new OE}}window.SuperClarityExtension=LE})(),r})()));